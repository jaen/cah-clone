// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__27286__delegate = function (args){
return console.log.apply(console,(function (){var G__27285 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__27285) : cljs.core.into_array.call(null,G__27285));
})());
};
var G__27286 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27287__i = 0, G__27287__a = new Array(arguments.length -  0);
while (G__27287__i < G__27287__a.length) {G__27287__a[G__27287__i] = arguments[G__27287__i + 0]; ++G__27287__i;}
  args = new cljs.core.IndexedSeq(G__27287__a,0);
} 
return G__27286__delegate.call(this,args);};
G__27286.cljs$lang$maxFixedArity = 0;
G__27286.cljs$lang$applyTo = (function (arglist__27288){
var args = cljs.core.seq(arglist__27288);
return G__27286__delegate(args);
});
G__27286.cljs$core$IFn$_invoke$arity$variadic = G__27286__delegate;
return G__27286;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__27290 = x;
return goog.isString(G__27290);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__27292 = x__$1;
return goog.typeOf(G__27292);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__25727__auto__ = ty;
if(cljs.core.truth_(and__25727__auto__)){
return ty.cljs$lang$type;
} else {
return and__25727__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__27294 = obj;
return goog.typeOf(G__27294);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4404__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4404__auto__)){
var s = temp__4404__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__27296 = Symbol;
return goog.typeOf(G__27296);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__26626__auto___27298 = len;
var i_27299 = (0);
while(true){
if((i_27299 < n__26626__auto___27298)){
(new_arr[i_27299] = (arr[i_27299]));

var G__27300 = (i_27299 + (1));
i_27299 = G__27300;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__27301 = (i + (1));
i = G__27301;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__27310__delegate = function (array,i,idxs){
var G__27307 = aget;
var G__27308 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__27309 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__27307,G__27308,G__27309) : cljs.core.apply.call(null,G__27307,G__27308,G__27309));
};
var G__27310 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__27311__i = 0, G__27311__a = new Array(arguments.length -  2);
while (G__27311__i < G__27311__a.length) {G__27311__a[G__27311__i] = arguments[G__27311__i + 2]; ++G__27311__i;}
  idxs = new cljs.core.IndexedSeq(G__27311__a,0);
} 
return G__27310__delegate.call(this,array,i,idxs);};
G__27310.cljs$lang$maxFixedArity = 2;
G__27310.cljs$lang$applyTo = (function (arglist__27312){
var array = cljs.core.first(arglist__27312);
arglist__27312 = cljs.core.next(arglist__27312);
var i = cljs.core.first(arglist__27312);
var idxs = cljs.core.rest(arglist__27312);
return G__27310__delegate(array,i,idxs);
});
G__27310.cljs$core$IFn$_invoke$arity$variadic = G__27310__delegate;
return G__27310;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__27313 = null;
if (arguments.length > 2) {
var G__27314__i = 0, G__27314__a = new Array(arguments.length -  2);
while (G__27314__i < G__27314__a.length) {G__27314__a[G__27314__i] = arguments[G__27314__i + 2]; ++G__27314__i;}
G__27313 = new cljs.core.IndexedSeq(G__27314__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__27313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__27323__delegate = function (array,idx,idx2,idxv){
var G__27319 = aset;
var G__27320 = (array[idx]);
var G__27321 = idx2;
var G__27322 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__27319,G__27320,G__27321,G__27322) : cljs.core.apply.call(null,G__27319,G__27320,G__27321,G__27322));
};
var G__27323 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__27324__i = 0, G__27324__a = new Array(arguments.length -  3);
while (G__27324__i < G__27324__a.length) {G__27324__a[G__27324__i] = arguments[G__27324__i + 3]; ++G__27324__i;}
  idxv = new cljs.core.IndexedSeq(G__27324__a,0);
} 
return G__27323__delegate.call(this,array,idx,idx2,idxv);};
G__27323.cljs$lang$maxFixedArity = 3;
G__27323.cljs$lang$applyTo = (function (arglist__27325){
var array = cljs.core.first(arglist__27325);
arglist__27325 = cljs.core.next(arglist__27325);
var idx = cljs.core.first(arglist__27325);
arglist__27325 = cljs.core.next(arglist__27325);
var idx2 = cljs.core.first(arglist__27325);
var idxv = cljs.core.rest(arglist__27325);
return G__27323__delegate(array,idx,idx2,idxv);
});
G__27323.cljs$core$IFn$_invoke$arity$variadic = G__27323__delegate;
return G__27323;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__27326 = null;
if (arguments.length > 3) {
var G__27327__i = 0, G__27327__a = new Array(arguments.length -  3);
while (G__27327__i < G__27327__a.length) {G__27327__a[G__27327__i] = arguments[G__27327__i + 3]; ++G__27327__i;}
G__27326 = new cljs.core.IndexedSeq(G__27327__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__27326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__27333 = (function (a,x){
a.push(x);

return a;
});
var G__27334 = [];
var G__27335 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__27333,G__27334,G__27335) : cljs.core.reduce.call(null,G__27333,G__27334,G__27335));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__27336__i = 0, G__27336__a = new Array(arguments.length -  2);
while (G__27336__i < G__27336__a.length) {G__27336__a[G__27336__i] = arguments[G__27336__i + 2]; ++G__27336__i;}
  args = new cljs.core.IndexedSeq(G__27336__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__27337){
var obj = cljs.core.first(arglist__27337);
arglist__27337 = cljs.core.next(arglist__27337);
var s = cljs.core.first(arglist__27337);
var args = cljs.core.rest(arglist__27337);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj27339 = {};
return obj27339;
})();


cljs.core.IFn = (function (){var obj27341 = {};
return obj27341;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27387 = x__26383__auto__;
return goog.typeOf(G__27387);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27389 = x__26383__auto__;
return goog.typeOf(G__27389);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27391 = x__26383__auto__;
return goog.typeOf(G__27391);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27393 = x__26383__auto__;
return goog.typeOf(G__27393);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27395 = x__26383__auto__;
return goog.typeOf(G__27395);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27397 = x__26383__auto__;
return goog.typeOf(G__27397);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27399 = x__26383__auto__;
return goog.typeOf(G__27399);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27401 = x__26383__auto__;
return goog.typeOf(G__27401);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27403 = x__26383__auto__;
return goog.typeOf(G__27403);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27405 = x__26383__auto__;
return goog.typeOf(G__27405);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27407 = x__26383__auto__;
return goog.typeOf(G__27407);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27409 = x__26383__auto__;
return goog.typeOf(G__27409);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27411 = x__26383__auto__;
return goog.typeOf(G__27411);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27413 = x__26383__auto__;
return goog.typeOf(G__27413);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27415 = x__26383__auto__;
return goog.typeOf(G__27415);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27417 = x__26383__auto__;
return goog.typeOf(G__27417);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27419 = x__26383__auto__;
return goog.typeOf(G__27419);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27421 = x__26383__auto__;
return goog.typeOf(G__27421);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27423 = x__26383__auto__;
return goog.typeOf(G__27423);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27425 = x__26383__auto__;
return goog.typeOf(G__27425);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27427 = x__26383__auto__;
return goog.typeOf(G__27427);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._invoke[(function (){var G__27429 = x__26383__auto__;
return goog.typeOf(G__27429);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._invoke["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj27431 = {};
return obj27431;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__25727__auto__ = value;
if(and__25727__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__25727__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__26383__auto__ = (((value == null))?null:value);
return (function (){var or__25739__auto__ = (cljs.core._clone[(function (){var G__27435 = x__26383__auto__;
return goog.typeOf(G__27435);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._clone["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj27437 = {};
return obj27437;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._count[(function (){var G__27441 = x__26383__auto__;
return goog.typeOf(G__27441);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._count["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj27443 = {};
return obj27443;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._empty[(function (){var G__27447 = x__26383__auto__;
return goog.typeOf(G__27447);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._empty["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj27449 = {};
return obj27449;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._conj[(function (){var G__27453 = x__26383__auto__;
return goog.typeOf(G__27453);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._conj["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj27455 = {};
return obj27455;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._nth[(function (){var G__27461 = x__26383__auto__;
return goog.typeOf(G__27461);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._nth["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._nth[(function (){var G__27463 = x__26383__auto__;
return goog.typeOf(G__27463);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._nth["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj27465 = {};
return obj27465;
})();


cljs.core.ISeq = (function (){var obj27467 = {};
return obj27467;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._first[(function (){var G__27471 = x__26383__auto__;
return goog.typeOf(G__27471);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._first["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._rest[(function (){var G__27475 = x__26383__auto__;
return goog.typeOf(G__27475);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._rest["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj27477 = {};
return obj27477;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._next[(function (){var G__27481 = x__26383__auto__;
return goog.typeOf(G__27481);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._next["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj27483 = {};
return obj27483;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._lookup[(function (){var G__27489 = x__26383__auto__;
return goog.typeOf(G__27489);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._lookup["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._lookup[(function (){var G__27491 = x__26383__auto__;
return goog.typeOf(G__27491);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._lookup["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj27493 = {};
return obj27493;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__27497 = x__26383__auto__;
return goog.typeOf(G__27497);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._assoc[(function (){var G__27501 = x__26383__auto__;
return goog.typeOf(G__27501);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._assoc["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj27503 = {};
return obj27503;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._dissoc[(function (){var G__27507 = x__26383__auto__;
return goog.typeOf(G__27507);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._dissoc["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj27509 = {};
return obj27509;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._key[(function (){var G__27513 = x__26383__auto__;
return goog.typeOf(G__27513);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._key["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._val[(function (){var G__27517 = x__26383__auto__;
return goog.typeOf(G__27517);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._val["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj27519 = {};
return obj27519;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._disjoin[(function (){var G__27523 = x__26383__auto__;
return goog.typeOf(G__27523);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._disjoin["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj27525 = {};
return obj27525;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._peek[(function (){var G__27529 = x__26383__auto__;
return goog.typeOf(G__27529);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._peek["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._pop[(function (){var G__27533 = x__26383__auto__;
return goog.typeOf(G__27533);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._pop["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj27535 = {};
return obj27535;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._assoc_n[(function (){var G__27539 = x__26383__auto__;
return goog.typeOf(G__27539);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj27541 = {};
return obj27541;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._deref[(function (){var G__27545 = x__26383__auto__;
return goog.typeOf(G__27545);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._deref["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj27547 = {};
return obj27547;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._deref_with_timeout[(function (){var G__27551 = x__26383__auto__;
return goog.typeOf(G__27551);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj27553 = {};
return obj27553;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._meta[(function (){var G__27557 = x__26383__auto__;
return goog.typeOf(G__27557);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._meta["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj27559 = {};
return obj27559;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._with_meta[(function (){var G__27563 = x__26383__auto__;
return goog.typeOf(G__27563);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._with_meta["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj27565 = {};
return obj27565;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._reduce[(function (){var G__27571 = x__26383__auto__;
return goog.typeOf(G__27571);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._reduce["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._reduce[(function (){var G__27573 = x__26383__auto__;
return goog.typeOf(G__27573);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._reduce["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj27575 = {};
return obj27575;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._kv_reduce[(function (){var G__27579 = x__26383__auto__;
return goog.typeOf(G__27579);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj27581 = {};
return obj27581;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._equiv[(function (){var G__27585 = x__26383__auto__;
return goog.typeOf(G__27585);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._equiv["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj27587 = {};
return obj27587;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._hash[(function (){var G__27591 = x__26383__auto__;
return goog.typeOf(G__27591);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._hash["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj27593 = {};
return obj27593;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._seq[(function (){var G__27597 = x__26383__auto__;
return goog.typeOf(G__27597);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._seq["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj27599 = {};
return obj27599;
})();


cljs.core.IList = (function (){var obj27601 = {};
return obj27601;
})();


cljs.core.IRecord = (function (){var obj27603 = {};
return obj27603;
})();


cljs.core.IReversible = (function (){var obj27605 = {};
return obj27605;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._rseq[(function (){var G__27609 = x__26383__auto__;
return goog.typeOf(G__27609);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._rseq["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj27611 = {};
return obj27611;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._sorted_seq[(function (){var G__27615 = x__26383__auto__;
return goog.typeOf(G__27615);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._sorted_seq_from[(function (){var G__27619 = x__26383__auto__;
return goog.typeOf(G__27619);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._entry_key[(function (){var G__27623 = x__26383__auto__;
return goog.typeOf(G__27623);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._entry_key["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._comparator[(function (){var G__27627 = x__26383__auto__;
return goog.typeOf(G__27627);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._comparator["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj27629 = {};
return obj27629;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__25727__auto__ = writer;
if(and__25727__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__25727__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__26383__auto__ = (((writer == null))?null:writer);
return (function (){var or__25739__auto__ = (cljs.core._write[(function (){var G__27633 = x__26383__auto__;
return goog.typeOf(G__27633);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._write["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__25727__auto__ = writer;
if(and__25727__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__25727__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__26383__auto__ = (((writer == null))?null:writer);
return (function (){var or__25739__auto__ = (cljs.core._flush[(function (){var G__27637 = x__26383__auto__;
return goog.typeOf(G__27637);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._flush["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj27639 = {};
return obj27639;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._pr_writer[(function (){var G__27643 = x__26383__auto__;
return goog.typeOf(G__27643);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj27645 = {};
return obj27645;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__25727__auto__ = d;
if(and__25727__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__25727__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__26383__auto__ = (((d == null))?null:d);
return (function (){var or__25739__auto__ = (cljs.core._realized_QMARK_[(function (){var G__27649 = x__26383__auto__;
return goog.typeOf(G__27649);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj27651 = {};
return obj27651;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._notify_watches[(function (){var G__27655 = x__26383__auto__;
return goog.typeOf(G__27655);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._add_watch[(function (){var G__27659 = x__26383__auto__;
return goog.typeOf(G__27659);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._add_watch["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__25727__auto__ = this$;
if(and__25727__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__25727__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__26383__auto__ = (((this$ == null))?null:this$);
return (function (){var or__25739__auto__ = (cljs.core._remove_watch[(function (){var G__27663 = x__26383__auto__;
return goog.typeOf(G__27663);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj27665 = {};
return obj27665;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._as_transient[(function (){var G__27669 = x__26383__auto__;
return goog.typeOf(G__27669);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._as_transient["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj27671 = {};
return obj27671;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._conj_BANG_[(function (){var G__27675 = x__26383__auto__;
return goog.typeOf(G__27675);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._persistent_BANG_[(function (){var G__27679 = x__26383__auto__;
return goog.typeOf(G__27679);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj27681 = {};
return obj27681;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._assoc_BANG_[(function (){var G__27685 = x__26383__auto__;
return goog.typeOf(G__27685);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj27687 = {};
return obj27687;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__27691 = x__26383__auto__;
return goog.typeOf(G__27691);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj27693 = {};
return obj27693;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__27697 = x__26383__auto__;
return goog.typeOf(G__27697);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._pop_BANG_[(function (){var G__27701 = x__26383__auto__;
return goog.typeOf(G__27701);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj27703 = {};
return obj27703;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__25727__auto__ = tcoll;
if(and__25727__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__26383__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__25739__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__27707 = x__26383__auto__;
return goog.typeOf(G__27707);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj27709 = {};
return obj27709;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__25727__auto__ = x;
if(and__25727__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__25727__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__26383__auto__ = (((x == null))?null:x);
return (function (){var or__25739__auto__ = (cljs.core._compare[(function (){var G__27713 = x__26383__auto__;
return goog.typeOf(G__27713);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._compare["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj27715 = {};
return obj27715;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._drop_first[(function (){var G__27719 = x__26383__auto__;
return goog.typeOf(G__27719);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._drop_first["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj27721 = {};
return obj27721;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._chunked_first[(function (){var G__27725 = x__26383__auto__;
return goog.typeOf(G__27725);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._chunked_rest[(function (){var G__27729 = x__26383__auto__;
return goog.typeOf(G__27729);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj27731 = {};
return obj27731;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._chunked_next[(function (){var G__27735 = x__26383__auto__;
return goog.typeOf(G__27735);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj27737 = {};
return obj27737;
})();

cljs.core._name = (function _name(x){
if((function (){var and__25727__auto__ = x;
if(and__25727__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__25727__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__26383__auto__ = (((x == null))?null:x);
return (function (){var or__25739__auto__ = (cljs.core._name[(function (){var G__27741 = x__26383__auto__;
return goog.typeOf(G__27741);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._name["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__25727__auto__ = x;
if(and__25727__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__25727__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__26383__auto__ = (((x == null))?null:x);
return (function (){var or__25739__auto__ = (cljs.core._namespace[(function (){var G__27745 = x__26383__auto__;
return goog.typeOf(G__27745);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._namespace["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj27747 = {};
return obj27747;
})();


cljs.core.IReset = (function (){var obj27749 = {};
return obj27749;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._reset_BANG_[(function (){var G__27753 = x__26383__auto__;
return goog.typeOf(G__27753);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj27755 = {};
return obj27755;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._swap_BANG_[(function (){var G__27765 = x__26383__auto__;
return goog.typeOf(G__27765);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._swap_BANG_[(function (){var G__27767 = x__26383__auto__;
return goog.typeOf(G__27767);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._swap_BANG_[(function (){var G__27769 = x__26383__auto__;
return goog.typeOf(G__27769);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._swap_BANG_[(function (){var G__27771 = x__26383__auto__;
return goog.typeOf(G__27771);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj27773 = {};
return obj27773;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__25727__auto__ = o;
if(and__25727__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__25727__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__26383__auto__ = (((o == null))?null:o);
return (function (){var or__25739__auto__ = (cljs.core._vreset_BANG_[(function (){var G__27777 = x__26383__auto__;
return goog.typeOf(G__27777);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj27779 = {};
return obj27779;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__25727__auto__ = coll;
if(and__25727__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__25727__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__26383__auto__ = (((coll == null))?null:coll);
return (function (){var or__25739__auto__ = (cljs.core._iterator[(function (){var G__27783 = x__26383__auto__;
return goog.typeOf(G__27783);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._iterator["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__27786 = (4294967295);
var G__27787 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__27786,G__27787) : Math.imul.call(null,G__27786,G__27787));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__27790 = a;
var G__27791 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__27790,G__27791) : Math.imul.call(null,G__27790,G__27791));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__27792 = (i + (2));
var G__27793 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__27792;
h1 = G__27793;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj27795 = {};
return obj27795;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__27796 = (i + (1));
var G__27797 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__27796;
hash = G__27797;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj27801 = {};
return obj27801;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__27804 = o;
if(G__27804){
var bit__26413__auto__ = (G__27804.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__26413__auto__) || (G__27804.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__27805 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27805) : Math.floor.call(null,G__27805));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__25727__auto__ = cljs.core.not(a.ns);
if(and__25727__auto__){
return b.ns;
} else {
return and__25727__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__27812 = a.ns;
var G__27813 = b.ns;
return goog.array.defaultCompare(G__27812,G__27813);
})();
if(((0) === nsc)){
var G__27814 = a.name;
var G__27815 = b.name;
return goog.array.defaultCompare(G__27814,G__27815);
} else {
return nsc;
}
}
} else {
var G__27816 = a.name;
var G__27817 = b.name;
return goog.array.defaultCompare(G__27816,G__27817);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__26160__auto__ = self__._hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__27819 = null;
var G__27819__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__27819__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__27819 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__27819__2.call(this,self__,coll);
case 3:
return G__27819__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27819.cljs$core$IFn$_invoke$arity$2 = G__27819__2;
G__27819.cljs$core$IFn$_invoke$arity$3 = G__27819__3;
return G__27819;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args27818){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27818)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__27823 = x;
if(G__27823){
var bit__26420__auto__ = null;
if(cljs.core.truth_((function (){var or__25739__auto__ = bit__26420__auto__;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return G__27823.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__27823.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__27823);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__27823);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__27825 = value;
if(G__27825){
var bit__26420__auto__ = (G__27825.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__26420__auto__) || (G__27825.cljs$core$ICloneable$)){
return true;
} else {
if((!G__27825.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__27825);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__27825);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27827 = coll;
if(G__27827){
var bit__26413__auto__ = (G__27827.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__26413__auto__) || (G__27827.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27829 = coll;
if(G__27829){
var bit__26413__auto__ = (G__27829.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__26413__auto__) || (G__27829.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__27831 = coll;
if(G__27831){
var bit__26413__auto__ = (G__27831.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__26413__auto__) || (G__27831.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__27833 = coll;
if(G__27833){
var bit__26413__auto__ = (G__27833.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__26413__auto__) || (G__27833.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__27838__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__27839 = y;
var G__27840 = cljs.core.first(more);
var G__27841 = cljs.core.next(more);
x = G__27839;
y = G__27840;
more = G__27841;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__27838 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__27842__i = 0, G__27842__a = new Array(arguments.length -  2);
while (G__27842__i < G__27842__a.length) {G__27842__a[G__27842__i] = arguments[G__27842__i + 2]; ++G__27842__i;}
  more = new cljs.core.IndexedSeq(G__27842__a,0);
} 
return G__27838__delegate.call(this,x,y,more);};
G__27838.cljs$lang$maxFixedArity = 2;
G__27838.cljs$lang$applyTo = (function (arglist__27843){
var x = cljs.core.first(arglist__27843);
arglist__27843 = cljs.core.next(arglist__27843);
var y = cljs.core.first(arglist__27843);
var more = cljs.core.rest(arglist__27843);
return G__27838__delegate(x,y,more);
});
G__27838.cljs$core$IFn$_invoke$arity$variadic = G__27838__delegate;
return G__27838;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__27844 = null;
if (arguments.length > 2) {
var G__27845__i = 0, G__27845__a = new Array(arguments.length -  2);
while (G__27845__i < G__27845__a.length) {G__27845__a[G__27845__i] = arguments[G__27845__i + 2]; ++G__27845__i;}
G__27844 = new cljs.core.IndexedSeq(G__27845__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__27844);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__27846 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__27846) : cljs.core.es6_iterator_seq.call(null,G__27846));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__27847 = (n + (1));
var G__27848 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__27849 = cljs.core.next(coll__$1);
n = G__27847;
hash_code = G__27848;
coll__$1 = G__27849;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__27850 = (n + (1));
var G__27851 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__27852 = cljs.core.next(coll__$1);
n = G__27850;
hash_code = G__27851;
coll__$1 = G__27852;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__27853 = o;
return goog.getUid(G__27853);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__27855 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27855) : cljs.core.deref.call(null,G__27855));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__27862 = val;
var G__27863 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27862,G__27863) : f.call(null,G__27862,G__27863));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27868 = nval;
var G__27869 = (n + (1));
val = G__27868;
n = G__27869;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__27864 = val__$1;
var G__27865 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27864,G__27865) : f.call(null,G__27864,G__27865));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27870 = nval;
var G__27871 = (n + (1));
val__$1 = G__27870;
n = G__27871;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__27866 = val__$1;
var G__27867 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27866,G__27867) : f.call(null,G__27866,G__27867));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27872 = nval;
var G__27873 = (n + (1));
val__$1 = G__27872;
n = G__27873;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__27880 = val;
var G__27881 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27880,G__27881) : f.call(null,G__27880,G__27881));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27886 = nval;
var G__27887 = (n + (1));
val = G__27886;
n = G__27887;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__27882 = val__$1;
var G__27883 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27882,G__27883) : f.call(null,G__27882,G__27883));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27888 = nval;
var G__27889 = (n + (1));
val__$1 = G__27888;
n = G__27889;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__27884 = val__$1;
var G__27885 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27884,G__27885) : f.call(null,G__27884,G__27885));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__27890 = nval;
var G__27891 = (n + (1));
val__$1 = G__27890;
n = G__27891;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__27893 = x;
if(G__27893){
var bit__26420__auto__ = (G__27893.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__26420__auto__) || (G__27893.cljs$core$ICounted$)){
return true;
} else {
if((!G__27893.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__27893);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__27893);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__27895 = x;
if(G__27895){
var bit__26420__auto__ = (G__27895.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__26420__auto__) || (G__27895.cljs$core$IIndexed$)){
return true;
} else {
if((!G__27895.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__27895);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__27895);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__27896 = coll__$1;
var G__27897 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__27896,G__27897) : cljs.core.equiv_sequential.call(null,G__27896,G__27897));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27898 = o;
var G__27899 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__27898,G__27899) : cljs.core.cons.call(null,G__27898,G__27899));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__27902 = coll__$1;
var G__27903 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__27902,G__27903) : cljs.core.equiv_sequential.call(null,G__27902,G__27903));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27904 = cljs.core.List.EMPTY;
var G__27905 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__27904,G__27905) : cljs.core.with_meta.call(null,G__27904,G__27905));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__27906 = f;
var G__27907 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__27906,G__27907) : cljs.core.seq_reduce.call(null,G__27906,G__27907));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__27908 = f;
var G__27909 = start;
var G__27910 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__27908,G__27909,G__27910) : cljs.core.seq_reduce.call(null,G__27908,G__27909,G__27910));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__27911 = o;
var G__27912 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__27911,G__27912) : cljs.core.cons.call(null,G__27911,G__27912));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__27913 = sn;
s = G__27913;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__27918__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__27919 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__27920 = cljs.core.first(xs);
var G__27921 = cljs.core.next(xs);
coll = G__27919;
x = G__27920;
xs = G__27921;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__27918 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__27922__i = 0, G__27922__a = new Array(arguments.length -  2);
while (G__27922__i < G__27922__a.length) {G__27922__a[G__27922__i] = arguments[G__27922__i + 2]; ++G__27922__i;}
  xs = new cljs.core.IndexedSeq(G__27922__a,0);
} 
return G__27918__delegate.call(this,coll,x,xs);};
G__27918.cljs$lang$maxFixedArity = 2;
G__27918.cljs$lang$applyTo = (function (arglist__27923){
var coll = cljs.core.first(arglist__27923);
arglist__27923 = cljs.core.next(arglist__27923);
var x = cljs.core.first(arglist__27923);
var xs = cljs.core.rest(arglist__27923);
return G__27918__delegate(coll,x,xs);
});
G__27918.cljs$core$IFn$_invoke$arity$variadic = G__27918__delegate;
return G__27918;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__27924 = null;
if (arguments.length > 2) {
var G__27925__i = 0, G__27925__a = new Array(arguments.length -  2);
while (G__27925__i < G__27925__a.length) {G__27925__a[G__27925__i] = arguments[G__27925__i + 2]; ++G__27925__i;}
G__27924 = new cljs.core.IndexedSeq(G__27925__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__27924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__27926 = cljs.core.next(s);
var G__27927 = (acc + (1));
s = G__27926;
acc = G__27927;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__27929 = coll;
if(G__27929){
var bit__26413__auto__ = (G__27929.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__26413__auto__) || (G__27929.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__27930 = cljs.core.next(coll);
var G__27931 = (n - (1));
coll = G__27930;
n = G__27931;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__27932 = cljs.core.next(coll);
var G__27933 = (n - (1));
var G__27934 = not_found;
coll = G__27932;
n = G__27933;
not_found = G__27934;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__27939 = coll;
if(G__27939){
var bit__26413__auto__ = (G__27939.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__26413__auto__) || (G__27939.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__27940 = coll;
if(G__27940){
var bit__26420__auto__ = (G__27940.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__26420__auto__) || (G__27940.cljs$core$ISeq$)){
return true;
} else {
if((!G__27940.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27940);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__27941 = coll;
if(G__27941){
var bit__26413__auto__ = (G__27941.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__26413__auto__) || (G__27941.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__27942 = coll;
if(G__27942){
var bit__26420__auto__ = (G__27942.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__26420__auto__) || (G__27942.cljs$core$ISeq$)){
return true;
} else {
if((!G__27942.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27942);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__27942);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__27943 = (n__$1 - (1));
var G__27944 = cljs.core.rest(xs);
n__$1 = G__27943;
xs = G__27944;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__27947 = o;
if(G__27947){
var bit__26413__auto__ = (G__27947.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__26413__auto__) || (G__27947.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__27948 = o;
if(G__27948){
var bit__26413__auto__ = (G__27948.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__26413__auto__) || (G__27948.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__27952__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__27953 = ret;
var G__27954 = cljs.core.first(kvs);
var G__27955 = cljs.core.second(kvs);
var G__27956 = cljs.core.nnext(kvs);
coll = G__27953;
k = G__27954;
v = G__27955;
kvs = G__27956;
continue;
} else {
return ret;
}
break;
}
};
var G__27952 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__27957__i = 0, G__27957__a = new Array(arguments.length -  3);
while (G__27957__i < G__27957__a.length) {G__27957__a[G__27957__i] = arguments[G__27957__i + 3]; ++G__27957__i;}
  kvs = new cljs.core.IndexedSeq(G__27957__a,0);
} 
return G__27952__delegate.call(this,coll,k,v,kvs);};
G__27952.cljs$lang$maxFixedArity = 3;
G__27952.cljs$lang$applyTo = (function (arglist__27958){
var coll = cljs.core.first(arglist__27958);
arglist__27958 = cljs.core.next(arglist__27958);
var k = cljs.core.first(arglist__27958);
arglist__27958 = cljs.core.next(arglist__27958);
var v = cljs.core.first(arglist__27958);
var kvs = cljs.core.rest(arglist__27958);
return G__27952__delegate(coll,k,v,kvs);
});
G__27952.cljs$core$IFn$_invoke$arity$variadic = G__27952__delegate;
return G__27952;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__27959 = null;
if (arguments.length > 3) {
var G__27960__i = 0, G__27960__a = new Array(arguments.length -  3);
while (G__27960__i < G__27960__a.length) {G__27960__a[G__27960__i] = arguments[G__27960__i + 3]; ++G__27960__i;}
G__27959 = new cljs.core.IndexedSeq(G__27960__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__27959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__27963__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__27964 = ret;
var G__27965 = cljs.core.first(ks);
var G__27966 = cljs.core.next(ks);
coll = G__27964;
k = G__27965;
ks = G__27966;
continue;
} else {
return ret;
}
}
break;
}
};
var G__27963 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__27967__i = 0, G__27967__a = new Array(arguments.length -  2);
while (G__27967__i < G__27967__a.length) {G__27967__a[G__27967__i] = arguments[G__27967__i + 2]; ++G__27967__i;}
  ks = new cljs.core.IndexedSeq(G__27967__a,0);
} 
return G__27963__delegate.call(this,coll,k,ks);};
G__27963.cljs$lang$maxFixedArity = 2;
G__27963.cljs$lang$applyTo = (function (arglist__27968){
var coll = cljs.core.first(arglist__27968);
arglist__27968 = cljs.core.next(arglist__27968);
var k = cljs.core.first(arglist__27968);
var ks = cljs.core.rest(arglist__27968);
return G__27963__delegate(coll,k,ks);
});
G__27963.cljs$core$IFn$_invoke$arity$variadic = G__27963__delegate;
return G__27963;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__27969 = null;
if (arguments.length > 2) {
var G__27970__i = 0, G__27970__a = new Array(arguments.length -  2);
while (G__27970__i < G__27970__a.length) {G__27970__a[G__27970__i] = arguments[G__27970__i + 2]; ++G__27970__i;}
G__27969 = new cljs.core.IndexedSeq(G__27970__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__27969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__25739__auto__ = (function (){var G__27975 = f;
return goog.isFunction(G__27975);
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var G__27976 = f;
if(G__27976){
var bit__26420__auto__ = null;
if(cljs.core.truth_((function (){var or__25739__auto____$1 = bit__26420__auto__;
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
return G__27976.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__27976.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__27976);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__27976);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__28442 = null;
var G__28442__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__28442__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27978 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__27978) : self__.afn.call(null,G__27978));
});
var G__28442__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27979 = a;
var G__27980 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__27979,G__27980) : self__.afn.call(null,G__27979,G__27980));
});
var G__28442__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27981 = a;
var G__27982 = b;
var G__27983 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__27981,G__27982,G__27983) : self__.afn.call(null,G__27981,G__27982,G__27983));
});
var G__28442__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27984 = a;
var G__27985 = b;
var G__27986 = c;
var G__27987 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__27984,G__27985,G__27986,G__27987) : self__.afn.call(null,G__27984,G__27985,G__27986,G__27987));
});
var G__28442__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27988 = a;
var G__27989 = b;
var G__27990 = c;
var G__27991 = d;
var G__27992 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__27988,G__27989,G__27990,G__27991,G__27992) : self__.afn.call(null,G__27988,G__27989,G__27990,G__27991,G__27992));
});
var G__28442__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27993 = a;
var G__27994 = b;
var G__27995 = c;
var G__27996 = d;
var G__27997 = e;
var G__27998 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__27993,G__27994,G__27995,G__27996,G__27997,G__27998) : self__.afn.call(null,G__27993,G__27994,G__27995,G__27996,G__27997,G__27998));
});
var G__28442__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__27999 = a;
var G__28000 = b;
var G__28001 = c;
var G__28002 = d;
var G__28003 = e;
var G__28004 = f;
var G__28005 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__27999,G__28000,G__28001,G__28002,G__28003,G__28004,G__28005) : self__.afn.call(null,G__27999,G__28000,G__28001,G__28002,G__28003,G__28004,G__28005));
});
var G__28442__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28006 = a;
var G__28007 = b;
var G__28008 = c;
var G__28009 = d;
var G__28010 = e;
var G__28011 = f;
var G__28012 = g;
var G__28013 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__28006,G__28007,G__28008,G__28009,G__28010,G__28011,G__28012,G__28013) : self__.afn.call(null,G__28006,G__28007,G__28008,G__28009,G__28010,G__28011,G__28012,G__28013));
});
var G__28442__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28014 = a;
var G__28015 = b;
var G__28016 = c;
var G__28017 = d;
var G__28018 = e;
var G__28019 = f;
var G__28020 = g;
var G__28021 = h;
var G__28022 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020,G__28021,G__28022) : self__.afn.call(null,G__28014,G__28015,G__28016,G__28017,G__28018,G__28019,G__28020,G__28021,G__28022));
});
var G__28442__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28023 = a;
var G__28024 = b;
var G__28025 = c;
var G__28026 = d;
var G__28027 = e;
var G__28028 = f;
var G__28029 = g;
var G__28030 = h;
var G__28031 = i;
var G__28032 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__28023,G__28024,G__28025,G__28026,G__28027,G__28028,G__28029,G__28030,G__28031,G__28032) : self__.afn.call(null,G__28023,G__28024,G__28025,G__28026,G__28027,G__28028,G__28029,G__28030,G__28031,G__28032));
});
var G__28442__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28033 = a;
var G__28034 = b;
var G__28035 = c;
var G__28036 = d;
var G__28037 = e;
var G__28038 = f;
var G__28039 = g;
var G__28040 = h;
var G__28041 = i;
var G__28042 = j;
var G__28043 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041,G__28042,G__28043) : self__.afn.call(null,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038,G__28039,G__28040,G__28041,G__28042,G__28043));
});
var G__28442__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28044 = a;
var G__28045 = b;
var G__28046 = c;
var G__28047 = d;
var G__28048 = e;
var G__28049 = f;
var G__28050 = g;
var G__28051 = h;
var G__28052 = i;
var G__28053 = j;
var G__28054 = k;
var G__28055 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__28044,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053,G__28054,G__28055) : self__.afn.call(null,G__28044,G__28045,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053,G__28054,G__28055));
});
var G__28442__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28056 = a;
var G__28057 = b;
var G__28058 = c;
var G__28059 = d;
var G__28060 = e;
var G__28061 = f;
var G__28062 = g;
var G__28063 = h;
var G__28064 = i;
var G__28065 = j;
var G__28066 = k;
var G__28067 = l;
var G__28068 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__28056,G__28057,G__28058,G__28059,G__28060,G__28061,G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068) : self__.afn.call(null,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061,G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068));
});
var G__28442__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28069 = a;
var G__28070 = b;
var G__28071 = c;
var G__28072 = d;
var G__28073 = e;
var G__28074 = f;
var G__28075 = g;
var G__28076 = h;
var G__28077 = i;
var G__28078 = j;
var G__28079 = k;
var G__28080 = l;
var G__28081 = m;
var G__28082 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__28069,G__28070,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078,G__28079,G__28080,G__28081,G__28082) : self__.afn.call(null,G__28069,G__28070,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078,G__28079,G__28080,G__28081,G__28082));
});
var G__28442__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28083 = a;
var G__28084 = b;
var G__28085 = c;
var G__28086 = d;
var G__28087 = e;
var G__28088 = f;
var G__28089 = g;
var G__28090 = h;
var G__28091 = i;
var G__28092 = j;
var G__28093 = k;
var G__28094 = l;
var G__28095 = m;
var G__28096 = n;
var G__28097 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095,G__28096,G__28097) : self__.afn.call(null,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095,G__28096,G__28097));
});
var G__28442__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28098 = a;
var G__28099 = b;
var G__28100 = c;
var G__28101 = d;
var G__28102 = e;
var G__28103 = f;
var G__28104 = g;
var G__28105 = h;
var G__28106 = i;
var G__28107 = j;
var G__28108 = k;
var G__28109 = l;
var G__28110 = m;
var G__28111 = n;
var G__28112 = o;
var G__28113 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__28098,G__28099,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110,G__28111,G__28112,G__28113) : self__.afn.call(null,G__28098,G__28099,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110,G__28111,G__28112,G__28113));
});
var G__28442__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28114 = a;
var G__28115 = b;
var G__28116 = c;
var G__28117 = d;
var G__28118 = e;
var G__28119 = f;
var G__28120 = g;
var G__28121 = h;
var G__28122 = i;
var G__28123 = j;
var G__28124 = k;
var G__28125 = l;
var G__28126 = m;
var G__28127 = n;
var G__28128 = o;
var G__28129 = p;
var G__28130 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__28114,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128,G__28129,G__28130) : self__.afn.call(null,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128,G__28129,G__28130));
});
var G__28442__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28131 = a;
var G__28132 = b;
var G__28133 = c;
var G__28134 = d;
var G__28135 = e;
var G__28136 = f;
var G__28137 = g;
var G__28138 = h;
var G__28139 = i;
var G__28140 = j;
var G__28141 = k;
var G__28142 = l;
var G__28143 = m;
var G__28144 = n;
var G__28145 = o;
var G__28146 = p;
var G__28147 = q;
var G__28148 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__28131,G__28132,G__28133,G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145,G__28146,G__28147,G__28148) : self__.afn.call(null,G__28131,G__28132,G__28133,G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145,G__28146,G__28147,G__28148));
});
var G__28442__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28149 = a;
var G__28150 = b;
var G__28151 = c;
var G__28152 = d;
var G__28153 = e;
var G__28154 = f;
var G__28155 = g;
var G__28156 = h;
var G__28157 = i;
var G__28158 = j;
var G__28159 = k;
var G__28160 = l;
var G__28161 = m;
var G__28162 = n;
var G__28163 = o;
var G__28164 = p;
var G__28165 = q;
var G__28166 = r;
var G__28167 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__28149,G__28150,G__28151,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167) : self__.afn.call(null,G__28149,G__28150,G__28151,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167));
});
var G__28442__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28168 = a;
var G__28169 = b;
var G__28170 = c;
var G__28171 = d;
var G__28172 = e;
var G__28173 = f;
var G__28174 = g;
var G__28175 = h;
var G__28176 = i;
var G__28177 = j;
var G__28178 = k;
var G__28179 = l;
var G__28180 = m;
var G__28181 = n;
var G__28182 = o;
var G__28183 = p;
var G__28184 = q;
var G__28185 = r;
var G__28186 = s;
var G__28187 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__28168,G__28169,G__28170,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185,G__28186,G__28187) : self__.afn.call(null,G__28168,G__28169,G__28170,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185,G__28186,G__28187));
});
var G__28442__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__28188 = self__.afn;
var G__28189 = a;
var G__28190 = b;
var G__28191 = c;
var G__28192 = d;
var G__28193 = e;
var G__28194 = f;
var G__28195 = g;
var G__28196 = h;
var G__28197 = i;
var G__28198 = j;
var G__28199 = k;
var G__28200 = l;
var G__28201 = m;
var G__28202 = n;
var G__28203 = o;
var G__28204 = p;
var G__28205 = q;
var G__28206 = r;
var G__28207 = s;
var G__28208 = t;
var G__28209 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28188,G__28189,G__28190,G__28191,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199,G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208,G__28209) : cljs.core.apply.call(null,G__28188,G__28189,G__28190,G__28191,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199,G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208,G__28209));
});
G__28442 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28442__1.call(this,self__);
case 2:
return G__28442__2.call(this,self__,a);
case 3:
return G__28442__3.call(this,self__,a,b);
case 4:
return G__28442__4.call(this,self__,a,b,c);
case 5:
return G__28442__5.call(this,self__,a,b,c,d);
case 6:
return G__28442__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28442__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28442__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28442__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28442__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28442__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28442__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28442__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28442__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28442__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28442__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28442__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28442__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28442__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28442__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28442__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28442__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28442.cljs$core$IFn$_invoke$arity$1 = G__28442__1;
G__28442.cljs$core$IFn$_invoke$arity$2 = G__28442__2;
G__28442.cljs$core$IFn$_invoke$arity$3 = G__28442__3;
G__28442.cljs$core$IFn$_invoke$arity$4 = G__28442__4;
G__28442.cljs$core$IFn$_invoke$arity$5 = G__28442__5;
G__28442.cljs$core$IFn$_invoke$arity$6 = G__28442__6;
G__28442.cljs$core$IFn$_invoke$arity$7 = G__28442__7;
G__28442.cljs$core$IFn$_invoke$arity$8 = G__28442__8;
G__28442.cljs$core$IFn$_invoke$arity$9 = G__28442__9;
G__28442.cljs$core$IFn$_invoke$arity$10 = G__28442__10;
G__28442.cljs$core$IFn$_invoke$arity$11 = G__28442__11;
G__28442.cljs$core$IFn$_invoke$arity$12 = G__28442__12;
G__28442.cljs$core$IFn$_invoke$arity$13 = G__28442__13;
G__28442.cljs$core$IFn$_invoke$arity$14 = G__28442__14;
G__28442.cljs$core$IFn$_invoke$arity$15 = G__28442__15;
G__28442.cljs$core$IFn$_invoke$arity$16 = G__28442__16;
G__28442.cljs$core$IFn$_invoke$arity$17 = G__28442__17;
G__28442.cljs$core$IFn$_invoke$arity$18 = G__28442__18;
G__28442.cljs$core$IFn$_invoke$arity$19 = G__28442__19;
G__28442.cljs$core$IFn$_invoke$arity$20 = G__28442__20;
G__28442.cljs$core$IFn$_invoke$arity$21 = G__28442__21;
G__28442.cljs$core$IFn$_invoke$arity$22 = G__28442__22;
return G__28442;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args27977){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27977)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__28210 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__28210) : self__.afn.call(null,G__28210));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__28211 = a;
var G__28212 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__28211,G__28212) : self__.afn.call(null,G__28211,G__28212));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__28213 = a;
var G__28214 = b;
var G__28215 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__28213,G__28214,G__28215) : self__.afn.call(null,G__28213,G__28214,G__28215));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__28216 = a;
var G__28217 = b;
var G__28218 = c;
var G__28219 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__28216,G__28217,G__28218,G__28219) : self__.afn.call(null,G__28216,G__28217,G__28218,G__28219));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__28220 = a;
var G__28221 = b;
var G__28222 = c;
var G__28223 = d;
var G__28224 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__28220,G__28221,G__28222,G__28223,G__28224) : self__.afn.call(null,G__28220,G__28221,G__28222,G__28223,G__28224));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__28225 = a;
var G__28226 = b;
var G__28227 = c;
var G__28228 = d;
var G__28229 = e;
var G__28230 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__28225,G__28226,G__28227,G__28228,G__28229,G__28230) : self__.afn.call(null,G__28225,G__28226,G__28227,G__28228,G__28229,G__28230));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__28231 = a;
var G__28232 = b;
var G__28233 = c;
var G__28234 = d;
var G__28235 = e;
var G__28236 = f;
var G__28237 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237) : self__.afn.call(null,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__28238 = a;
var G__28239 = b;
var G__28240 = c;
var G__28241 = d;
var G__28242 = e;
var G__28243 = f;
var G__28244 = g;
var G__28245 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__28238,G__28239,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245) : self__.afn.call(null,G__28238,G__28239,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__28246 = a;
var G__28247 = b;
var G__28248 = c;
var G__28249 = d;
var G__28250 = e;
var G__28251 = f;
var G__28252 = g;
var G__28253 = h;
var G__28254 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252,G__28253,G__28254) : self__.afn.call(null,G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252,G__28253,G__28254));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__28255 = a;
var G__28256 = b;
var G__28257 = c;
var G__28258 = d;
var G__28259 = e;
var G__28260 = f;
var G__28261 = g;
var G__28262 = h;
var G__28263 = i;
var G__28264 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261,G__28262,G__28263,G__28264) : self__.afn.call(null,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261,G__28262,G__28263,G__28264));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__28265 = a;
var G__28266 = b;
var G__28267 = c;
var G__28268 = d;
var G__28269 = e;
var G__28270 = f;
var G__28271 = g;
var G__28272 = h;
var G__28273 = i;
var G__28274 = j;
var G__28275 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273,G__28274,G__28275) : self__.afn.call(null,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273,G__28274,G__28275));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__28276 = a;
var G__28277 = b;
var G__28278 = c;
var G__28279 = d;
var G__28280 = e;
var G__28281 = f;
var G__28282 = g;
var G__28283 = h;
var G__28284 = i;
var G__28285 = j;
var G__28286 = k;
var G__28287 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__28276,G__28277,G__28278,G__28279,G__28280,G__28281,G__28282,G__28283,G__28284,G__28285,G__28286,G__28287) : self__.afn.call(null,G__28276,G__28277,G__28278,G__28279,G__28280,G__28281,G__28282,G__28283,G__28284,G__28285,G__28286,G__28287));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__28288 = a;
var G__28289 = b;
var G__28290 = c;
var G__28291 = d;
var G__28292 = e;
var G__28293 = f;
var G__28294 = g;
var G__28295 = h;
var G__28296 = i;
var G__28297 = j;
var G__28298 = k;
var G__28299 = l;
var G__28300 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295,G__28296,G__28297,G__28298,G__28299,G__28300) : self__.afn.call(null,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295,G__28296,G__28297,G__28298,G__28299,G__28300));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__28301 = a;
var G__28302 = b;
var G__28303 = c;
var G__28304 = d;
var G__28305 = e;
var G__28306 = f;
var G__28307 = g;
var G__28308 = h;
var G__28309 = i;
var G__28310 = j;
var G__28311 = k;
var G__28312 = l;
var G__28313 = m;
var G__28314 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312,G__28313,G__28314) : self__.afn.call(null,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312,G__28313,G__28314));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__28315 = a;
var G__28316 = b;
var G__28317 = c;
var G__28318 = d;
var G__28319 = e;
var G__28320 = f;
var G__28321 = g;
var G__28322 = h;
var G__28323 = i;
var G__28324 = j;
var G__28325 = k;
var G__28326 = l;
var G__28327 = m;
var G__28328 = n;
var G__28329 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326,G__28327,G__28328,G__28329) : self__.afn.call(null,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326,G__28327,G__28328,G__28329));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__28330 = a;
var G__28331 = b;
var G__28332 = c;
var G__28333 = d;
var G__28334 = e;
var G__28335 = f;
var G__28336 = g;
var G__28337 = h;
var G__28338 = i;
var G__28339 = j;
var G__28340 = k;
var G__28341 = l;
var G__28342 = m;
var G__28343 = n;
var G__28344 = o;
var G__28345 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343,G__28344,G__28345) : self__.afn.call(null,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343,G__28344,G__28345));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__28346 = a;
var G__28347 = b;
var G__28348 = c;
var G__28349 = d;
var G__28350 = e;
var G__28351 = f;
var G__28352 = g;
var G__28353 = h;
var G__28354 = i;
var G__28355 = j;
var G__28356 = k;
var G__28357 = l;
var G__28358 = m;
var G__28359 = n;
var G__28360 = o;
var G__28361 = p;
var G__28362 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360,G__28361,G__28362) : self__.afn.call(null,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360,G__28361,G__28362));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__28363 = a;
var G__28364 = b;
var G__28365 = c;
var G__28366 = d;
var G__28367 = e;
var G__28368 = f;
var G__28369 = g;
var G__28370 = h;
var G__28371 = i;
var G__28372 = j;
var G__28373 = k;
var G__28374 = l;
var G__28375 = m;
var G__28376 = n;
var G__28377 = o;
var G__28378 = p;
var G__28379 = q;
var G__28380 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380) : self__.afn.call(null,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__28381 = a;
var G__28382 = b;
var G__28383 = c;
var G__28384 = d;
var G__28385 = e;
var G__28386 = f;
var G__28387 = g;
var G__28388 = h;
var G__28389 = i;
var G__28390 = j;
var G__28391 = k;
var G__28392 = l;
var G__28393 = m;
var G__28394 = n;
var G__28395 = o;
var G__28396 = p;
var G__28397 = q;
var G__28398 = r;
var G__28399 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399) : self__.afn.call(null,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__28400 = a;
var G__28401 = b;
var G__28402 = c;
var G__28403 = d;
var G__28404 = e;
var G__28405 = f;
var G__28406 = g;
var G__28407 = h;
var G__28408 = i;
var G__28409 = j;
var G__28410 = k;
var G__28411 = l;
var G__28412 = m;
var G__28413 = n;
var G__28414 = o;
var G__28415 = p;
var G__28416 = q;
var G__28417 = r;
var G__28418 = s;
var G__28419 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414,G__28415,G__28416,G__28417,G__28418,G__28419) : self__.afn.call(null,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414,G__28415,G__28416,G__28417,G__28418,G__28419));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__28420 = self__.afn;
var G__28421 = a;
var G__28422 = b;
var G__28423 = c;
var G__28424 = d;
var G__28425 = e;
var G__28426 = f;
var G__28427 = g;
var G__28428 = h;
var G__28429 = i;
var G__28430 = j;
var G__28431 = k;
var G__28432 = l;
var G__28433 = m;
var G__28434 = n;
var G__28435 = o;
var G__28436 = p;
var G__28437 = q;
var G__28438 = r;
var G__28439 = s;
var G__28440 = t;
var G__28441 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439,G__28440,G__28441) : cljs.core.apply.call(null,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439,G__28440,G__28441));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__28446 = o;
if(G__28446){
var bit__26420__auto__ = (G__28446.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__26420__auto__) || (G__28446.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__28446.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__28446);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__28446);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__25727__auto__ = !((o == null));
if(and__25727__auto__){
var G__28450 = o;
if(G__28450){
var bit__26420__auto__ = (G__28450.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__26420__auto__) || (G__28450.cljs$core$IMeta$)){
return true;
} else {
if((!G__28450.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28450);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__28450);
}
} else {
return and__25727__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__28453__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__28454 = ret;
var G__28455 = cljs.core.first(ks);
var G__28456 = cljs.core.next(ks);
coll = G__28454;
k = G__28455;
ks = G__28456;
continue;
} else {
return ret;
}
}
break;
}
};
var G__28453 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28457__i = 0, G__28457__a = new Array(arguments.length -  2);
while (G__28457__i < G__28457__a.length) {G__28457__a[G__28457__i] = arguments[G__28457__i + 2]; ++G__28457__i;}
  ks = new cljs.core.IndexedSeq(G__28457__a,0);
} 
return G__28453__delegate.call(this,coll,k,ks);};
G__28453.cljs$lang$maxFixedArity = 2;
G__28453.cljs$lang$applyTo = (function (arglist__28458){
var coll = cljs.core.first(arglist__28458);
arglist__28458 = cljs.core.next(arglist__28458);
var k = cljs.core.first(arglist__28458);
var ks = cljs.core.rest(arglist__28458);
return G__28453__delegate(coll,k,ks);
});
G__28453.cljs$core$IFn$_invoke$arity$variadic = G__28453__delegate;
return G__28453;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__28459 = null;
if (arguments.length > 2) {
var G__28460__i = 0, G__28460__a = new Array(arguments.length -  2);
while (G__28460__i < G__28460__a.length) {G__28460__a[G__28460__i] = arguments[G__28460__i + 2]; ++G__28460__i;}
G__28459 = new cljs.core.IndexedSeq(G__28460__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__28459);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28462 = x;
if(G__28462){
var bit__26420__auto__ = (G__28462.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__26420__auto__) || (G__28462.cljs$core$ICollection$)){
return true;
} else {
if((!G__28462.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__28462);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__28462);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28464 = x;
if(G__28464){
var bit__26420__auto__ = (G__28464.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__26420__auto__) || (G__28464.cljs$core$ISet$)){
return true;
} else {
if((!G__28464.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__28464);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__28464);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__28466 = x;
if(G__28466){
var bit__26420__auto__ = (G__28466.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__26420__auto__) || (G__28466.cljs$core$IAssociative$)){
return true;
} else {
if((!G__28466.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__28466);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__28466);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__28468 = x;
if(G__28468){
var bit__26420__auto__ = (G__28468.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__26420__auto__) || (G__28468.cljs$core$ISequential$)){
return true;
} else {
if((!G__28468.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__28468);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__28468);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__28470 = x;
if(G__28470){
var bit__26420__auto__ = (G__28470.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__26420__auto__) || (G__28470.cljs$core$ISorted$)){
return true;
} else {
if((!G__28470.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__28470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__28470);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__28472 = x;
if(G__28472){
var bit__26420__auto__ = (G__28472.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__26420__auto__) || (G__28472.cljs$core$IReduce$)){
return true;
} else {
if((!G__28472.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__28472);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__28472);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__28474 = x;
if(G__28474){
var bit__26420__auto__ = (G__28474.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__26420__auto__) || (G__28474.cljs$core$IMap$)){
return true;
} else {
if((!G__28474.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__28474);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__28474);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__28476 = x;
if(G__28476){
var bit__26420__auto__ = (G__28476.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__26420__auto__) || (G__28476.cljs$core$IVector$)){
return true;
} else {
if((!G__28476.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__28476);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__28476);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__28478 = x;
if(G__28478){
var bit__26413__auto__ = (G__28478.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__26413__auto__) || (G__28478.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj28484 = {};
return obj28484;
});
var js_obj__1 = (function() { 
var G__28487__delegate = function (keyvals){
var G__28485 = goog.object.create;
var G__28486 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__28485,G__28486) : cljs.core.apply.call(null,G__28485,G__28486));
};
var G__28487 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__28488__i = 0, G__28488__a = new Array(arguments.length -  0);
while (G__28488__i < G__28488__a.length) {G__28488__a[G__28488__i] = arguments[G__28488__i + 0]; ++G__28488__i;}
  keyvals = new cljs.core.IndexedSeq(G__28488__a,0);
} 
return G__28487__delegate.call(this,keyvals);};
G__28487.cljs$lang$maxFixedArity = 0;
G__28487.cljs$lang$applyTo = (function (arglist__28489){
var keyvals = cljs.core.seq(arglist__28489);
return G__28487__delegate(keyvals);
});
G__28487.cljs$core$IFn$_invoke$arity$variadic = G__28487__delegate;
return G__28487;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__28490 = null;
if (arguments.length > 0) {
var G__28491__i = 0, G__28491__a = new Array(arguments.length -  0);
while (G__28491__i < G__28491__a.length) {G__28491__a[G__28491__i] = arguments[G__28491__i + 0]; ++G__28491__i;}
G__28490 = new cljs.core.IndexedSeq(G__28491__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__28490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__28494_28496 = obj;
var G__28495_28497 = ((function (G__28494_28496,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__28494_28496,keys))
;
goog.object.forEach(G__28494_28496,G__28495_28497);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__28498 = (i__$1 + (1));
var G__28499 = (j__$1 + (1));
var G__28500 = (len__$1 - (1));
i__$1 = G__28498;
j__$1 = G__28499;
len__$1 = G__28500;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__28501 = (i__$1 - (1));
var G__28502 = (j__$1 - (1));
var G__28503 = (len__$1 - (1));
i__$1 = G__28501;
j__$1 = G__28502;
len__$1 = G__28503;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj28505 = {};
return obj28505;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__28507 = s;
if(G__28507){
var bit__26420__auto__ = (G__28507.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__26420__auto__) || (G__28507.cljs$core$ISeq$)){
return true;
} else {
if((!G__28507.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__28507);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__28509 = s;
if(G__28509){
var bit__26420__auto__ = (G__28509.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__26420__auto__) || (G__28509.cljs$core$ISeqable$)){
return true;
} else {
if((!G__28509.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__28509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__28509);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__25739__auto__ = cljs.core.fn_QMARK_(f);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var G__28513 = f;
if(G__28513){
var bit__26420__auto__ = (G__28513.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__26420__auto__) || (G__28513.cljs$core$IFn$)){
return true;
} else {
if((!G__28513.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__28513);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__28513);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__28526 = n;
return isNaN(G__28526);
})())) && (!((n === Infinity))) && (((function (){var G__28527 = n;
return parseFloat(G__28527);
})() === (function (){var G__28528 = n;
var G__28529 = (10);
return parseInt(G__28528,G__28529);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__28530__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__28531 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__28532 = etc;
s = G__28531;
xs = G__28532;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__28530 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28533__i = 0, G__28533__a = new Array(arguments.length -  2);
while (G__28533__i < G__28533__a.length) {G__28533__a[G__28533__i] = arguments[G__28533__i + 2]; ++G__28533__i;}
  more = new cljs.core.IndexedSeq(G__28533__a,0);
} 
return G__28530__delegate.call(this,x,y,more);};
G__28530.cljs$lang$maxFixedArity = 2;
G__28530.cljs$lang$applyTo = (function (arglist__28534){
var x = cljs.core.first(arglist__28534);
arglist__28534 = cljs.core.next(arglist__28534);
var y = cljs.core.first(arglist__28534);
var more = cljs.core.rest(arglist__28534);
return G__28530__delegate(x,y,more);
});
G__28530.cljs$core$IFn$_invoke$arity$variadic = G__28530__delegate;
return G__28530;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__28535 = null;
if (arguments.length > 2) {
var G__28536__i = 0, G__28536__a = new Array(arguments.length -  2);
while (G__28536__i < G__28536__a.length) {G__28536__a[G__28536__i] = arguments[G__28536__i + 2]; ++G__28536__i;}
G__28535 = new cljs.core.IndexedSeq(G__28536__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__28540 = x;
if(G__28540){
var bit__26413__auto__ = (G__28540.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__26413__auto__) || (G__28540.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__28541 = x;
var G__28542 = y;
return goog.array.defaultCompare(G__28541,G__28542);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__28547 = xs;
var G__28548 = ys;
var G__28549 = len;
var G__28550 = (n + (1));
xs = G__28547;
ys = G__28548;
len = G__28549;
n = G__28550;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__28555 = x;
var G__28556 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28555,G__28556) : f.call(null,G__28555,G__28556));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28557 = y;
var G__28558 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28557,G__28558) : f.call(null,G__28557,G__28558));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__28564 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__28564) : cljs.core.to_array.call(null,G__28564));
})();
var G__28565_28567 = a;
var G__28566_28568 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__28565_28567,G__28566_28568);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__28574 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28574) : keyfn.call(null,G__28574));
})(),(function (){var G__28575 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28575) : keyfn.call(null,G__28575));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
var G__28581 = f;
var G__28582 = cljs.core.first(s);
var G__28583 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__28581,G__28582,G__28583) : cljs.core.reduce.call(null,G__28581,G__28582,G__28583));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__28584 = val__$1;
var G__28585 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28584,G__28585) : f.call(null,G__28584,G__28585));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__28586 = nval;
var G__28587 = cljs.core.next(coll__$1);
val__$1 = G__28586;
coll__$1 = G__28587;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__28591 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__28591) : cljs.core.to_array.call(null,G__28591));
})();
var G__28592_28594 = a;
goog.array.shuffle(G__28592_28594);

var G__28593 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__28593) : cljs.core.vec.call(null,G__28593));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__28597 = coll;
if(G__28597){
var bit__26413__auto__ = (G__28597.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__26413__auto__) || (G__28597.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__28598 = coll;
if(G__28598){
var bit__26413__auto__ = (G__28598.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__26413__auto__) || (G__28598.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__28607 = null;
var G__28607__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__28607__1 = (function (x){
var G__28604 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__28604) : cf.call(null,G__28604));
});
var G__28607__2 = (function (x,y){
var G__28605 = x;
var G__28606 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28605,G__28606) : f.call(null,G__28605,G__28606));
});
G__28607 = function(x,y){
switch(arguments.length){
case 0:
return G__28607__0.call(this);
case 1:
return G__28607__1.call(this,x);
case 2:
return G__28607__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28607.cljs$core$IFn$_invoke$arity$0 = G__28607__0;
G__28607.cljs$core$IFn$_invoke$arity$1 = G__28607__1;
G__28607.cljs$core$IFn$_invoke$arity$2 = G__28607__2;
return G__28607;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__28614 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__28614) : xform.call(null,G__28614));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__28615 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__28615) : f__$1.call(null,G__28615));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__28616__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__28616 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28617__i = 0, G__28617__a = new Array(arguments.length -  2);
while (G__28617__i < G__28617__a.length) {G__28617__a[G__28617__i] = arguments[G__28617__i + 2]; ++G__28617__i;}
  more = new cljs.core.IndexedSeq(G__28617__a,0);
} 
return G__28616__delegate.call(this,x,y,more);};
G__28616.cljs$lang$maxFixedArity = 2;
G__28616.cljs$lang$applyTo = (function (arglist__28618){
var x = cljs.core.first(arglist__28618);
arglist__28618 = cljs.core.next(arglist__28618);
var y = cljs.core.first(arglist__28618);
var more = cljs.core.rest(arglist__28618);
return G__28616__delegate(x,y,more);
});
G__28616.cljs$core$IFn$_invoke$arity$variadic = G__28616__delegate;
return G__28616;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__28619 = null;
if (arguments.length > 2) {
var G__28620__i = 0, G__28620__a = new Array(arguments.length -  2);
while (G__28620__i < G__28620__a.length) {G__28620__a[G__28620__i] = arguments[G__28620__i + 2]; ++G__28620__i;}
G__28619 = new cljs.core.IndexedSeq(G__28620__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__28621__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__28621 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28622__i = 0, G__28622__a = new Array(arguments.length -  2);
while (G__28622__i < G__28622__a.length) {G__28622__a[G__28622__i] = arguments[G__28622__i + 2]; ++G__28622__i;}
  more = new cljs.core.IndexedSeq(G__28622__a,0);
} 
return G__28621__delegate.call(this,x,y,more);};
G__28621.cljs$lang$maxFixedArity = 2;
G__28621.cljs$lang$applyTo = (function (arglist__28623){
var x = cljs.core.first(arglist__28623);
arglist__28623 = cljs.core.next(arglist__28623);
var y = cljs.core.first(arglist__28623);
var more = cljs.core.rest(arglist__28623);
return G__28621__delegate(x,y,more);
});
G__28621.cljs$core$IFn$_invoke$arity$variadic = G__28621__delegate;
return G__28621;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__28624 = null;
if (arguments.length > 2) {
var G__28625__i = 0, G__28625__a = new Array(arguments.length -  2);
while (G__28625__i < G__28625__a.length) {G__28625__a[G__28625__i] = arguments[G__28625__i + 2]; ++G__28625__i;}
G__28624 = new cljs.core.IndexedSeq(G__28625__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__28626__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__28626 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28627__i = 0, G__28627__a = new Array(arguments.length -  2);
while (G__28627__i < G__28627__a.length) {G__28627__a[G__28627__i] = arguments[G__28627__i + 2]; ++G__28627__i;}
  more = new cljs.core.IndexedSeq(G__28627__a,0);
} 
return G__28626__delegate.call(this,x,y,more);};
G__28626.cljs$lang$maxFixedArity = 2;
G__28626.cljs$lang$applyTo = (function (arglist__28628){
var x = cljs.core.first(arglist__28628);
arglist__28628 = cljs.core.next(arglist__28628);
var y = cljs.core.first(arglist__28628);
var more = cljs.core.rest(arglist__28628);
return G__28626__delegate(x,y,more);
});
G__28626.cljs$core$IFn$_invoke$arity$variadic = G__28626__delegate;
return G__28626;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__28629 = null;
if (arguments.length > 2) {
var G__28630__i = 0, G__28630__a = new Array(arguments.length -  2);
while (G__28630__i < G__28630__a.length) {G__28630__a[G__28630__i] = arguments[G__28630__i + 2]; ++G__28630__i;}
G__28629 = new cljs.core.IndexedSeq(G__28630__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__28635__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__28635 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28636__i = 0, G__28636__a = new Array(arguments.length -  2);
while (G__28636__i < G__28636__a.length) {G__28636__a[G__28636__i] = arguments[G__28636__i + 2]; ++G__28636__i;}
  more = new cljs.core.IndexedSeq(G__28636__a,0);
} 
return G__28635__delegate.call(this,x,y,more);};
G__28635.cljs$lang$maxFixedArity = 2;
G__28635.cljs$lang$applyTo = (function (arglist__28637){
var x = cljs.core.first(arglist__28637);
arglist__28637 = cljs.core.next(arglist__28637);
var y = cljs.core.first(arglist__28637);
var more = cljs.core.rest(arglist__28637);
return G__28635__delegate(x,y,more);
});
G__28635.cljs$core$IFn$_invoke$arity$variadic = G__28635__delegate;
return G__28635;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__28638 = null;
if (arguments.length > 2) {
var G__28639__i = 0, G__28639__a = new Array(arguments.length -  2);
while (G__28639__i < G__28639__a.length) {G__28639__a[G__28639__i] = arguments[G__28639__i + 2]; ++G__28639__i;}
G__28638 = new cljs.core.IndexedSeq(G__28639__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__28640__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__28641 = y;
var G__28642 = cljs.core.first(more);
var G__28643 = cljs.core.next(more);
x = G__28641;
y = G__28642;
more = G__28643;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28640 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28644__i = 0, G__28644__a = new Array(arguments.length -  2);
while (G__28644__i < G__28644__a.length) {G__28644__a[G__28644__i] = arguments[G__28644__i + 2]; ++G__28644__i;}
  more = new cljs.core.IndexedSeq(G__28644__a,0);
} 
return G__28640__delegate.call(this,x,y,more);};
G__28640.cljs$lang$maxFixedArity = 2;
G__28640.cljs$lang$applyTo = (function (arglist__28645){
var x = cljs.core.first(arglist__28645);
arglist__28645 = cljs.core.next(arglist__28645);
var y = cljs.core.first(arglist__28645);
var more = cljs.core.rest(arglist__28645);
return G__28640__delegate(x,y,more);
});
G__28640.cljs$core$IFn$_invoke$arity$variadic = G__28640__delegate;
return G__28640;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__28646 = null;
if (arguments.length > 2) {
var G__28647__i = 0, G__28647__a = new Array(arguments.length -  2);
while (G__28647__i < G__28647__a.length) {G__28647__a[G__28647__i] = arguments[G__28647__i + 2]; ++G__28647__i;}
G__28646 = new cljs.core.IndexedSeq(G__28647__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__28648__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__28649 = y;
var G__28650 = cljs.core.first(more);
var G__28651 = cljs.core.next(more);
x = G__28649;
y = G__28650;
more = G__28651;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28648 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28652__i = 0, G__28652__a = new Array(arguments.length -  2);
while (G__28652__i < G__28652__a.length) {G__28652__a[G__28652__i] = arguments[G__28652__i + 2]; ++G__28652__i;}
  more = new cljs.core.IndexedSeq(G__28652__a,0);
} 
return G__28648__delegate.call(this,x,y,more);};
G__28648.cljs$lang$maxFixedArity = 2;
G__28648.cljs$lang$applyTo = (function (arglist__28653){
var x = cljs.core.first(arglist__28653);
arglist__28653 = cljs.core.next(arglist__28653);
var y = cljs.core.first(arglist__28653);
var more = cljs.core.rest(arglist__28653);
return G__28648__delegate(x,y,more);
});
G__28648.cljs$core$IFn$_invoke$arity$variadic = G__28648__delegate;
return G__28648;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__28654 = null;
if (arguments.length > 2) {
var G__28655__i = 0, G__28655__a = new Array(arguments.length -  2);
while (G__28655__i < G__28655__a.length) {G__28655__a[G__28655__i] = arguments[G__28655__i + 2]; ++G__28655__i;}
G__28654 = new cljs.core.IndexedSeq(G__28655__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__28656__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__28657 = y;
var G__28658 = cljs.core.first(more);
var G__28659 = cljs.core.next(more);
x = G__28657;
y = G__28658;
more = G__28659;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28656 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28660__i = 0, G__28660__a = new Array(arguments.length -  2);
while (G__28660__i < G__28660__a.length) {G__28660__a[G__28660__i] = arguments[G__28660__i + 2]; ++G__28660__i;}
  more = new cljs.core.IndexedSeq(G__28660__a,0);
} 
return G__28656__delegate.call(this,x,y,more);};
G__28656.cljs$lang$maxFixedArity = 2;
G__28656.cljs$lang$applyTo = (function (arglist__28661){
var x = cljs.core.first(arglist__28661);
arglist__28661 = cljs.core.next(arglist__28661);
var y = cljs.core.first(arglist__28661);
var more = cljs.core.rest(arglist__28661);
return G__28656__delegate(x,y,more);
});
G__28656.cljs$core$IFn$_invoke$arity$variadic = G__28656__delegate;
return G__28656;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__28662 = null;
if (arguments.length > 2) {
var G__28663__i = 0, G__28663__a = new Array(arguments.length -  2);
while (G__28663__i < G__28663__a.length) {G__28663__a[G__28663__i] = arguments[G__28663__i + 2]; ++G__28663__i;}
G__28662 = new cljs.core.IndexedSeq(G__28663__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__28664__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__28665 = y;
var G__28666 = cljs.core.first(more);
var G__28667 = cljs.core.next(more);
x = G__28665;
y = G__28666;
more = G__28667;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28664 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28668__i = 0, G__28668__a = new Array(arguments.length -  2);
while (G__28668__i < G__28668__a.length) {G__28668__a[G__28668__i] = arguments[G__28668__i + 2]; ++G__28668__i;}
  more = new cljs.core.IndexedSeq(G__28668__a,0);
} 
return G__28664__delegate.call(this,x,y,more);};
G__28664.cljs$lang$maxFixedArity = 2;
G__28664.cljs$lang$applyTo = (function (arglist__28669){
var x = cljs.core.first(arglist__28669);
arglist__28669 = cljs.core.next(arglist__28669);
var y = cljs.core.first(arglist__28669);
var more = cljs.core.rest(arglist__28669);
return G__28664__delegate(x,y,more);
});
G__28664.cljs$core$IFn$_invoke$arity$variadic = G__28664__delegate;
return G__28664;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__28670 = null;
if (arguments.length > 2) {
var G__28671__i = 0, G__28671__a = new Array(arguments.length -  2);
while (G__28671__i < G__28671__a.length) {G__28671__a[G__28671__i] = arguments[G__28671__i + 2]; ++G__28671__i;}
G__28670 = new cljs.core.IndexedSeq(G__28671__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__26056__auto__ = x;
var y__26057__auto__ = y;
return ((x__26056__auto__ > y__26057__auto__) ? x__26056__auto__ : y__26057__auto__);
});
var max__3 = (function() { 
var G__28672__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__26056__auto__ = x;
var y__26057__auto__ = y;
return ((x__26056__auto__ > y__26057__auto__) ? x__26056__auto__ : y__26057__auto__);
})(),more);
};
var G__28672 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28673__i = 0, G__28673__a = new Array(arguments.length -  2);
while (G__28673__i < G__28673__a.length) {G__28673__a[G__28673__i] = arguments[G__28673__i + 2]; ++G__28673__i;}
  more = new cljs.core.IndexedSeq(G__28673__a,0);
} 
return G__28672__delegate.call(this,x,y,more);};
G__28672.cljs$lang$maxFixedArity = 2;
G__28672.cljs$lang$applyTo = (function (arglist__28674){
var x = cljs.core.first(arglist__28674);
arglist__28674 = cljs.core.next(arglist__28674);
var y = cljs.core.first(arglist__28674);
var more = cljs.core.rest(arglist__28674);
return G__28672__delegate(x,y,more);
});
G__28672.cljs$core$IFn$_invoke$arity$variadic = G__28672__delegate;
return G__28672;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__28675 = null;
if (arguments.length > 2) {
var G__28676__i = 0, G__28676__a = new Array(arguments.length -  2);
while (G__28676__i < G__28676__a.length) {G__28676__a[G__28676__i] = arguments[G__28676__i + 2]; ++G__28676__i;}
G__28675 = new cljs.core.IndexedSeq(G__28676__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28675);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__26063__auto__ = x;
var y__26064__auto__ = y;
return ((x__26063__auto__ < y__26064__auto__) ? x__26063__auto__ : y__26064__auto__);
});
var min__3 = (function() { 
var G__28677__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__26063__auto__ = x;
var y__26064__auto__ = y;
return ((x__26063__auto__ < y__26064__auto__) ? x__26063__auto__ : y__26064__auto__);
})(),more);
};
var G__28677 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28678__i = 0, G__28678__a = new Array(arguments.length -  2);
while (G__28678__i < G__28678__a.length) {G__28678__a[G__28678__i] = arguments[G__28678__i + 2]; ++G__28678__i;}
  more = new cljs.core.IndexedSeq(G__28678__a,0);
} 
return G__28677__delegate.call(this,x,y,more);};
G__28677.cljs$lang$maxFixedArity = 2;
G__28677.cljs$lang$applyTo = (function (arglist__28679){
var x = cljs.core.first(arglist__28679);
arglist__28679 = cljs.core.next(arglist__28679);
var y = cljs.core.first(arglist__28679);
var more = cljs.core.rest(arglist__28679);
return G__28677__delegate(x,y,more);
});
G__28677.cljs$core$IFn$_invoke$arity$variadic = G__28677__delegate;
return G__28677;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__28680 = null;
if (arguments.length > 2) {
var G__28681__i = 0, G__28681__a = new Array(arguments.length -  2);
while (G__28681__i < G__28681__a.length) {G__28681__a[G__28681__i] = arguments[G__28681__i + 2]; ++G__28681__i;}
G__28680 = new cljs.core.IndexedSeq(G__28681__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__28682__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__28682 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28683__i = 0, G__28683__a = new Array(arguments.length -  2);
while (G__28683__i < G__28683__a.length) {G__28683__a[G__28683__i] = arguments[G__28683__i + 2]; ++G__28683__i;}
  more = new cljs.core.IndexedSeq(G__28683__a,0);
} 
return G__28682__delegate.call(this,x,y,more);};
G__28682.cljs$lang$maxFixedArity = 2;
G__28682.cljs$lang$applyTo = (function (arglist__28684){
var x = cljs.core.first(arglist__28684);
arglist__28684 = cljs.core.next(arglist__28684);
var y = cljs.core.first(arglist__28684);
var more = cljs.core.rest(arglist__28684);
return G__28682__delegate(x,y,more);
});
G__28682.cljs$core$IFn$_invoke$arity$variadic = G__28682__delegate;
return G__28682;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__28685 = null;
if (arguments.length > 2) {
var G__28686__i = 0, G__28686__a = new Array(arguments.length -  2);
while (G__28686__i < G__28686__a.length) {G__28686__a[G__28686__i] = arguments[G__28686__i + 2]; ++G__28686__i;}
G__28685 = new cljs.core.IndexedSeq(G__28686__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__28687__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__28687 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28688__i = 0, G__28688__a = new Array(arguments.length -  2);
while (G__28688__i < G__28688__a.length) {G__28688__a[G__28688__i] = arguments[G__28688__i + 2]; ++G__28688__i;}
  more = new cljs.core.IndexedSeq(G__28688__a,0);
} 
return G__28687__delegate.call(this,x,y,more);};
G__28687.cljs$lang$maxFixedArity = 2;
G__28687.cljs$lang$applyTo = (function (arglist__28689){
var x = cljs.core.first(arglist__28689);
arglist__28689 = cljs.core.next(arglist__28689);
var y = cljs.core.first(arglist__28689);
var more = cljs.core.rest(arglist__28689);
return G__28687__delegate(x,y,more);
});
G__28687.cljs$core$IFn$_invoke$arity$variadic = G__28687__delegate;
return G__28687;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__28690 = null;
if (arguments.length > 2) {
var G__28691__i = 0, G__28691__a = new Array(arguments.length -  2);
while (G__28691__i < G__28691__a.length) {G__28691__a[G__28691__i] = arguments[G__28691__i + 2]; ++G__28691__i;}
G__28690 = new cljs.core.IndexedSeq(G__28691__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__28696__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__28696 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28697__i = 0, G__28697__a = new Array(arguments.length -  2);
while (G__28697__i < G__28697__a.length) {G__28697__a[G__28697__i] = arguments[G__28697__i + 2]; ++G__28697__i;}
  more = new cljs.core.IndexedSeq(G__28697__a,0);
} 
return G__28696__delegate.call(this,x,y,more);};
G__28696.cljs$lang$maxFixedArity = 2;
G__28696.cljs$lang$applyTo = (function (arglist__28698){
var x = cljs.core.first(arglist__28698);
arglist__28698 = cljs.core.next(arglist__28698);
var y = cljs.core.first(arglist__28698);
var more = cljs.core.rest(arglist__28698);
return G__28696__delegate(x,y,more);
});
G__28696.cljs$core$IFn$_invoke$arity$variadic = G__28696__delegate;
return G__28696;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__28699 = null;
if (arguments.length > 2) {
var G__28700__i = 0, G__28700__a = new Array(arguments.length -  2);
while (G__28700__i < G__28700__a.length) {G__28700__a[G__28700__i] = arguments[G__28700__i + 2]; ++G__28700__i;}
G__28699 = new cljs.core.IndexedSeq(G__28700__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__28701__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__28701 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28702__i = 0, G__28702__a = new Array(arguments.length -  2);
while (G__28702__i < G__28702__a.length) {G__28702__a[G__28702__i] = arguments[G__28702__i + 2]; ++G__28702__i;}
  more = new cljs.core.IndexedSeq(G__28702__a,0);
} 
return G__28701__delegate.call(this,x,y,more);};
G__28701.cljs$lang$maxFixedArity = 2;
G__28701.cljs$lang$applyTo = (function (arglist__28703){
var x = cljs.core.first(arglist__28703);
arglist__28703 = cljs.core.next(arglist__28703);
var y = cljs.core.first(arglist__28703);
var more = cljs.core.rest(arglist__28703);
return G__28701__delegate(x,y,more);
});
G__28701.cljs$core$IFn$_invoke$arity$variadic = G__28701__delegate;
return G__28701;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__28704 = null;
if (arguments.length > 2) {
var G__28705__i = 0, G__28705__a = new Array(arguments.length -  2);
while (G__28705__i < G__28705__a.length) {G__28705__a[G__28705__i] = arguments[G__28705__i + 2]; ++G__28705__i;}
G__28704 = new cljs.core.IndexedSeq(G__28705__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__28706__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__28706 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28707__i = 0, G__28707__a = new Array(arguments.length -  2);
while (G__28707__i < G__28707__a.length) {G__28707__a[G__28707__i] = arguments[G__28707__i + 2]; ++G__28707__i;}
  more = new cljs.core.IndexedSeq(G__28707__a,0);
} 
return G__28706__delegate.call(this,x,y,more);};
G__28706.cljs$lang$maxFixedArity = 2;
G__28706.cljs$lang$applyTo = (function (arglist__28708){
var x = cljs.core.first(arglist__28708);
arglist__28708 = cljs.core.next(arglist__28708);
var y = cljs.core.first(arglist__28708);
var more = cljs.core.rest(arglist__28708);
return G__28706__delegate(x,y,more);
});
G__28706.cljs$core$IFn$_invoke$arity$variadic = G__28706__delegate;
return G__28706;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__28709 = null;
if (arguments.length > 2) {
var G__28710__i = 0, G__28710__a = new Array(arguments.length -  2);
while (G__28710__i < G__28710__a.length) {G__28710__a[G__28710__i] = arguments[G__28710__i + 2]; ++G__28710__i;}
G__28709 = new cljs.core.IndexedSeq(G__28710__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__28713 = x;
var G__28714 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__28713,G__28714) : cljs.core.mod.call(null,G__28713,G__28714));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__28715__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__28715 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28716__i = 0, G__28716__a = new Array(arguments.length -  2);
while (G__28716__i < G__28716__a.length) {G__28716__a[G__28716__i] = arguments[G__28716__i + 2]; ++G__28716__i;}
  more = new cljs.core.IndexedSeq(G__28716__a,0);
} 
return G__28715__delegate.call(this,x,y,more);};
G__28715.cljs$lang$maxFixedArity = 2;
G__28715.cljs$lang$applyTo = (function (arglist__28717){
var x = cljs.core.first(arglist__28717);
arglist__28717 = cljs.core.next(arglist__28717);
var y = cljs.core.first(arglist__28717);
var more = cljs.core.rest(arglist__28717);
return G__28715__delegate(x,y,more);
});
G__28715.cljs$core$IFn$_invoke$arity$variadic = G__28715__delegate;
return G__28715;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__28718 = null;
if (arguments.length > 2) {
var G__28719__i = 0, G__28719__a = new Array(arguments.length -  2);
while (G__28719__i < G__28719__a.length) {G__28719__a[G__28719__i] = arguments[G__28719__i + 2]; ++G__28719__i;}
G__28718 = new cljs.core.IndexedSeq(G__28719__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__28720__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__28720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28721__i = 0, G__28721__a = new Array(arguments.length -  2);
while (G__28721__i < G__28721__a.length) {G__28721__a[G__28721__i] = arguments[G__28721__i + 2]; ++G__28721__i;}
  more = new cljs.core.IndexedSeq(G__28721__a,0);
} 
return G__28720__delegate.call(this,x,y,more);};
G__28720.cljs$lang$maxFixedArity = 2;
G__28720.cljs$lang$applyTo = (function (arglist__28722){
var x = cljs.core.first(arglist__28722);
arglist__28722 = cljs.core.next(arglist__28722);
var y = cljs.core.first(arglist__28722);
var more = cljs.core.rest(arglist__28722);
return G__28720__delegate(x,y,more);
});
G__28720.cljs$core$IFn$_invoke$arity$variadic = G__28720__delegate;
return G__28720;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__28723 = null;
if (arguments.length > 2) {
var G__28724__i = 0, G__28724__a = new Array(arguments.length -  2);
while (G__28724__i < G__28724__a.length) {G__28724__a[G__28724__i] = arguments[G__28724__i + 2]; ++G__28724__i;}
G__28723 = new cljs.core.IndexedSeq(G__28724__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__28727 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28727) : Math.floor.call(null,G__28727));
} else {
var G__28728 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__28728) : Math.ceil.call(null,G__28728));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__28733__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__28734 = y;
var G__28735 = cljs.core.first(more);
var G__28736 = cljs.core.next(more);
x = G__28734;
y = G__28735;
more = G__28736;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__28733 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__28737__i = 0, G__28737__a = new Array(arguments.length -  2);
while (G__28737__i < G__28737__a.length) {G__28737__a[G__28737__i] = arguments[G__28737__i + 2]; ++G__28737__i;}
  more = new cljs.core.IndexedSeq(G__28737__a,0);
} 
return G__28733__delegate.call(this,x,y,more);};
G__28733.cljs$lang$maxFixedArity = 2;
G__28733.cljs$lang$applyTo = (function (arglist__28738){
var x = cljs.core.first(arglist__28738);
arglist__28738 = cljs.core.next(arglist__28738);
var y = cljs.core.first(arglist__28738);
var more = cljs.core.rest(arglist__28738);
return G__28733__delegate(x,y,more);
});
G__28733.cljs$core$IFn$_invoke$arity$variadic = G__28733__delegate;
return G__28733;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__28739 = null;
if (arguments.length > 2) {
var G__28740__i = 0, G__28740__a = new Array(arguments.length -  2);
while (G__28740__i < G__28740__a.length) {G__28740__a[G__28740__i] = arguments[G__28740__i + 2]; ++G__28740__i;}
G__28739 = new cljs.core.IndexedSeq(G__28740__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__28741 = (n__$1 - (1));
var G__28742 = cljs.core.next(xs);
n__$1 = G__28741;
xs = G__28742;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__28746 = x;
return goog.string.buildString(G__28746);
}
});
var str__2 = (function() { 
var G__28747__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__28748 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__28749 = cljs.core.next(more);
sb = G__28748;
more = G__28749;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__28747 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__28750__i = 0, G__28750__a = new Array(arguments.length -  1);
while (G__28750__i < G__28750__a.length) {G__28750__a[G__28750__i] = arguments[G__28750__i + 1]; ++G__28750__i;}
  ys = new cljs.core.IndexedSeq(G__28750__a,0);
} 
return G__28747__delegate.call(this,x,ys);};
G__28747.cljs$lang$maxFixedArity = 1;
G__28747.cljs$lang$applyTo = (function (arglist__28751){
var x = cljs.core.first(arglist__28751);
var ys = cljs.core.rest(arglist__28751);
return G__28747__delegate(x,ys);
});
G__28747.cljs$core$IFn$_invoke$arity$variadic = G__28747__delegate;
return G__28747;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__28752 = null;
if (arguments.length > 1) {
var G__28753__i = 0, G__28753__a = new Array(arguments.length -  1);
while (G__28753__i < G__28753__a.length) {G__28753__a[G__28753__i] = arguments[G__28753__i + 1]; ++G__28753__i;}
G__28752 = new cljs.core.IndexedSeq(G__28753__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__28754 = cljs.core.next(xs);
var G__28755 = cljs.core.next(ys);
xs = G__28754;
ys = G__28755;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__28756 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__28757 = cljs.core.next(s);
res = G__28756;
s = G__28757;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__28762 = ((h + (cljs.core.hash((function (){var G__28760 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__28760) : cljs.core.key.call(null,G__28760));
})()) ^ cljs.core.hash((function (){var G__28761 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__28761) : cljs.core.val.call(null,G__28761));
})()))) % (4503599627370496));
var G__28763 = cljs.core.next(s);
h = G__28762;
s = G__28763;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__28764 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__28765 = cljs.core.next(s__$1);
h = G__28764;
s__$1 = G__28765;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__28776_28786 = cljs.core.seq(fn_map);
var chunk__28777_28787 = null;
var count__28778_28788 = (0);
var i__28779_28789 = (0);
while(true){
if((i__28779_28789 < count__28778_28788)){
var vec__28780_28790 = chunk__28777_28787.cljs$core$IIndexed$_nth$arity$2(null,i__28779_28789);
var key_name_28791 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28780_28790,(0),null);
var f_28792 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28780_28790,(1),null);
var str_name_28793 = (function (){var G__28781 = key_name_28791;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28781) : cljs.core.name.call(null,G__28781));
})();
(obj[str_name_28793] = f_28792);

var G__28794 = seq__28776_28786;
var G__28795 = chunk__28777_28787;
var G__28796 = count__28778_28788;
var G__28797 = (i__28779_28789 + (1));
seq__28776_28786 = G__28794;
chunk__28777_28787 = G__28795;
count__28778_28788 = G__28796;
i__28779_28789 = G__28797;
continue;
} else {
var temp__4406__auto___28798 = cljs.core.seq(seq__28776_28786);
if(temp__4406__auto___28798){
var seq__28776_28799__$1 = temp__4406__auto___28798;
if(cljs.core.chunked_seq_QMARK_(seq__28776_28799__$1)){
var c__26526__auto___28800 = (function (){var G__28782 = seq__28776_28799__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__28782) : cljs.core.chunk_first.call(null,G__28782));
})();
var G__28801 = (function (){var G__28783 = seq__28776_28799__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__28783) : cljs.core.chunk_rest.call(null,G__28783));
})();
var G__28802 = c__26526__auto___28800;
var G__28803 = cljs.core.count(c__26526__auto___28800);
var G__28804 = (0);
seq__28776_28786 = G__28801;
chunk__28777_28787 = G__28802;
count__28778_28788 = G__28803;
i__28779_28789 = G__28804;
continue;
} else {
var vec__28784_28805 = cljs.core.first(seq__28776_28799__$1);
var key_name_28806 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28784_28805,(0),null);
var f_28807 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28784_28805,(1),null);
var str_name_28808 = (function (){var G__28785 = key_name_28806;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28785) : cljs.core.name.call(null,G__28785));
})();
(obj[str_name_28808] = f_28807);

var G__28809 = cljs.core.next(seq__28776_28799__$1);
var G__28810 = null;
var G__28811 = (0);
var G__28812 = (0);
seq__28776_28786 = G__28809;
chunk__28777_28787 = G__28810;
count__28778_28788 = G__28811;
i__28779_28789 = G__28812;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__28814 = coll;
if(G__28814){
var bit__26420__auto__ = (G__28814.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__26420__auto__) || (G__28814.cljs$core$IReversible$)){
return true;
} else {
if((!G__28814.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__28814);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__28814);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__28815 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__28815;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__28816 = (i - (1));
var G__28817 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__28816;
r = G__28817;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__28818__i = 0, G__28818__a = new Array(arguments.length -  0);
while (G__28818__i < G__28818__a.length) {G__28818__a[G__28818__i] = arguments[G__28818__i + 0]; ++G__28818__i;}
  xs = new cljs.core.IndexedSeq(G__28818__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__28819){
var xs = cljs.core.seq(arglist__28819);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__25739__auto__ = (coll == null);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var G__28823 = coll;
if(G__28823){
var bit__26413__auto__ = (G__28823.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__26413__auto__) || (G__28823.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__28825 = x;
if(G__28825){
var bit__26420__auto__ = (G__28825.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__26420__auto__) || (G__28825.cljs$core$IList$)){
return true;
} else {
if((!G__28825.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__28825);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__28825);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__25727__auto__ = cljs.core.not(a.ns);
if(and__25727__auto__){
return b.ns;
} else {
return and__25727__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__28832 = a.ns;
var G__28833 = b.ns;
return goog.array.defaultCompare(G__28832,G__28833);
})();
if(((0) === nsc)){
var G__28834 = a.name;
var G__28835 = b.name;
return goog.array.defaultCompare(G__28834,G__28835);
} else {
return nsc;
}
}
} else {
var G__28836 = a.name;
var G__28837 = b.name;
return goog.array.defaultCompare(G__28836,G__28837);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__26160__auto__ = self__._hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__28839 = null;
var G__28839__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__28839__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__28839 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__28839__2.call(this,self__,coll);
case 3:
return G__28839__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28839.cljs$core$IFn$_invoke$arity$2 = G__28839__2;
G__28839.cljs$core$IFn$_invoke$arity$3 = G__28839__3;
return G__28839;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args28838){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28838)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__28841 = x;
if(G__28841){
var bit__26413__auto__ = (G__28841.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__26413__auto__) || (G__28841.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__28843 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__28843) : cljs.core.name.call(null,G__28843));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__28844 = ls.sval();
ls = G__28844;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__28846 = s;
if(G__28846){
var bit__26413__auto__ = (G__28846.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__26413__auto__) || (G__28846.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__28847 = cljs.core.next(s__$1);
s__$1 = G__28847;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_28848 = (0);
var xs_28849 = cljs.core.seq(coll);
while(true){
if(xs_28849){
(ret[i_28848] = cljs.core.to_array(cljs.core.first(xs_28849)));

var G__28850 = (i_28848 + (1));
var G__28851 = cljs.core.next(xs_28849);
i_28848 = G__28850;
xs_28849 = G__28851;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28854 = (i + (1));
var G__28855 = cljs.core.next(s__$1);
i = G__28854;
s__$1 = G__28855;
continue;
} else {
return a;
}
break;
}
} else {
var n__26626__auto___28856 = size;
var i_28857 = (0);
while(true){
if((i_28857 < n__26626__auto___28856)){
(a[i_28857] = init_val_or_seq);

var G__28858 = (i_28857 + (1));
i_28857 = G__28858;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28861 = (i + (1));
var G__28862 = cljs.core.next(s__$1);
i = G__28861;
s__$1 = G__28862;
continue;
} else {
return a;
}
break;
}
} else {
var n__26626__auto___28863 = size;
var i_28864 = (0);
while(true){
if((i_28864 < n__26626__auto___28863)){
(a[i_28864] = init_val_or_seq);

var G__28865 = (i_28864 + (1));
i_28864 = G__28865;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28868 = (i + (1));
var G__28869 = cljs.core.next(s__$1);
i = G__28868;
s__$1 = G__28869;
continue;
} else {
return a;
}
break;
}
} else {
var n__26626__auto___28870 = size;
var i_28871 = (0);
while(true){
if((i_28871 < n__26626__auto___28870)){
(a[i_28871] = init_val_or_seq);

var G__28872 = (i_28871 + (1));
i_28871 = G__28872;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__28875 = (i + (1));
var G__28876 = cljs.core.next(s__$1);
i = G__28875;
s__$1 = G__28876;
continue;
} else {
return a;
}
break;
}
} else {
var n__26626__auto___28877 = size;
var i_28878 = (0);
while(true){
if((i_28878 < n__26626__auto___28877)){
(a[i_28878] = init_val_or_seq);

var G__28879 = (i_28878 + (1));
i_28878 = G__28879;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__28880 = cljs.core.next(s__$1);
var G__28881 = (i - (1));
var G__28882 = (sum + (1));
s__$1 = G__28880;
i = G__28881;
sum = G__28882;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__28902__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__28902 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__28903__i = 0, G__28903__a = new Array(arguments.length -  2);
while (G__28903__i < G__28903__a.length) {G__28903__a[G__28903__i] = arguments[G__28903__i + 2]; ++G__28903__i;}
  zs = new cljs.core.IndexedSeq(G__28903__a,0);
} 
return G__28902__delegate.call(this,x,y,zs);};
G__28902.cljs$lang$maxFixedArity = 2;
G__28902.cljs$lang$applyTo = (function (arglist__28904){
var x = cljs.core.first(arglist__28904);
arglist__28904 = cljs.core.next(arglist__28904);
var y = cljs.core.first(arglist__28904);
var zs = cljs.core.rest(arglist__28904);
return G__28902__delegate(x,y,zs);
});
G__28902.cljs$core$IFn$_invoke$arity$variadic = G__28902__delegate;
return G__28902;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__28905 = null;
if (arguments.length > 2) {
var G__28906__i = 0, G__28906__a = new Array(arguments.length -  2);
while (G__28906__i < G__28906__a.length) {G__28906__a[G__28906__i] = arguments[G__28906__i + 2]; ++G__28906__i;}
G__28905 = new cljs.core.IndexedSeq(G__28906__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__28905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__28907__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__28907 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__28908__i = 0, G__28908__a = new Array(arguments.length -  4);
while (G__28908__i < G__28908__a.length) {G__28908__a[G__28908__i] = arguments[G__28908__i + 4]; ++G__28908__i;}
  more = new cljs.core.IndexedSeq(G__28908__a,0);
} 
return G__28907__delegate.call(this,a,b,c,d,more);};
G__28907.cljs$lang$maxFixedArity = 4;
G__28907.cljs$lang$applyTo = (function (arglist__28909){
var a = cljs.core.first(arglist__28909);
arglist__28909 = cljs.core.next(arglist__28909);
var b = cljs.core.first(arglist__28909);
arglist__28909 = cljs.core.next(arglist__28909);
var c = cljs.core.first(arglist__28909);
arglist__28909 = cljs.core.next(arglist__28909);
var d = cljs.core.first(arglist__28909);
var more = cljs.core.rest(arglist__28909);
return G__28907__delegate(a,b,c,d,more);
});
G__28907.cljs$core$IFn$_invoke$arity$variadic = G__28907__delegate;
return G__28907;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__28910 = null;
if (arguments.length > 4) {
var G__28911__i = 0, G__28911__a = new Array(arguments.length -  4);
while (G__28911__i < G__28911__a.length) {G__28911__a[G__28911__i] = arguments[G__28911__i + 4]; ++G__28911__i;}
G__28910 = new cljs.core.IndexedSeq(G__28911__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__28910);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__28912__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__28913 = ntcoll;
var G__28914 = cljs.core.first(vals);
var G__28915 = cljs.core.next(vals);
tcoll = G__28913;
val = G__28914;
vals = G__28915;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28912 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__28916__i = 0, G__28916__a = new Array(arguments.length -  2);
while (G__28916__i < G__28916__a.length) {G__28916__a[G__28916__i] = arguments[G__28916__i + 2]; ++G__28916__i;}
  vals = new cljs.core.IndexedSeq(G__28916__a,0);
} 
return G__28912__delegate.call(this,tcoll,val,vals);};
G__28912.cljs$lang$maxFixedArity = 2;
G__28912.cljs$lang$applyTo = (function (arglist__28917){
var tcoll = cljs.core.first(arglist__28917);
arglist__28917 = cljs.core.next(arglist__28917);
var val = cljs.core.first(arglist__28917);
var vals = cljs.core.rest(arglist__28917);
return G__28912__delegate(tcoll,val,vals);
});
G__28912.cljs$core$IFn$_invoke$arity$variadic = G__28912__delegate;
return G__28912;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__28918 = null;
if (arguments.length > 2) {
var G__28919__i = 0, G__28919__a = new Array(arguments.length -  2);
while (G__28919__i < G__28919__a.length) {G__28919__a[G__28919__i] = arguments[G__28919__i + 2]; ++G__28919__i;}
G__28918 = new cljs.core.IndexedSeq(G__28919__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__28918);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__28920__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__28921 = ntcoll;
var G__28922 = cljs.core.first(kvs);
var G__28923 = cljs.core.second(kvs);
var G__28924 = cljs.core.nnext(kvs);
tcoll = G__28921;
key = G__28922;
val = G__28923;
kvs = G__28924;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28920 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__28925__i = 0, G__28925__a = new Array(arguments.length -  3);
while (G__28925__i < G__28925__a.length) {G__28925__a[G__28925__i] = arguments[G__28925__i + 3]; ++G__28925__i;}
  kvs = new cljs.core.IndexedSeq(G__28925__a,0);
} 
return G__28920__delegate.call(this,tcoll,key,val,kvs);};
G__28920.cljs$lang$maxFixedArity = 3;
G__28920.cljs$lang$applyTo = (function (arglist__28926){
var tcoll = cljs.core.first(arglist__28926);
arglist__28926 = cljs.core.next(arglist__28926);
var key = cljs.core.first(arglist__28926);
arglist__28926 = cljs.core.next(arglist__28926);
var val = cljs.core.first(arglist__28926);
var kvs = cljs.core.rest(arglist__28926);
return G__28920__delegate(tcoll,key,val,kvs);
});
G__28920.cljs$core$IFn$_invoke$arity$variadic = G__28920__delegate;
return G__28920;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__28927 = null;
if (arguments.length > 3) {
var G__28928__i = 0, G__28928__a = new Array(arguments.length -  3);
while (G__28928__i < G__28928__a.length) {G__28928__a[G__28928__i] = arguments[G__28928__i + 3]; ++G__28928__i;}
G__28927 = new cljs.core.IndexedSeq(G__28928__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__28927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__28929__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__28930 = ntcoll;
var G__28931 = cljs.core.first(ks);
var G__28932 = cljs.core.next(ks);
tcoll = G__28930;
key = G__28931;
ks = G__28932;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28929 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__28933__i = 0, G__28933__a = new Array(arguments.length -  2);
while (G__28933__i < G__28933__a.length) {G__28933__a[G__28933__i] = arguments[G__28933__i + 2]; ++G__28933__i;}
  ks = new cljs.core.IndexedSeq(G__28933__a,0);
} 
return G__28929__delegate.call(this,tcoll,key,ks);};
G__28929.cljs$lang$maxFixedArity = 2;
G__28929.cljs$lang$applyTo = (function (arglist__28934){
var tcoll = cljs.core.first(arglist__28934);
arglist__28934 = cljs.core.next(arglist__28934);
var key = cljs.core.first(arglist__28934);
var ks = cljs.core.rest(arglist__28934);
return G__28929__delegate(tcoll,key,ks);
});
G__28929.cljs$core$IFn$_invoke$arity$variadic = G__28929__delegate;
return G__28929;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__28935 = null;
if (arguments.length > 2) {
var G__28936__i = 0, G__28936__a = new Array(arguments.length -  2);
while (G__28936__i < G__28936__a.length) {G__28936__a[G__28936__i] = arguments[G__28936__i + 2]; ++G__28936__i;}
G__28935 = new cljs.core.IndexedSeq(G__28936__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__28935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__28937__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__28938 = ntcoll;
var G__28939 = cljs.core.first(vals);
var G__28940 = cljs.core.next(vals);
tcoll = G__28938;
val = G__28939;
vals = G__28940;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__28937 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__28941__i = 0, G__28941__a = new Array(arguments.length -  2);
while (G__28941__i < G__28941__a.length) {G__28941__a[G__28941__i] = arguments[G__28941__i + 2]; ++G__28941__i;}
  vals = new cljs.core.IndexedSeq(G__28941__a,0);
} 
return G__28937__delegate.call(this,tcoll,val,vals);};
G__28937.cljs$lang$maxFixedArity = 2;
G__28937.cljs$lang$applyTo = (function (arglist__28942){
var tcoll = cljs.core.first(arglist__28942);
arglist__28942 = cljs.core.next(arglist__28942);
var val = cljs.core.first(arglist__28942);
var vals = cljs.core.rest(arglist__28942);
return G__28937__delegate(tcoll,val,vals);
});
G__28937.cljs$core$IFn$_invoke$arity$variadic = G__28937__delegate;
return G__28937;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__28943 = null;
if (arguments.length > 2) {
var G__28944__i = 0, G__28944__a = new Array(arguments.length -  2);
while (G__28944__i < G__28944__a.length) {G__28944__a[G__28944__i] = arguments[G__28944__i + 2]; ++G__28944__i;}
G__28943 = new cljs.core.IndexedSeq(G__28944__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__28943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a26670 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a26670);
} else {
var G__29155 = a26670;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29155) : f.call(null,G__29155));
}
} else {
var b26671 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a26670,b26671);
} else {
var G__29156 = a26670;
var G__29157 = b26671;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29156,G__29157) : f.call(null,G__29156,G__29157));
}
} else {
var c26672 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a26670,b26671,c26672);
} else {
var G__29158 = a26670;
var G__29159 = b26671;
var G__29160 = c26672;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29158,G__29159,G__29160) : f.call(null,G__29158,G__29159,G__29160));
}
} else {
var d26673 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a26670,b26671,c26672,d26673);
} else {
var G__29161 = a26670;
var G__29162 = b26671;
var G__29163 = c26672;
var G__29164 = d26673;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29161,G__29162,G__29163,G__29164) : f.call(null,G__29161,G__29162,G__29163,G__29164));
}
} else {
var e26674 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a26670,b26671,c26672,d26673,e26674);
} else {
var G__29165 = a26670;
var G__29166 = b26671;
var G__29167 = c26672;
var G__29168 = d26673;
var G__29169 = e26674;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29165,G__29166,G__29167,G__29168,G__29169) : f.call(null,G__29165,G__29166,G__29167,G__29168,G__29169));
}
} else {
var f26675 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a26670,b26671,c26672,d26673,e26674,f26675);
} else {
var G__29170 = a26670;
var G__29171 = b26671;
var G__29172 = c26672;
var G__29173 = d26673;
var G__29174 = e26674;
var G__29175 = f26675;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__29170,G__29171,G__29172,G__29173,G__29174,G__29175) : f.call(null,G__29170,G__29171,G__29172,G__29173,G__29174,G__29175));
}
} else {
var g26676 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a26670,b26671,c26672,d26673,e26674,f26675,g26676);
} else {
var G__29176 = a26670;
var G__29177 = b26671;
var G__29178 = c26672;
var G__29179 = d26673;
var G__29180 = e26674;
var G__29181 = f26675;
var G__29182 = g26676;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__29176,G__29177,G__29178,G__29179,G__29180,G__29181,G__29182) : f.call(null,G__29176,G__29177,G__29178,G__29179,G__29180,G__29181,G__29182));
}
} else {
var h26677 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677);
} else {
var G__29183 = a26670;
var G__29184 = b26671;
var G__29185 = c26672;
var G__29186 = d26673;
var G__29187 = e26674;
var G__29188 = f26675;
var G__29189 = g26676;
var G__29190 = h26677;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__29183,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189,G__29190) : f.call(null,G__29183,G__29184,G__29185,G__29186,G__29187,G__29188,G__29189,G__29190));
}
} else {
var i26678 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678);
} else {
var G__29191 = a26670;
var G__29192 = b26671;
var G__29193 = c26672;
var G__29194 = d26673;
var G__29195 = e26674;
var G__29196 = f26675;
var G__29197 = g26676;
var G__29198 = h26677;
var G__29199 = i26678;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__29191,G__29192,G__29193,G__29194,G__29195,G__29196,G__29197,G__29198,G__29199) : f.call(null,G__29191,G__29192,G__29193,G__29194,G__29195,G__29196,G__29197,G__29198,G__29199));
}
} else {
var j26679 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679);
} else {
var G__29200 = a26670;
var G__29201 = b26671;
var G__29202 = c26672;
var G__29203 = d26673;
var G__29204 = e26674;
var G__29205 = f26675;
var G__29206 = g26676;
var G__29207 = h26677;
var G__29208 = i26678;
var G__29209 = j26679;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206,G__29207,G__29208,G__29209) : f.call(null,G__29200,G__29201,G__29202,G__29203,G__29204,G__29205,G__29206,G__29207,G__29208,G__29209));
}
} else {
var k26680 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680);
} else {
var G__29210 = a26670;
var G__29211 = b26671;
var G__29212 = c26672;
var G__29213 = d26673;
var G__29214 = e26674;
var G__29215 = f26675;
var G__29216 = g26676;
var G__29217 = h26677;
var G__29218 = i26678;
var G__29219 = j26679;
var G__29220 = k26680;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220) : f.call(null,G__29210,G__29211,G__29212,G__29213,G__29214,G__29215,G__29216,G__29217,G__29218,G__29219,G__29220));
}
} else {
var l26681 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681);
} else {
var G__29221 = a26670;
var G__29222 = b26671;
var G__29223 = c26672;
var G__29224 = d26673;
var G__29225 = e26674;
var G__29226 = f26675;
var G__29227 = g26676;
var G__29228 = h26677;
var G__29229 = i26678;
var G__29230 = j26679;
var G__29231 = k26680;
var G__29232 = l26681;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230,G__29231,G__29232) : f.call(null,G__29221,G__29222,G__29223,G__29224,G__29225,G__29226,G__29227,G__29228,G__29229,G__29230,G__29231,G__29232));
}
} else {
var m26682 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682);
} else {
var G__29233 = a26670;
var G__29234 = b26671;
var G__29235 = c26672;
var G__29236 = d26673;
var G__29237 = e26674;
var G__29238 = f26675;
var G__29239 = g26676;
var G__29240 = h26677;
var G__29241 = i26678;
var G__29242 = j26679;
var G__29243 = k26680;
var G__29244 = l26681;
var G__29245 = m26682;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241,G__29242,G__29243,G__29244,G__29245) : f.call(null,G__29233,G__29234,G__29235,G__29236,G__29237,G__29238,G__29239,G__29240,G__29241,G__29242,G__29243,G__29244,G__29245));
}
} else {
var n26683 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683);
} else {
var G__29246 = a26670;
var G__29247 = b26671;
var G__29248 = c26672;
var G__29249 = d26673;
var G__29250 = e26674;
var G__29251 = f26675;
var G__29252 = g26676;
var G__29253 = h26677;
var G__29254 = i26678;
var G__29255 = j26679;
var G__29256 = k26680;
var G__29257 = l26681;
var G__29258 = m26682;
var G__29259 = n26683;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__29246,G__29247,G__29248,G__29249,G__29250,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259) : f.call(null,G__29246,G__29247,G__29248,G__29249,G__29250,G__29251,G__29252,G__29253,G__29254,G__29255,G__29256,G__29257,G__29258,G__29259));
}
} else {
var o26684 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683,o26684);
} else {
var G__29260 = a26670;
var G__29261 = b26671;
var G__29262 = c26672;
var G__29263 = d26673;
var G__29264 = e26674;
var G__29265 = f26675;
var G__29266 = g26676;
var G__29267 = h26677;
var G__29268 = i26678;
var G__29269 = j26679;
var G__29270 = k26680;
var G__29271 = l26681;
var G__29272 = m26682;
var G__29273 = n26683;
var G__29274 = o26684;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__29260,G__29261,G__29262,G__29263,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274) : f.call(null,G__29260,G__29261,G__29262,G__29263,G__29264,G__29265,G__29266,G__29267,G__29268,G__29269,G__29270,G__29271,G__29272,G__29273,G__29274));
}
} else {
var p26685 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683,o26684,p26685);
} else {
var G__29275 = a26670;
var G__29276 = b26671;
var G__29277 = c26672;
var G__29278 = d26673;
var G__29279 = e26674;
var G__29280 = f26675;
var G__29281 = g26676;
var G__29282 = h26677;
var G__29283 = i26678;
var G__29284 = j26679;
var G__29285 = k26680;
var G__29286 = l26681;
var G__29287 = m26682;
var G__29288 = n26683;
var G__29289 = o26684;
var G__29290 = p26685;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__29275,G__29276,G__29277,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290) : f.call(null,G__29275,G__29276,G__29277,G__29278,G__29279,G__29280,G__29281,G__29282,G__29283,G__29284,G__29285,G__29286,G__29287,G__29288,G__29289,G__29290));
}
} else {
var q26686 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683,o26684,p26685,q26686);
} else {
var G__29291 = a26670;
var G__29292 = b26671;
var G__29293 = c26672;
var G__29294 = d26673;
var G__29295 = e26674;
var G__29296 = f26675;
var G__29297 = g26676;
var G__29298 = h26677;
var G__29299 = i26678;
var G__29300 = j26679;
var G__29301 = k26680;
var G__29302 = l26681;
var G__29303 = m26682;
var G__29304 = n26683;
var G__29305 = o26684;
var G__29306 = p26685;
var G__29307 = q26686;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307) : f.call(null,G__29291,G__29292,G__29293,G__29294,G__29295,G__29296,G__29297,G__29298,G__29299,G__29300,G__29301,G__29302,G__29303,G__29304,G__29305,G__29306,G__29307));
}
} else {
var r26687 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683,o26684,p26685,q26686,r26687);
} else {
var G__29308 = a26670;
var G__29309 = b26671;
var G__29310 = c26672;
var G__29311 = d26673;
var G__29312 = e26674;
var G__29313 = f26675;
var G__29314 = g26676;
var G__29315 = h26677;
var G__29316 = i26678;
var G__29317 = j26679;
var G__29318 = k26680;
var G__29319 = l26681;
var G__29320 = m26682;
var G__29321 = n26683;
var G__29322 = o26684;
var G__29323 = p26685;
var G__29324 = q26686;
var G__29325 = r26687;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325) : f.call(null,G__29308,G__29309,G__29310,G__29311,G__29312,G__29313,G__29314,G__29315,G__29316,G__29317,G__29318,G__29319,G__29320,G__29321,G__29322,G__29323,G__29324,G__29325));
}
} else {
var s26688 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683,o26684,p26685,q26686,r26687,s26688);
} else {
var G__29326 = a26670;
var G__29327 = b26671;
var G__29328 = c26672;
var G__29329 = d26673;
var G__29330 = e26674;
var G__29331 = f26675;
var G__29332 = g26676;
var G__29333 = h26677;
var G__29334 = i26678;
var G__29335 = j26679;
var G__29336 = k26680;
var G__29337 = l26681;
var G__29338 = m26682;
var G__29339 = n26683;
var G__29340 = o26684;
var G__29341 = p26685;
var G__29342 = q26686;
var G__29343 = r26687;
var G__29344 = s26688;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343,G__29344) : f.call(null,G__29326,G__29327,G__29328,G__29329,G__29330,G__29331,G__29332,G__29333,G__29334,G__29335,G__29336,G__29337,G__29338,G__29339,G__29340,G__29341,G__29342,G__29343,G__29344));
}
} else {
var t26689 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a26670,b26671,c26672,d26673,e26674,f26675,g26676,h26677,i26678,j26679,k26680,l26681,m26682,n26683,o26684,p26685,q26686,r26687,s26688,t26689);
} else {
var G__29345 = a26670;
var G__29346 = b26671;
var G__29347 = c26672;
var G__29348 = d26673;
var G__29349 = e26674;
var G__29350 = f26675;
var G__29351 = g26676;
var G__29352 = h26677;
var G__29353 = i26678;
var G__29354 = j26679;
var G__29355 = k26680;
var G__29356 = l26681;
var G__29357 = m26682;
var G__29358 = n26683;
var G__29359 = o26684;
var G__29360 = p26685;
var G__29361 = q26686;
var G__29362 = r26687;
var G__29363 = s26688;
var G__29364 = t26689;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351,G__29352,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362,G__29363,G__29364) : f.call(null,G__29345,G__29346,G__29347,G__29348,G__29349,G__29350,G__29351,G__29352,G__29353,G__29354,G__29355,G__29356,G__29357,G__29358,G__29359,G__29360,G__29361,G__29362,G__29363,G__29364));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__29365__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__29365 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__29366__i = 0, G__29366__a = new Array(arguments.length -  5);
while (G__29366__i < G__29366__a.length) {G__29366__a[G__29366__i] = arguments[G__29366__i + 5]; ++G__29366__i;}
  args = new cljs.core.IndexedSeq(G__29366__a,0);
} 
return G__29365__delegate.call(this,f,a,b,c,d,args);};
G__29365.cljs$lang$maxFixedArity = 5;
G__29365.cljs$lang$applyTo = (function (arglist__29367){
var f = cljs.core.first(arglist__29367);
arglist__29367 = cljs.core.next(arglist__29367);
var a = cljs.core.first(arglist__29367);
arglist__29367 = cljs.core.next(arglist__29367);
var b = cljs.core.first(arglist__29367);
arglist__29367 = cljs.core.next(arglist__29367);
var c = cljs.core.first(arglist__29367);
arglist__29367 = cljs.core.next(arglist__29367);
var d = cljs.core.first(arglist__29367);
var args = cljs.core.rest(arglist__29367);
return G__29365__delegate(f,a,b,c,d,args);
});
G__29365.cljs$core$IFn$_invoke$arity$variadic = G__29365__delegate;
return G__29365;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__29368 = null;
if (arguments.length > 5) {
var G__29369__i = 0, G__29369__a = new Array(arguments.length -  5);
while (G__29369__i < G__29369__a.length) {G__29369__a[G__29369__i] = arguments[G__29369__i + 5]; ++G__29369__i;}
G__29368 = new cljs.core.IndexedSeq(G__29369__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__29368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__29385 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29385) : f.call(null,G__29385));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__29386 = cljs.core.meta(obj);
var G__29387 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29386,G__29387) : f.call(null,G__29386,G__29387));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__29388 = cljs.core.meta(obj);
var G__29389 = a;
var G__29390 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29388,G__29389,G__29390) : f.call(null,G__29388,G__29389,G__29390));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__29391 = cljs.core.meta(obj);
var G__29392 = a;
var G__29393 = b;
var G__29394 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29391,G__29392,G__29393,G__29394) : f.call(null,G__29391,G__29392,G__29393,G__29394));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__29395 = cljs.core.meta(obj);
var G__29396 = a;
var G__29397 = b;
var G__29398 = c;
var G__29399 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29395,G__29396,G__29397,G__29398,G__29399) : f.call(null,G__29395,G__29396,G__29397,G__29398,G__29399));
})());
});
var vary_meta__7 = (function() { 
var G__29400__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__29400 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__29401__i = 0, G__29401__a = new Array(arguments.length -  6);
while (G__29401__i < G__29401__a.length) {G__29401__a[G__29401__i] = arguments[G__29401__i + 6]; ++G__29401__i;}
  args = new cljs.core.IndexedSeq(G__29401__a,0);
} 
return G__29400__delegate.call(this,obj,f,a,b,c,d,args);};
G__29400.cljs$lang$maxFixedArity = 6;
G__29400.cljs$lang$applyTo = (function (arglist__29402){
var obj = cljs.core.first(arglist__29402);
arglist__29402 = cljs.core.next(arglist__29402);
var f = cljs.core.first(arglist__29402);
arglist__29402 = cljs.core.next(arglist__29402);
var a = cljs.core.first(arglist__29402);
arglist__29402 = cljs.core.next(arglist__29402);
var b = cljs.core.first(arglist__29402);
arglist__29402 = cljs.core.next(arglist__29402);
var c = cljs.core.first(arglist__29402);
arglist__29402 = cljs.core.next(arglist__29402);
var d = cljs.core.first(arglist__29402);
var args = cljs.core.rest(arglist__29402);
return G__29400__delegate(obj,f,a,b,c,d,args);
});
G__29400.cljs$core$IFn$_invoke$arity$variadic = G__29400__delegate;
return G__29400;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__29403 = null;
if (arguments.length > 6) {
var G__29404__i = 0, G__29404__a = new Array(arguments.length -  6);
while (G__29404__i < G__29404__a.length) {G__29404__a[G__29404__i] = arguments[G__29404__i + 6]; ++G__29404__i;}
G__29403 = new cljs.core.IndexedSeq(G__29404__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__29403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__29405__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__29405 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29406__i = 0, G__29406__a = new Array(arguments.length -  2);
while (G__29406__i < G__29406__a.length) {G__29406__a[G__29406__i] = arguments[G__29406__i + 2]; ++G__29406__i;}
  more = new cljs.core.IndexedSeq(G__29406__a,0);
} 
return G__29405__delegate.call(this,x,y,more);};
G__29405.cljs$lang$maxFixedArity = 2;
G__29405.cljs$lang$applyTo = (function (arglist__29407){
var x = cljs.core.first(arglist__29407);
arglist__29407 = cljs.core.next(arglist__29407);
var y = cljs.core.first(arglist__29407);
var more = cljs.core.rest(arglist__29407);
return G__29405__delegate(x,y,more);
});
G__29405.cljs$core$IFn$_invoke$arity$variadic = G__29405__delegate;
return G__29405;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__29408 = null;
if (arguments.length > 2) {
var G__29409__i = 0, G__29409__a = new Array(arguments.length -  2);
while (G__29409__i < G__29409__a.length) {G__29409__a[G__29409__i] = arguments[G__29409__i + 2]; ++G__29409__i;}
G__29408 = new cljs.core.IndexedSeq(G__29409__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t29413 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t29413 = (function (nil_iter,meta29414){
this.nil_iter = nil_iter;
this.meta29414 = meta29414;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t29413.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t29413.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t29413.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t29413.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_29415){
var self__ = this;
var _29415__$1 = this;
return self__.meta29414;
});

cljs.core.t29413.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_29415,meta29414__$1){
var self__ = this;
var _29415__$1 = this;
return (new cljs.core.t29413(self__.nil_iter,meta29414__$1));
});

cljs.core.t29413.cljs$lang$type = true;

cljs.core.t29413.cljs$lang$ctorStr = "cljs.core/t29413";

cljs.core.t29413.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/t29413");
});

cljs.core.__GT_t29413 = (function __GT_t29413(nil_iter__$1,meta29414){
return (new cljs.core.t29413(nil_iter__$1,meta29414));
});

}

return (new cljs.core.t29413(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/jaen/projects/cah-clone/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__25727__auto__ = !((lt.stepper == null));
if(and__25727__auto__){
return self__.iter.hasNext();
} else {
return and__25727__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__29416 = lt;
var G__29417 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__29416,G__29417) : self__.xform.call(null,G__29416,G__29417));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__29418 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__29418) : self__.xform.call(null,G__29418));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__29420 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29420) : xform.call(null,G__29420));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__29422 = cljs.core.next(iters__$1);
iters__$1 = G__29422;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__26626__auto___29423 = self__.iters.length;
var i_29424 = (0);
while(true){
if((i_29424 < n__26626__auto___29423)){
(self__.nexts[i_29424] = (self__.iters[i_29424]).next());

var G__29425 = (i_29424 + (1));
i_29424 = G__29425;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__25727__auto__ = !((lt.stepper == null));
if(and__25727__auto__){
return this$.hasNext();
} else {
return and__25727__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__29421 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__29421) : self__.xform.call(null,G__29421));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__29430 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__29430) : xform.call(null,G__29430));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__29431_29435 = cljs.core.seq(colls);
var chunk__29432_29436 = null;
var count__29433_29437 = (0);
var i__29434_29438 = (0);
while(true){
if((i__29434_29438 < count__29433_29437)){
var coll_29439 = chunk__29432_29436.cljs$core$IIndexed$_nth$arity$2(null,i__29434_29438);
iters.push(cljs.core.iter(coll_29439));

var G__29440 = seq__29431_29435;
var G__29441 = chunk__29432_29436;
var G__29442 = count__29433_29437;
var G__29443 = (i__29434_29438 + (1));
seq__29431_29435 = G__29440;
chunk__29432_29436 = G__29441;
count__29433_29437 = G__29442;
i__29434_29438 = G__29443;
continue;
} else {
var temp__4406__auto___29444 = cljs.core.seq(seq__29431_29435);
if(temp__4406__auto___29444){
var seq__29431_29445__$1 = temp__4406__auto___29444;
if(cljs.core.chunked_seq_QMARK_(seq__29431_29445__$1)){
var c__26526__auto___29446 = cljs.core.chunk_first(seq__29431_29445__$1);
var G__29447 = cljs.core.chunk_rest(seq__29431_29445__$1);
var G__29448 = c__26526__auto___29446;
var G__29449 = cljs.core.count(c__26526__auto___29446);
var G__29450 = (0);
seq__29431_29435 = G__29447;
chunk__29432_29436 = G__29448;
count__29433_29437 = G__29449;
i__29434_29438 = G__29450;
continue;
} else {
var coll_29451 = cljs.core.first(seq__29431_29445__$1);
iters.push(cljs.core.iter(coll_29451));

var G__29452 = cljs.core.next(seq__29431_29445__$1);
var G__29453 = null;
var G__29454 = (0);
var G__29455 = (0);
seq__29431_29435 = G__29452;
chunk__29432_29436 = G__29453;
count__29433_29437 = G__29454;
i__29434_29438 = G__29455;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__25739__auto__ = cljs.core.seq(coll);
if(or__25739__auto__){
return or__25739__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__29456__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__29456 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__29457__i = 0, G__29457__a = new Array(arguments.length -  2);
while (G__29457__i < G__29457__a.length) {G__29457__a[G__29457__i] = arguments[G__29457__i + 2]; ++G__29457__i;}
  colls = new cljs.core.IndexedSeq(G__29457__a,0);
} 
return G__29456__delegate.call(this,xform,coll,colls);};
G__29456.cljs$lang$maxFixedArity = 2;
G__29456.cljs$lang$applyTo = (function (arglist__29458){
var xform = cljs.core.first(arglist__29458);
arglist__29458 = cljs.core.next(arglist__29458);
var coll = cljs.core.first(arglist__29458);
var colls = cljs.core.rest(arglist__29458);
return G__29456__delegate(xform,coll,colls);
});
G__29456.cljs$core$IFn$_invoke$arity$variadic = G__29456__delegate;
return G__29456;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__29459 = null;
if (arguments.length > 2) {
var G__29460__i = 0, G__29460__a = new Array(arguments.length -  2);
while (G__29460__i < G__29460__a.length) {G__29460__a[G__29460__i] = arguments[G__29460__i + 2]; ++G__29460__i;}
G__29459 = new cljs.core.IndexedSeq(G__29460__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__29459);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__29462 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29462) : pred.call(null,G__29462));
})())){
var G__29463 = pred;
var G__29464 = cljs.core.next(coll);
pred = G__29463;
coll = G__29464;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__25739__auto__ = (function (){var G__29468 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29468) : pred.call(null,G__29468));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var G__29469 = pred;
var G__29470 = cljs.core.next(coll);
pred = G__29469;
coll = G__29470;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__29477 = null;
var G__29477__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__29477__1 = (function (x){
return cljs.core.not((function (){var G__29474 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29474) : f.call(null,G__29474));
})());
});
var G__29477__2 = (function (x,y){
return cljs.core.not((function (){var G__29475 = x;
var G__29476 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29475,G__29476) : f.call(null,G__29475,G__29476));
})());
});
var G__29477__3 = (function() { 
var G__29478__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__29478 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__29479__i = 0, G__29479__a = new Array(arguments.length -  2);
while (G__29479__i < G__29479__a.length) {G__29479__a[G__29479__i] = arguments[G__29479__i + 2]; ++G__29479__i;}
  zs = new cljs.core.IndexedSeq(G__29479__a,0);
} 
return G__29478__delegate.call(this,x,y,zs);};
G__29478.cljs$lang$maxFixedArity = 2;
G__29478.cljs$lang$applyTo = (function (arglist__29480){
var x = cljs.core.first(arglist__29480);
arglist__29480 = cljs.core.next(arglist__29480);
var y = cljs.core.first(arglist__29480);
var zs = cljs.core.rest(arglist__29480);
return G__29478__delegate(x,y,zs);
});
G__29478.cljs$core$IFn$_invoke$arity$variadic = G__29478__delegate;
return G__29478;
})()
;
G__29477 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__29477__0.call(this);
case 1:
return G__29477__1.call(this,x);
case 2:
return G__29477__2.call(this,x,y);
default:
var G__29481 = null;
if (arguments.length > 2) {
var G__29482__i = 0, G__29482__a = new Array(arguments.length -  2);
while (G__29482__i < G__29482__a.length) {G__29482__a[G__29482__i] = arguments[G__29482__i + 2]; ++G__29482__i;}
G__29481 = new cljs.core.IndexedSeq(G__29482__a,0);
}
return G__29477__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29477.cljs$lang$maxFixedArity = 2;
G__29477.cljs$lang$applyTo = G__29477__3.cljs$lang$applyTo;
G__29477.cljs$core$IFn$_invoke$arity$0 = G__29477__0;
G__29477.cljs$core$IFn$_invoke$arity$1 = G__29477__1;
G__29477.cljs$core$IFn$_invoke$arity$2 = G__29477__2;
G__29477.cljs$core$IFn$_invoke$arity$variadic = G__29477__3.cljs$core$IFn$_invoke$arity$variadic;
return G__29477;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__29483__delegate = function (args){
return x;
};
var G__29483 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29484__i = 0, G__29484__a = new Array(arguments.length -  0);
while (G__29484__i < G__29484__a.length) {G__29484__a[G__29484__i] = arguments[G__29484__i + 0]; ++G__29484__i;}
  args = new cljs.core.IndexedSeq(G__29484__a,0);
} 
return G__29483__delegate.call(this,args);};
G__29483.cljs$lang$maxFixedArity = 0;
G__29483.cljs$lang$applyTo = (function (arglist__29485){
var args = cljs.core.seq(arglist__29485);
return G__29483__delegate(args);
});
G__29483.cljs$core$IFn$_invoke$arity$variadic = G__29483__delegate;
return G__29483;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__29540 = null;
var G__29540__0 = (function (){
var G__29513 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29513) : f.call(null,G__29513));
});
var G__29540__1 = (function (x){
var G__29514 = (function (){var G__29515 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29515) : g.call(null,G__29515));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29514) : f.call(null,G__29514));
});
var G__29540__2 = (function (x,y){
var G__29516 = (function (){var G__29517 = x;
var G__29518 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__29517,G__29518) : g.call(null,G__29517,G__29518));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29516) : f.call(null,G__29516));
});
var G__29540__3 = (function (x,y,z){
var G__29519 = (function (){var G__29520 = x;
var G__29521 = y;
var G__29522 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__29520,G__29521,G__29522) : g.call(null,G__29520,G__29521,G__29522));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29519) : f.call(null,G__29519));
});
var G__29540__4 = (function() { 
var G__29541__delegate = function (x,y,z,args){
var G__29523 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29523) : f.call(null,G__29523));
};
var G__29541 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29542__i = 0, G__29542__a = new Array(arguments.length -  3);
while (G__29542__i < G__29542__a.length) {G__29542__a[G__29542__i] = arguments[G__29542__i + 3]; ++G__29542__i;}
  args = new cljs.core.IndexedSeq(G__29542__a,0);
} 
return G__29541__delegate.call(this,x,y,z,args);};
G__29541.cljs$lang$maxFixedArity = 3;
G__29541.cljs$lang$applyTo = (function (arglist__29543){
var x = cljs.core.first(arglist__29543);
arglist__29543 = cljs.core.next(arglist__29543);
var y = cljs.core.first(arglist__29543);
arglist__29543 = cljs.core.next(arglist__29543);
var z = cljs.core.first(arglist__29543);
var args = cljs.core.rest(arglist__29543);
return G__29541__delegate(x,y,z,args);
});
G__29541.cljs$core$IFn$_invoke$arity$variadic = G__29541__delegate;
return G__29541;
})()
;
G__29540 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29540__0.call(this);
case 1:
return G__29540__1.call(this,x);
case 2:
return G__29540__2.call(this,x,y);
case 3:
return G__29540__3.call(this,x,y,z);
default:
var G__29544 = null;
if (arguments.length > 3) {
var G__29545__i = 0, G__29545__a = new Array(arguments.length -  3);
while (G__29545__i < G__29545__a.length) {G__29545__a[G__29545__i] = arguments[G__29545__i + 3]; ++G__29545__i;}
G__29544 = new cljs.core.IndexedSeq(G__29545__a,0);
}
return G__29540__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29540.cljs$lang$maxFixedArity = 3;
G__29540.cljs$lang$applyTo = G__29540__4.cljs$lang$applyTo;
G__29540.cljs$core$IFn$_invoke$arity$0 = G__29540__0;
G__29540.cljs$core$IFn$_invoke$arity$1 = G__29540__1;
G__29540.cljs$core$IFn$_invoke$arity$2 = G__29540__2;
G__29540.cljs$core$IFn$_invoke$arity$3 = G__29540__3;
G__29540.cljs$core$IFn$_invoke$arity$variadic = G__29540__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29540;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__29546 = null;
var G__29546__0 = (function (){
var G__29524 = (function (){var G__29525 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29525) : g.call(null,G__29525));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29524) : f.call(null,G__29524));
});
var G__29546__1 = (function (x){
var G__29526 = (function (){var G__29527 = (function (){var G__29528 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__29528) : h.call(null,G__29528));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29527) : g.call(null,G__29527));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29526) : f.call(null,G__29526));
});
var G__29546__2 = (function (x,y){
var G__29529 = (function (){var G__29530 = (function (){var G__29531 = x;
var G__29532 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__29531,G__29532) : h.call(null,G__29531,G__29532));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29530) : g.call(null,G__29530));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29529) : f.call(null,G__29529));
});
var G__29546__3 = (function (x,y,z){
var G__29533 = (function (){var G__29534 = (function (){var G__29535 = x;
var G__29536 = y;
var G__29537 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__29535,G__29536,G__29537) : h.call(null,G__29535,G__29536,G__29537));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29534) : g.call(null,G__29534));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29533) : f.call(null,G__29533));
});
var G__29546__4 = (function() { 
var G__29547__delegate = function (x,y,z,args){
var G__29538 = (function (){var G__29539 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29539) : g.call(null,G__29539));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29538) : f.call(null,G__29538));
};
var G__29547 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29548__i = 0, G__29548__a = new Array(arguments.length -  3);
while (G__29548__i < G__29548__a.length) {G__29548__a[G__29548__i] = arguments[G__29548__i + 3]; ++G__29548__i;}
  args = new cljs.core.IndexedSeq(G__29548__a,0);
} 
return G__29547__delegate.call(this,x,y,z,args);};
G__29547.cljs$lang$maxFixedArity = 3;
G__29547.cljs$lang$applyTo = (function (arglist__29549){
var x = cljs.core.first(arglist__29549);
arglist__29549 = cljs.core.next(arglist__29549);
var y = cljs.core.first(arglist__29549);
arglist__29549 = cljs.core.next(arglist__29549);
var z = cljs.core.first(arglist__29549);
var args = cljs.core.rest(arglist__29549);
return G__29547__delegate(x,y,z,args);
});
G__29547.cljs$core$IFn$_invoke$arity$variadic = G__29547__delegate;
return G__29547;
})()
;
G__29546 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29546__0.call(this);
case 1:
return G__29546__1.call(this,x);
case 2:
return G__29546__2.call(this,x,y);
case 3:
return G__29546__3.call(this,x,y,z);
default:
var G__29550 = null;
if (arguments.length > 3) {
var G__29551__i = 0, G__29551__a = new Array(arguments.length -  3);
while (G__29551__i < G__29551__a.length) {G__29551__a[G__29551__i] = arguments[G__29551__i + 3]; ++G__29551__i;}
G__29550 = new cljs.core.IndexedSeq(G__29551__a,0);
}
return G__29546__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29546.cljs$lang$maxFixedArity = 3;
G__29546.cljs$lang$applyTo = G__29546__4.cljs$lang$applyTo;
G__29546.cljs$core$IFn$_invoke$arity$0 = G__29546__0;
G__29546.cljs$core$IFn$_invoke$arity$1 = G__29546__1;
G__29546.cljs$core$IFn$_invoke$arity$2 = G__29546__2;
G__29546.cljs$core$IFn$_invoke$arity$3 = G__29546__3;
G__29546.cljs$core$IFn$_invoke$arity$variadic = G__29546__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29546;
})()
});
var comp__4 = (function() { 
var G__29552__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__29553__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__29554 = cljs.core.first(fs__$2).call(null,ret);
var G__29555 = cljs.core.next(fs__$2);
ret = G__29554;
fs__$2 = G__29555;
continue;
} else {
return ret;
}
break;
}
};
var G__29553 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29556__i = 0, G__29556__a = new Array(arguments.length -  0);
while (G__29556__i < G__29556__a.length) {G__29556__a[G__29556__i] = arguments[G__29556__i + 0]; ++G__29556__i;}
  args = new cljs.core.IndexedSeq(G__29556__a,0);
} 
return G__29553__delegate.call(this,args);};
G__29553.cljs$lang$maxFixedArity = 0;
G__29553.cljs$lang$applyTo = (function (arglist__29557){
var args = cljs.core.seq(arglist__29557);
return G__29553__delegate(args);
});
G__29553.cljs$core$IFn$_invoke$arity$variadic = G__29553__delegate;
return G__29553;
})()
;
;})(fs__$1))
};
var G__29552 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__29558__i = 0, G__29558__a = new Array(arguments.length -  3);
while (G__29558__i < G__29558__a.length) {G__29558__a[G__29558__i] = arguments[G__29558__i + 3]; ++G__29558__i;}
  fs = new cljs.core.IndexedSeq(G__29558__a,0);
} 
return G__29552__delegate.call(this,f1,f2,f3,fs);};
G__29552.cljs$lang$maxFixedArity = 3;
G__29552.cljs$lang$applyTo = (function (arglist__29559){
var f1 = cljs.core.first(arglist__29559);
arglist__29559 = cljs.core.next(arglist__29559);
var f2 = cljs.core.first(arglist__29559);
arglist__29559 = cljs.core.next(arglist__29559);
var f3 = cljs.core.first(arglist__29559);
var fs = cljs.core.rest(arglist__29559);
return G__29552__delegate(f1,f2,f3,fs);
});
G__29552.cljs$core$IFn$_invoke$arity$variadic = G__29552__delegate;
return G__29552;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__29560 = null;
if (arguments.length > 3) {
var G__29561__i = 0, G__29561__a = new Array(arguments.length -  3);
while (G__29561__i < G__29561__a.length) {G__29561__a[G__29561__i] = arguments[G__29561__i + 3]; ++G__29561__i;}
G__29560 = new cljs.core.IndexedSeq(G__29561__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__29560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__29646 = null;
var G__29646__0 = (function (){
var G__29604 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29604) : f.call(null,G__29604));
});
var G__29646__1 = (function (x){
var G__29605 = arg1;
var G__29606 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29605,G__29606) : f.call(null,G__29605,G__29606));
});
var G__29646__2 = (function (x,y){
var G__29607 = arg1;
var G__29608 = x;
var G__29609 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29607,G__29608,G__29609) : f.call(null,G__29607,G__29608,G__29609));
});
var G__29646__3 = (function (x,y,z){
var G__29610 = arg1;
var G__29611 = x;
var G__29612 = y;
var G__29613 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29610,G__29611,G__29612,G__29613) : f.call(null,G__29610,G__29611,G__29612,G__29613));
});
var G__29646__4 = (function() { 
var G__29647__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__29647 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29648__i = 0, G__29648__a = new Array(arguments.length -  3);
while (G__29648__i < G__29648__a.length) {G__29648__a[G__29648__i] = arguments[G__29648__i + 3]; ++G__29648__i;}
  args = new cljs.core.IndexedSeq(G__29648__a,0);
} 
return G__29647__delegate.call(this,x,y,z,args);};
G__29647.cljs$lang$maxFixedArity = 3;
G__29647.cljs$lang$applyTo = (function (arglist__29649){
var x = cljs.core.first(arglist__29649);
arglist__29649 = cljs.core.next(arglist__29649);
var y = cljs.core.first(arglist__29649);
arglist__29649 = cljs.core.next(arglist__29649);
var z = cljs.core.first(arglist__29649);
var args = cljs.core.rest(arglist__29649);
return G__29647__delegate(x,y,z,args);
});
G__29647.cljs$core$IFn$_invoke$arity$variadic = G__29647__delegate;
return G__29647;
})()
;
G__29646 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29646__0.call(this);
case 1:
return G__29646__1.call(this,x);
case 2:
return G__29646__2.call(this,x,y);
case 3:
return G__29646__3.call(this,x,y,z);
default:
var G__29650 = null;
if (arguments.length > 3) {
var G__29651__i = 0, G__29651__a = new Array(arguments.length -  3);
while (G__29651__i < G__29651__a.length) {G__29651__a[G__29651__i] = arguments[G__29651__i + 3]; ++G__29651__i;}
G__29650 = new cljs.core.IndexedSeq(G__29651__a,0);
}
return G__29646__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29646.cljs$lang$maxFixedArity = 3;
G__29646.cljs$lang$applyTo = G__29646__4.cljs$lang$applyTo;
G__29646.cljs$core$IFn$_invoke$arity$0 = G__29646__0;
G__29646.cljs$core$IFn$_invoke$arity$1 = G__29646__1;
G__29646.cljs$core$IFn$_invoke$arity$2 = G__29646__2;
G__29646.cljs$core$IFn$_invoke$arity$3 = G__29646__3;
G__29646.cljs$core$IFn$_invoke$arity$variadic = G__29646__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29646;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__29652 = null;
var G__29652__0 = (function (){
var G__29614 = arg1;
var G__29615 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29614,G__29615) : f.call(null,G__29614,G__29615));
});
var G__29652__1 = (function (x){
var G__29616 = arg1;
var G__29617 = arg2;
var G__29618 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29616,G__29617,G__29618) : f.call(null,G__29616,G__29617,G__29618));
});
var G__29652__2 = (function (x,y){
var G__29619 = arg1;
var G__29620 = arg2;
var G__29621 = x;
var G__29622 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29619,G__29620,G__29621,G__29622) : f.call(null,G__29619,G__29620,G__29621,G__29622));
});
var G__29652__3 = (function (x,y,z){
var G__29623 = arg1;
var G__29624 = arg2;
var G__29625 = x;
var G__29626 = y;
var G__29627 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29623,G__29624,G__29625,G__29626,G__29627) : f.call(null,G__29623,G__29624,G__29625,G__29626,G__29627));
});
var G__29652__4 = (function() { 
var G__29653__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__29653 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29654__i = 0, G__29654__a = new Array(arguments.length -  3);
while (G__29654__i < G__29654__a.length) {G__29654__a[G__29654__i] = arguments[G__29654__i + 3]; ++G__29654__i;}
  args = new cljs.core.IndexedSeq(G__29654__a,0);
} 
return G__29653__delegate.call(this,x,y,z,args);};
G__29653.cljs$lang$maxFixedArity = 3;
G__29653.cljs$lang$applyTo = (function (arglist__29655){
var x = cljs.core.first(arglist__29655);
arglist__29655 = cljs.core.next(arglist__29655);
var y = cljs.core.first(arglist__29655);
arglist__29655 = cljs.core.next(arglist__29655);
var z = cljs.core.first(arglist__29655);
var args = cljs.core.rest(arglist__29655);
return G__29653__delegate(x,y,z,args);
});
G__29653.cljs$core$IFn$_invoke$arity$variadic = G__29653__delegate;
return G__29653;
})()
;
G__29652 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29652__0.call(this);
case 1:
return G__29652__1.call(this,x);
case 2:
return G__29652__2.call(this,x,y);
case 3:
return G__29652__3.call(this,x,y,z);
default:
var G__29656 = null;
if (arguments.length > 3) {
var G__29657__i = 0, G__29657__a = new Array(arguments.length -  3);
while (G__29657__i < G__29657__a.length) {G__29657__a[G__29657__i] = arguments[G__29657__i + 3]; ++G__29657__i;}
G__29656 = new cljs.core.IndexedSeq(G__29657__a,0);
}
return G__29652__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29656);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29652.cljs$lang$maxFixedArity = 3;
G__29652.cljs$lang$applyTo = G__29652__4.cljs$lang$applyTo;
G__29652.cljs$core$IFn$_invoke$arity$0 = G__29652__0;
G__29652.cljs$core$IFn$_invoke$arity$1 = G__29652__1;
G__29652.cljs$core$IFn$_invoke$arity$2 = G__29652__2;
G__29652.cljs$core$IFn$_invoke$arity$3 = G__29652__3;
G__29652.cljs$core$IFn$_invoke$arity$variadic = G__29652__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29652;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__29658 = null;
var G__29658__0 = (function (){
var G__29628 = arg1;
var G__29629 = arg2;
var G__29630 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29628,G__29629,G__29630) : f.call(null,G__29628,G__29629,G__29630));
});
var G__29658__1 = (function (x){
var G__29631 = arg1;
var G__29632 = arg2;
var G__29633 = arg3;
var G__29634 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29631,G__29632,G__29633,G__29634) : f.call(null,G__29631,G__29632,G__29633,G__29634));
});
var G__29658__2 = (function (x,y){
var G__29635 = arg1;
var G__29636 = arg2;
var G__29637 = arg3;
var G__29638 = x;
var G__29639 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29635,G__29636,G__29637,G__29638,G__29639) : f.call(null,G__29635,G__29636,G__29637,G__29638,G__29639));
});
var G__29658__3 = (function (x,y,z){
var G__29640 = arg1;
var G__29641 = arg2;
var G__29642 = arg3;
var G__29643 = x;
var G__29644 = y;
var G__29645 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__29640,G__29641,G__29642,G__29643,G__29644,G__29645) : f.call(null,G__29640,G__29641,G__29642,G__29643,G__29644,G__29645));
});
var G__29658__4 = (function() { 
var G__29659__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__29659 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__29660__i = 0, G__29660__a = new Array(arguments.length -  3);
while (G__29660__i < G__29660__a.length) {G__29660__a[G__29660__i] = arguments[G__29660__i + 3]; ++G__29660__i;}
  args = new cljs.core.IndexedSeq(G__29660__a,0);
} 
return G__29659__delegate.call(this,x,y,z,args);};
G__29659.cljs$lang$maxFixedArity = 3;
G__29659.cljs$lang$applyTo = (function (arglist__29661){
var x = cljs.core.first(arglist__29661);
arglist__29661 = cljs.core.next(arglist__29661);
var y = cljs.core.first(arglist__29661);
arglist__29661 = cljs.core.next(arglist__29661);
var z = cljs.core.first(arglist__29661);
var args = cljs.core.rest(arglist__29661);
return G__29659__delegate(x,y,z,args);
});
G__29659.cljs$core$IFn$_invoke$arity$variadic = G__29659__delegate;
return G__29659;
})()
;
G__29658 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__29658__0.call(this);
case 1:
return G__29658__1.call(this,x);
case 2:
return G__29658__2.call(this,x,y);
case 3:
return G__29658__3.call(this,x,y,z);
default:
var G__29662 = null;
if (arguments.length > 3) {
var G__29663__i = 0, G__29663__a = new Array(arguments.length -  3);
while (G__29663__i < G__29663__a.length) {G__29663__a[G__29663__i] = arguments[G__29663__i + 3]; ++G__29663__i;}
G__29662 = new cljs.core.IndexedSeq(G__29663__a,0);
}
return G__29658__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__29662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29658.cljs$lang$maxFixedArity = 3;
G__29658.cljs$lang$applyTo = G__29658__4.cljs$lang$applyTo;
G__29658.cljs$core$IFn$_invoke$arity$0 = G__29658__0;
G__29658.cljs$core$IFn$_invoke$arity$1 = G__29658__1;
G__29658.cljs$core$IFn$_invoke$arity$2 = G__29658__2;
G__29658.cljs$core$IFn$_invoke$arity$3 = G__29658__3;
G__29658.cljs$core$IFn$_invoke$arity$variadic = G__29658__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29658;
})()
});
var partial__5 = (function() { 
var G__29664__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__29665__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__29665 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29666__i = 0, G__29666__a = new Array(arguments.length -  0);
while (G__29666__i < G__29666__a.length) {G__29666__a[G__29666__i] = arguments[G__29666__i + 0]; ++G__29666__i;}
  args = new cljs.core.IndexedSeq(G__29666__a,0);
} 
return G__29665__delegate.call(this,args);};
G__29665.cljs$lang$maxFixedArity = 0;
G__29665.cljs$lang$applyTo = (function (arglist__29667){
var args = cljs.core.seq(arglist__29667);
return G__29665__delegate(args);
});
G__29665.cljs$core$IFn$_invoke$arity$variadic = G__29665__delegate;
return G__29665;
})()
;
};
var G__29664 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__29668__i = 0, G__29668__a = new Array(arguments.length -  4);
while (G__29668__i < G__29668__a.length) {G__29668__a[G__29668__i] = arguments[G__29668__i + 4]; ++G__29668__i;}
  more = new cljs.core.IndexedSeq(G__29668__a,0);
} 
return G__29664__delegate.call(this,f,arg1,arg2,arg3,more);};
G__29664.cljs$lang$maxFixedArity = 4;
G__29664.cljs$lang$applyTo = (function (arglist__29669){
var f = cljs.core.first(arglist__29669);
arglist__29669 = cljs.core.next(arglist__29669);
var arg1 = cljs.core.first(arglist__29669);
arglist__29669 = cljs.core.next(arglist__29669);
var arg2 = cljs.core.first(arglist__29669);
arglist__29669 = cljs.core.next(arglist__29669);
var arg3 = cljs.core.first(arglist__29669);
var more = cljs.core.rest(arglist__29669);
return G__29664__delegate(f,arg1,arg2,arg3,more);
});
G__29664.cljs$core$IFn$_invoke$arity$variadic = G__29664__delegate;
return G__29664;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__29670 = null;
if (arguments.length > 4) {
var G__29671__i = 0, G__29671__a = new Array(arguments.length -  4);
while (G__29671__i < G__29671__a.length) {G__29671__a[G__29671__i] = arguments[G__29671__i + 4]; ++G__29671__i;}
G__29670 = new cljs.core.IndexedSeq(G__29671__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__29670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__29704 = null;
var G__29704__1 = (function (a){
var G__29688 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29688) : f.call(null,G__29688));
});
var G__29704__2 = (function (a,b){
var G__29689 = (((a == null))?x:a);
var G__29690 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29689,G__29690) : f.call(null,G__29689,G__29690));
});
var G__29704__3 = (function (a,b,c){
var G__29691 = (((a == null))?x:a);
var G__29692 = b;
var G__29693 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29691,G__29692,G__29693) : f.call(null,G__29691,G__29692,G__29693));
});
var G__29704__4 = (function() { 
var G__29705__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__29705 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29706__i = 0, G__29706__a = new Array(arguments.length -  3);
while (G__29706__i < G__29706__a.length) {G__29706__a[G__29706__i] = arguments[G__29706__i + 3]; ++G__29706__i;}
  ds = new cljs.core.IndexedSeq(G__29706__a,0);
} 
return G__29705__delegate.call(this,a,b,c,ds);};
G__29705.cljs$lang$maxFixedArity = 3;
G__29705.cljs$lang$applyTo = (function (arglist__29707){
var a = cljs.core.first(arglist__29707);
arglist__29707 = cljs.core.next(arglist__29707);
var b = cljs.core.first(arglist__29707);
arglist__29707 = cljs.core.next(arglist__29707);
var c = cljs.core.first(arglist__29707);
var ds = cljs.core.rest(arglist__29707);
return G__29705__delegate(a,b,c,ds);
});
G__29705.cljs$core$IFn$_invoke$arity$variadic = G__29705__delegate;
return G__29705;
})()
;
G__29704 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__29704__1.call(this,a);
case 2:
return G__29704__2.call(this,a,b);
case 3:
return G__29704__3.call(this,a,b,c);
default:
var G__29708 = null;
if (arguments.length > 3) {
var G__29709__i = 0, G__29709__a = new Array(arguments.length -  3);
while (G__29709__i < G__29709__a.length) {G__29709__a[G__29709__i] = arguments[G__29709__i + 3]; ++G__29709__i;}
G__29708 = new cljs.core.IndexedSeq(G__29709__a,0);
}
return G__29704__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29704.cljs$lang$maxFixedArity = 3;
G__29704.cljs$lang$applyTo = G__29704__4.cljs$lang$applyTo;
G__29704.cljs$core$IFn$_invoke$arity$1 = G__29704__1;
G__29704.cljs$core$IFn$_invoke$arity$2 = G__29704__2;
G__29704.cljs$core$IFn$_invoke$arity$3 = G__29704__3;
G__29704.cljs$core$IFn$_invoke$arity$variadic = G__29704__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29704;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__29710 = null;
var G__29710__2 = (function (a,b){
var G__29694 = (((a == null))?x:a);
var G__29695 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29694,G__29695) : f.call(null,G__29694,G__29695));
});
var G__29710__3 = (function (a,b,c){
var G__29696 = (((a == null))?x:a);
var G__29697 = (((b == null))?y:b);
var G__29698 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29696,G__29697,G__29698) : f.call(null,G__29696,G__29697,G__29698));
});
var G__29710__4 = (function() { 
var G__29711__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__29711 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29712__i = 0, G__29712__a = new Array(arguments.length -  3);
while (G__29712__i < G__29712__a.length) {G__29712__a[G__29712__i] = arguments[G__29712__i + 3]; ++G__29712__i;}
  ds = new cljs.core.IndexedSeq(G__29712__a,0);
} 
return G__29711__delegate.call(this,a,b,c,ds);};
G__29711.cljs$lang$maxFixedArity = 3;
G__29711.cljs$lang$applyTo = (function (arglist__29713){
var a = cljs.core.first(arglist__29713);
arglist__29713 = cljs.core.next(arglist__29713);
var b = cljs.core.first(arglist__29713);
arglist__29713 = cljs.core.next(arglist__29713);
var c = cljs.core.first(arglist__29713);
var ds = cljs.core.rest(arglist__29713);
return G__29711__delegate(a,b,c,ds);
});
G__29711.cljs$core$IFn$_invoke$arity$variadic = G__29711__delegate;
return G__29711;
})()
;
G__29710 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__29710__2.call(this,a,b);
case 3:
return G__29710__3.call(this,a,b,c);
default:
var G__29714 = null;
if (arguments.length > 3) {
var G__29715__i = 0, G__29715__a = new Array(arguments.length -  3);
while (G__29715__i < G__29715__a.length) {G__29715__a[G__29715__i] = arguments[G__29715__i + 3]; ++G__29715__i;}
G__29714 = new cljs.core.IndexedSeq(G__29715__a,0);
}
return G__29710__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29714);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29710.cljs$lang$maxFixedArity = 3;
G__29710.cljs$lang$applyTo = G__29710__4.cljs$lang$applyTo;
G__29710.cljs$core$IFn$_invoke$arity$2 = G__29710__2;
G__29710.cljs$core$IFn$_invoke$arity$3 = G__29710__3;
G__29710.cljs$core$IFn$_invoke$arity$variadic = G__29710__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29710;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__29716 = null;
var G__29716__2 = (function (a,b){
var G__29699 = (((a == null))?x:a);
var G__29700 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29699,G__29700) : f.call(null,G__29699,G__29700));
});
var G__29716__3 = (function (a,b,c){
var G__29701 = (((a == null))?x:a);
var G__29702 = (((b == null))?y:b);
var G__29703 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29701,G__29702,G__29703) : f.call(null,G__29701,G__29702,G__29703));
});
var G__29716__4 = (function() { 
var G__29717__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__29717 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__29718__i = 0, G__29718__a = new Array(arguments.length -  3);
while (G__29718__i < G__29718__a.length) {G__29718__a[G__29718__i] = arguments[G__29718__i + 3]; ++G__29718__i;}
  ds = new cljs.core.IndexedSeq(G__29718__a,0);
} 
return G__29717__delegate.call(this,a,b,c,ds);};
G__29717.cljs$lang$maxFixedArity = 3;
G__29717.cljs$lang$applyTo = (function (arglist__29719){
var a = cljs.core.first(arglist__29719);
arglist__29719 = cljs.core.next(arglist__29719);
var b = cljs.core.first(arglist__29719);
arglist__29719 = cljs.core.next(arglist__29719);
var c = cljs.core.first(arglist__29719);
var ds = cljs.core.rest(arglist__29719);
return G__29717__delegate(a,b,c,ds);
});
G__29717.cljs$core$IFn$_invoke$arity$variadic = G__29717__delegate;
return G__29717;
})()
;
G__29716 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__29716__2.call(this,a,b);
case 3:
return G__29716__3.call(this,a,b,c);
default:
var G__29720 = null;
if (arguments.length > 3) {
var G__29721__i = 0, G__29721__a = new Array(arguments.length -  3);
while (G__29721__i < G__29721__a.length) {G__29721__a[G__29721__i] = arguments[G__29721__i + 3]; ++G__29721__i;}
G__29720 = new cljs.core.IndexedSeq(G__29721__a,0);
}
return G__29716__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__29720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29716.cljs$lang$maxFixedArity = 3;
G__29716.cljs$lang$applyTo = G__29716__4.cljs$lang$applyTo;
G__29716.cljs$core$IFn$_invoke$arity$2 = G__29716__2;
G__29716.cljs$core$IFn$_invoke$arity$3 = G__29716__3;
G__29716.cljs$core$IFn$_invoke$arity$variadic = G__29716__4.cljs$core$IFn$_invoke$arity$variadic;
return G__29716;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__26626__auto___29770 = size;
var i_29771 = (0);
while(true){
if((i_29771 < n__26626__auto___29770)){
cljs.core.chunk_append(b,(function (){var G__29766 = (idx + i_29771);
var G__29767 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29771);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29766,G__29767) : f.call(null,G__29766,G__29767));
})());

var G__29772 = (i_29771 + (1));
i_29771 = G__29772;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__29768 = idx;
var G__29769 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29768,G__29769) : f.call(null,G__29768,G__29769));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__29791 = null;
var G__29791__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29791__1 = (function (result){
var G__29785 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29785) : rf.call(null,G__29785));
});
var G__29791__2 = (function (result,input){
var v = (function (){var G__29786 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29786) : f.call(null,G__29786));
})();
if((v == null)){
return result;
} else {
var G__29787 = result;
var G__29788 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29787,G__29788) : rf.call(null,G__29787,G__29788));
}
});
G__29791 = function(result,input){
switch(arguments.length){
case 0:
return G__29791__0.call(this);
case 1:
return G__29791__1.call(this,result);
case 2:
return G__29791__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29791.cljs$core$IFn$_invoke$arity$0 = G__29791__0;
G__29791.cljs$core$IFn$_invoke$arity$1 = G__29791__1;
G__29791.cljs$core$IFn$_invoke$arity$2 = G__29791__2;
return G__29791;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__26626__auto___29792 = size;
var i_29793 = (0);
while(true){
if((i_29793 < n__26626__auto___29792)){
var x_29794 = (function (){var G__29789 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29793);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29789) : f.call(null,G__29789));
})();
if((x_29794 == null)){
} else {
cljs.core.chunk_append(b,x_29794);
}

var G__29795 = (i_29793 + (1));
i_29793 = G__29795;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__29790 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29790) : f.call(null,G__29790));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29796 = this$__$1;
return goog.getUid(G__29796);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__29797 = cljs.core.seq(self__.watches);
var chunk__29798 = null;
var count__29799 = (0);
var i__29800 = (0);
while(true){
if((i__29800 < count__29799)){
var vec__29801 = chunk__29798.cljs$core$IIndexed$_nth$arity$2(null,i__29800);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29801,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29801,(1),null);
var G__29802_29811 = key;
var G__29803_29812 = this$__$1;
var G__29804_29813 = oldval;
var G__29805_29814 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29802_29811,G__29803_29812,G__29804_29813,G__29805_29814) : f.call(null,G__29802_29811,G__29803_29812,G__29804_29813,G__29805_29814));

var G__29815 = seq__29797;
var G__29816 = chunk__29798;
var G__29817 = count__29799;
var G__29818 = (i__29800 + (1));
seq__29797 = G__29815;
chunk__29798 = G__29816;
count__29799 = G__29817;
i__29800 = G__29818;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__29797);
if(temp__4406__auto__){
var seq__29797__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__29797__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__29797__$1);
var G__29819 = cljs.core.chunk_rest(seq__29797__$1);
var G__29820 = c__26526__auto__;
var G__29821 = cljs.core.count(c__26526__auto__);
var G__29822 = (0);
seq__29797 = G__29819;
chunk__29798 = G__29820;
count__29799 = G__29821;
i__29800 = G__29822;
continue;
} else {
var vec__29806 = cljs.core.first(seq__29797__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29806,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29806,(1),null);
var G__29807_29823 = key;
var G__29808_29824 = this$__$1;
var G__29809_29825 = oldval;
var G__29810_29826 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29807_29823,G__29808_29824,G__29809_29825,G__29810_29826) : f.call(null,G__29807_29823,G__29808_29824,G__29809_29825,G__29810_29826));

var G__29827 = cljs.core.next(seq__29797__$1);
var G__29828 = null;
var G__29829 = (0);
var G__29830 = (0);
seq__29797 = G__29827;
chunk__29798 = G__29828;
count__29799 = G__29829;
i__29800 = G__29830;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__29834__delegate = function (x,p__29831){
var map__29833 = p__29831;
var map__29833__$1 = ((cljs.core.seq_QMARK_(map__29833))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29833):map__29833);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29833__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29833__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__29834 = function (x,var_args){
var p__29831 = null;
if (arguments.length > 1) {
var G__29835__i = 0, G__29835__a = new Array(arguments.length -  1);
while (G__29835__i < G__29835__a.length) {G__29835__a[G__29835__i] = arguments[G__29835__i + 1]; ++G__29835__i;}
  p__29831 = new cljs.core.IndexedSeq(G__29835__a,0);
} 
return G__29834__delegate.call(this,x,p__29831);};
G__29834.cljs$lang$maxFixedArity = 1;
G__29834.cljs$lang$applyTo = (function (arglist__29836){
var x = cljs.core.first(arglist__29836);
var p__29831 = cljs.core.rest(arglist__29836);
return G__29834__delegate(x,p__29831);
});
G__29834.cljs$core$IFn$_invoke$arity$variadic = G__29834__delegate;
return G__29834;
})()
;
atom = function(x,var_args){
var p__29831 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__29837 = null;
if (arguments.length > 1) {
var G__29838__i = 0, G__29838__a = new Array(arguments.length -  1);
while (G__29838__i < G__29838__a.length) {G__29838__a[G__29838__i] = arguments[G__29838__i + 1]; ++G__29838__i;}
G__29837 = new cljs.core.IndexedSeq(G__29838__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__29837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__29841 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__29841) : validate.call(null,G__29841));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__29842 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29842) : cljs.core.pr_str.call(null,G__29842));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29849 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29849) : f.call(null,G__29849));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29850 = a.state;
var G__29851 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29850,G__29851) : f.call(null,G__29850,G__29851));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__29852 = a.state;
var G__29853 = x;
var G__29854 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29852,G__29853,G__29854) : f.call(null,G__29852,G__29853,G__29854));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__29855__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__29855 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__29856__i = 0, G__29856__a = new Array(arguments.length -  4);
while (G__29856__i < G__29856__a.length) {G__29856__a[G__29856__i] = arguments[G__29856__i + 4]; ++G__29856__i;}
  more = new cljs.core.IndexedSeq(G__29856__a,0);
} 
return G__29855__delegate.call(this,a,f,x,y,more);};
G__29855.cljs$lang$maxFixedArity = 4;
G__29855.cljs$lang$applyTo = (function (arglist__29857){
var a = cljs.core.first(arglist__29857);
arglist__29857 = cljs.core.next(arglist__29857);
var f = cljs.core.first(arglist__29857);
arglist__29857 = cljs.core.next(arglist__29857);
var x = cljs.core.first(arglist__29857);
arglist__29857 = cljs.core.next(arglist__29857);
var y = cljs.core.first(arglist__29857);
var more = cljs.core.rest(arglist__29857);
return G__29855__delegate(a,f,x,y,more);
});
G__29855.cljs$core$IFn$_invoke$arity$variadic = G__29855__delegate;
return G__29855;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__29858 = null;
if (arguments.length > 4) {
var G__29859__i = 0, G__29859__a = new Array(arguments.length -  4);
while (G__29859__i < G__29859__a.length) {G__29859__a[G__29859__i] = arguments[G__29859__i + 4]; ++G__29859__i;}
G__29858 = new cljs.core.IndexedSeq(G__29859__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__29858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__29926 = null;
var G__29926__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__29926__1 = (function (result){
var G__29893 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__29893) : rf.call(null,G__29893));
});
var G__29926__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__29894 = i;
var G__29895 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29894,G__29895) : f.call(null,G__29894,G__29895));
})();
if((v == null)){
return result;
} else {
var G__29896 = result;
var G__29897 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29896,G__29897) : rf.call(null,G__29896,G__29897));
}
});
G__29926 = function(result,input){
switch(arguments.length){
case 0:
return G__29926__0.call(this);
case 1:
return G__29926__1.call(this,result);
case 2:
return G__29926__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29926.cljs$core$IFn$_invoke$arity$0 = G__29926__0;
G__29926.cljs$core$IFn$_invoke$arity$1 = G__29926__1;
G__29926.cljs$core$IFn$_invoke$arity$2 = G__29926__2;
return G__29926;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__26626__auto___29927 = size;
var i_29928 = (0);
while(true){
if((i_29928 < n__26626__auto___29927)){
var x_29929 = (function (){var G__29922 = (idx + i_29928);
var G__29923 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_29928);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29922,G__29923) : f.call(null,G__29922,G__29923));
})();
if((x_29929 == null)){
} else {
cljs.core.chunk_append(b,x_29929);
}

var G__29930 = (i_29928 + (1));
i_29928 = G__29930;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__29924 = idx;
var G__29925 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29924,G__29925) : f.call(null,G__29924,G__29925));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__30144 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30144) : p.call(null,G__30144));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30146 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30146) : p.call(null,G__30146));
})();
if(cljs.core.truth_(and__25727__auto__)){
var G__30147 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30147) : p.call(null,G__30147));
} else {
return and__25727__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30149 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30149) : p.call(null,G__30149));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30151 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30151) : p.call(null,G__30151));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var G__30152 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30152) : p.call(null,G__30152));
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__30321__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__30321 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30322__i = 0, G__30322__a = new Array(arguments.length -  3);
while (G__30322__i < G__30322__a.length) {G__30322__a[G__30322__i] = arguments[G__30322__i + 3]; ++G__30322__i;}
  args = new cljs.core.IndexedSeq(G__30322__a,0);
} 
return G__30321__delegate.call(this,x,y,z,args);};
G__30321.cljs$lang$maxFixedArity = 3;
G__30321.cljs$lang$applyTo = (function (arglist__30323){
var x = cljs.core.first(arglist__30323);
arglist__30323 = cljs.core.next(arglist__30323);
var y = cljs.core.first(arglist__30323);
arglist__30323 = cljs.core.next(arglist__30323);
var z = cljs.core.first(arglist__30323);
var args = cljs.core.rest(arglist__30323);
return G__30321__delegate(x,y,z,args);
});
G__30321.cljs$core$IFn$_invoke$arity$variadic = G__30321__delegate;
return G__30321;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__30324 = null;
if (arguments.length > 3) {
var G__30325__i = 0, G__30325__a = new Array(arguments.length -  3);
while (G__30325__i < G__30325__a.length) {G__30325__a[G__30325__i] = arguments[G__30325__i + 3]; ++G__30325__i;}
G__30324 = new cljs.core.IndexedSeq(G__30325__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30184 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30184) : p1.call(null,G__30184));
})();
if(cljs.core.truth_(and__25727__auto__)){
var G__30185 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30185) : p2.call(null,G__30185));
} else {
return and__25727__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30187 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30187) : p1.call(null,G__30187));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30189 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30189) : p1.call(null,G__30189));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var and__25727__auto____$2 = (function (){var G__30191 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30191) : p2.call(null,G__30191));
})();
if(cljs.core.truth_(and__25727__auto____$2)){
var G__30192 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30192) : p2.call(null,G__30192));
} else {
return and__25727__auto____$2;
}
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30194 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30194) : p1.call(null,G__30194));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30196 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30196) : p1.call(null,G__30196));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var and__25727__auto____$2 = (function (){var G__30198 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30198) : p1.call(null,G__30198));
})();
if(cljs.core.truth_(and__25727__auto____$2)){
var and__25727__auto____$3 = (function (){var G__30200 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30200) : p2.call(null,G__30200));
})();
if(cljs.core.truth_(and__25727__auto____$3)){
var and__25727__auto____$4 = (function (){var G__30202 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30202) : p2.call(null,G__30202));
})();
if(cljs.core.truth_(and__25727__auto____$4)){
var G__30203 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30203) : p2.call(null,G__30203));
} else {
return and__25727__auto____$4;
}
} else {
return and__25727__auto____$3;
}
} else {
return and__25727__auto____$2;
}
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__30326__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__29931_SHARP_){
var and__25727__auto__ = (function (){var G__30208 = p1__29931_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30208) : p1.call(null,G__30208));
})();
if(cljs.core.truth_(and__25727__auto__)){
var G__30209 = p1__29931_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30209) : p2.call(null,G__30209));
} else {
return and__25727__auto__;
}
}),args)));
};
var G__30326 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30327__i = 0, G__30327__a = new Array(arguments.length -  3);
while (G__30327__i < G__30327__a.length) {G__30327__a[G__30327__i] = arguments[G__30327__i + 3]; ++G__30327__i;}
  args = new cljs.core.IndexedSeq(G__30327__a,0);
} 
return G__30326__delegate.call(this,x,y,z,args);};
G__30326.cljs$lang$maxFixedArity = 3;
G__30326.cljs$lang$applyTo = (function (arglist__30328){
var x = cljs.core.first(arglist__30328);
arglist__30328 = cljs.core.next(arglist__30328);
var y = cljs.core.first(arglist__30328);
arglist__30328 = cljs.core.next(arglist__30328);
var z = cljs.core.first(arglist__30328);
var args = cljs.core.rest(arglist__30328);
return G__30326__delegate(x,y,z,args);
});
G__30326.cljs$core$IFn$_invoke$arity$variadic = G__30326__delegate;
return G__30326;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__30329 = null;
if (arguments.length > 3) {
var G__30330__i = 0, G__30330__a = new Array(arguments.length -  3);
while (G__30330__i < G__30330__a.length) {G__30330__a[G__30330__i] = arguments[G__30330__i + 3]; ++G__30330__i;}
G__30329 = new cljs.core.IndexedSeq(G__30330__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30255 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30255) : p1.call(null,G__30255));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30257 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30257) : p2.call(null,G__30257));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var G__30258 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30258) : p3.call(null,G__30258));
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30260 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30260) : p1.call(null,G__30260));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30262 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30262) : p2.call(null,G__30262));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var and__25727__auto____$2 = (function (){var G__30264 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30264) : p3.call(null,G__30264));
})();
if(cljs.core.truth_(and__25727__auto____$2)){
var and__25727__auto____$3 = (function (){var G__30266 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30266) : p1.call(null,G__30266));
})();
if(cljs.core.truth_(and__25727__auto____$3)){
var and__25727__auto____$4 = (function (){var G__30268 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30268) : p2.call(null,G__30268));
})();
if(cljs.core.truth_(and__25727__auto____$4)){
var G__30269 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30269) : p3.call(null,G__30269));
} else {
return and__25727__auto____$4;
}
} else {
return and__25727__auto____$3;
}
} else {
return and__25727__auto____$2;
}
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__25727__auto__ = (function (){var G__30271 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30271) : p1.call(null,G__30271));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30273 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30273) : p2.call(null,G__30273));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var and__25727__auto____$2 = (function (){var G__30275 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30275) : p3.call(null,G__30275));
})();
if(cljs.core.truth_(and__25727__auto____$2)){
var and__25727__auto____$3 = (function (){var G__30277 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30277) : p1.call(null,G__30277));
})();
if(cljs.core.truth_(and__25727__auto____$3)){
var and__25727__auto____$4 = (function (){var G__30279 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30279) : p2.call(null,G__30279));
})();
if(cljs.core.truth_(and__25727__auto____$4)){
var and__25727__auto____$5 = (function (){var G__30281 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30281) : p3.call(null,G__30281));
})();
if(cljs.core.truth_(and__25727__auto____$5)){
var and__25727__auto____$6 = (function (){var G__30283 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30283) : p1.call(null,G__30283));
})();
if(cljs.core.truth_(and__25727__auto____$6)){
var and__25727__auto____$7 = (function (){var G__30285 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30285) : p2.call(null,G__30285));
})();
if(cljs.core.truth_(and__25727__auto____$7)){
var G__30286 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30286) : p3.call(null,G__30286));
} else {
return and__25727__auto____$7;
}
} else {
return and__25727__auto____$6;
}
} else {
return and__25727__auto____$5;
}
} else {
return and__25727__auto____$4;
}
} else {
return and__25727__auto____$3;
}
} else {
return and__25727__auto____$2;
}
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__30331__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__29932_SHARP_){
var and__25727__auto__ = (function (){var G__30293 = p1__29932_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30293) : p1.call(null,G__30293));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30295 = p1__29932_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30295) : p2.call(null,G__30295));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var G__30296 = p1__29932_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30296) : p3.call(null,G__30296));
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
}),args)));
};
var G__30331 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30332__i = 0, G__30332__a = new Array(arguments.length -  3);
while (G__30332__i < G__30332__a.length) {G__30332__a[G__30332__i] = arguments[G__30332__i + 3]; ++G__30332__i;}
  args = new cljs.core.IndexedSeq(G__30332__a,0);
} 
return G__30331__delegate.call(this,x,y,z,args);};
G__30331.cljs$lang$maxFixedArity = 3;
G__30331.cljs$lang$applyTo = (function (arglist__30333){
var x = cljs.core.first(arglist__30333);
arglist__30333 = cljs.core.next(arglist__30333);
var y = cljs.core.first(arglist__30333);
arglist__30333 = cljs.core.next(arglist__30333);
var z = cljs.core.first(arglist__30333);
var args = cljs.core.rest(arglist__30333);
return G__30331__delegate(x,y,z,args);
});
G__30331.cljs$core$IFn$_invoke$arity$variadic = G__30331__delegate;
return G__30331;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__30334 = null;
if (arguments.length > 3) {
var G__30335__i = 0, G__30335__a = new Array(arguments.length -  3);
while (G__30335__i < G__30335__a.length) {G__30335__a[G__30335__i] = arguments[G__30335__i + 3]; ++G__30335__i;}
G__30334 = new cljs.core.IndexedSeq(G__30335__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__30336__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29933_SHARP_){
var G__30312 = x;
return (p1__29933_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29933_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30312) : p1__29933_SHARP_.call(null,G__30312));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29934_SHARP_){
var and__25727__auto__ = (function (){var G__30314 = x;
return (p1__29934_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29934_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30314) : p1__29934_SHARP_.call(null,G__30314));
})();
if(cljs.core.truth_(and__25727__auto__)){
var G__30315 = y;
return (p1__29934_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29934_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30315) : p1__29934_SHARP_.call(null,G__30315));
} else {
return and__25727__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29935_SHARP_){
var and__25727__auto__ = (function (){var G__30317 = x;
return (p1__29935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30317) : p1__29935_SHARP_.call(null,G__30317));
})();
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__30319 = y;
return (p1__29935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30319) : p1__29935_SHARP_.call(null,G__30319));
})();
if(cljs.core.truth_(and__25727__auto____$1)){
var G__30320 = z;
return (p1__29935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30320) : p1__29935_SHARP_.call(null,G__30320));
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__30337__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__29936_SHARP_){
return cljs.core.every_QMARK_(p1__29936_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__30337 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30338__i = 0, G__30338__a = new Array(arguments.length -  3);
while (G__30338__i < G__30338__a.length) {G__30338__a[G__30338__i] = arguments[G__30338__i + 3]; ++G__30338__i;}
  args = new cljs.core.IndexedSeq(G__30338__a,0);
} 
return G__30337__delegate.call(this,x,y,z,args);};
G__30337.cljs$lang$maxFixedArity = 3;
G__30337.cljs$lang$applyTo = (function (arglist__30339){
var x = cljs.core.first(arglist__30339);
arglist__30339 = cljs.core.next(arglist__30339);
var y = cljs.core.first(arglist__30339);
arglist__30339 = cljs.core.next(arglist__30339);
var z = cljs.core.first(arglist__30339);
var args = cljs.core.rest(arglist__30339);
return G__30337__delegate(x,y,z,args);
});
G__30337.cljs$core$IFn$_invoke$arity$variadic = G__30337__delegate;
return G__30337;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__30340 = null;
if (arguments.length > 3) {
var G__30341__i = 0, G__30341__a = new Array(arguments.length -  3);
while (G__30341__i < G__30341__a.length) {G__30341__a[G__30341__i] = arguments[G__30341__i + 3]; ++G__30341__i;}
G__30340 = new cljs.core.IndexedSeq(G__30341__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__30336 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30342__i = 0, G__30342__a = new Array(arguments.length -  3);
while (G__30342__i < G__30342__a.length) {G__30342__a[G__30342__i] = arguments[G__30342__i + 3]; ++G__30342__i;}
  ps = new cljs.core.IndexedSeq(G__30342__a,0);
} 
return G__30336__delegate.call(this,p1,p2,p3,ps);};
G__30336.cljs$lang$maxFixedArity = 3;
G__30336.cljs$lang$applyTo = (function (arglist__30343){
var p1 = cljs.core.first(arglist__30343);
arglist__30343 = cljs.core.next(arglist__30343);
var p2 = cljs.core.first(arglist__30343);
arglist__30343 = cljs.core.next(arglist__30343);
var p3 = cljs.core.first(arglist__30343);
var ps = cljs.core.rest(arglist__30343);
return G__30336__delegate(p1,p2,p3,ps);
});
G__30336.cljs$core$IFn$_invoke$arity$variadic = G__30336__delegate;
return G__30336;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__30344 = null;
if (arguments.length > 3) {
var G__30345__i = 0, G__30345__a = new Array(arguments.length -  3);
while (G__30345__i < G__30345__a.length) {G__30345__a[G__30345__i] = arguments[G__30345__i + 3]; ++G__30345__i;}
G__30344 = new cljs.core.IndexedSeq(G__30345__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__30551 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30551) : p.call(null,G__30551));
});
var sp1__2 = (function (x,y){
var or__25739__auto__ = (function (){var G__30553 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30553) : p.call(null,G__30553));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var G__30554 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30554) : p.call(null,G__30554));
}
});
var sp1__3 = (function (x,y,z){
var or__25739__auto__ = (function (){var G__30556 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30556) : p.call(null,G__30556));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30558 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30558) : p.call(null,G__30558));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var G__30559 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__30559) : p.call(null,G__30559));
}
}
});
var sp1__4 = (function() { 
var G__30720__delegate = function (x,y,z,args){
var or__25739__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__30720 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30721__i = 0, G__30721__a = new Array(arguments.length -  3);
while (G__30721__i < G__30721__a.length) {G__30721__a[G__30721__i] = arguments[G__30721__i + 3]; ++G__30721__i;}
  args = new cljs.core.IndexedSeq(G__30721__a,0);
} 
return G__30720__delegate.call(this,x,y,z,args);};
G__30720.cljs$lang$maxFixedArity = 3;
G__30720.cljs$lang$applyTo = (function (arglist__30722){
var x = cljs.core.first(arglist__30722);
arglist__30722 = cljs.core.next(arglist__30722);
var y = cljs.core.first(arglist__30722);
arglist__30722 = cljs.core.next(arglist__30722);
var z = cljs.core.first(arglist__30722);
var args = cljs.core.rest(arglist__30722);
return G__30720__delegate(x,y,z,args);
});
G__30720.cljs$core$IFn$_invoke$arity$variadic = G__30720__delegate;
return G__30720;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__30723 = null;
if (arguments.length > 3) {
var G__30724__i = 0, G__30724__a = new Array(arguments.length -  3);
while (G__30724__i < G__30724__a.length) {G__30724__a[G__30724__i] = arguments[G__30724__i + 3]; ++G__30724__i;}
G__30723 = new cljs.core.IndexedSeq(G__30724__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__25739__auto__ = (function (){var G__30591 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30591) : p1.call(null,G__30591));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var G__30592 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30592) : p2.call(null,G__30592));
}
});
var sp2__2 = (function (x,y){
var or__25739__auto__ = (function (){var G__30594 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30594) : p1.call(null,G__30594));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30596 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30596) : p1.call(null,G__30596));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var or__25739__auto____$2 = (function (){var G__30598 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30598) : p2.call(null,G__30598));
})();
if(cljs.core.truth_(or__25739__auto____$2)){
return or__25739__auto____$2;
} else {
var G__30599 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30599) : p2.call(null,G__30599));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__25739__auto__ = (function (){var G__30601 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30601) : p1.call(null,G__30601));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30603 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30603) : p1.call(null,G__30603));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var or__25739__auto____$2 = (function (){var G__30605 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30605) : p1.call(null,G__30605));
})();
if(cljs.core.truth_(or__25739__auto____$2)){
return or__25739__auto____$2;
} else {
var or__25739__auto____$3 = (function (){var G__30607 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30607) : p2.call(null,G__30607));
})();
if(cljs.core.truth_(or__25739__auto____$3)){
return or__25739__auto____$3;
} else {
var or__25739__auto____$4 = (function (){var G__30609 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30609) : p2.call(null,G__30609));
})();
if(cljs.core.truth_(or__25739__auto____$4)){
return or__25739__auto____$4;
} else {
var G__30610 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30610) : p2.call(null,G__30610));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__30725__delegate = function (x,y,z,args){
var or__25739__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.some(((function (or__25739__auto__){
return (function (p1__30346_SHARP_){
var or__25739__auto____$1 = (function (){var G__30612 = p1__30346_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30612) : p1.call(null,G__30612));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var G__30613 = p1__30346_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30613) : p2.call(null,G__30613));
}
});})(or__25739__auto__))
,args);
}
};
var G__30725 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30726__i = 0, G__30726__a = new Array(arguments.length -  3);
while (G__30726__i < G__30726__a.length) {G__30726__a[G__30726__i] = arguments[G__30726__i + 3]; ++G__30726__i;}
  args = new cljs.core.IndexedSeq(G__30726__a,0);
} 
return G__30725__delegate.call(this,x,y,z,args);};
G__30725.cljs$lang$maxFixedArity = 3;
G__30725.cljs$lang$applyTo = (function (arglist__30727){
var x = cljs.core.first(arglist__30727);
arglist__30727 = cljs.core.next(arglist__30727);
var y = cljs.core.first(arglist__30727);
arglist__30727 = cljs.core.next(arglist__30727);
var z = cljs.core.first(arglist__30727);
var args = cljs.core.rest(arglist__30727);
return G__30725__delegate(x,y,z,args);
});
G__30725.cljs$core$IFn$_invoke$arity$variadic = G__30725__delegate;
return G__30725;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__30728 = null;
if (arguments.length > 3) {
var G__30729__i = 0, G__30729__a = new Array(arguments.length -  3);
while (G__30729__i < G__30729__a.length) {G__30729__a[G__30729__i] = arguments[G__30729__i + 3]; ++G__30729__i;}
G__30728 = new cljs.core.IndexedSeq(G__30729__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__25739__auto__ = (function (){var G__30659 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30659) : p1.call(null,G__30659));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30661 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30661) : p2.call(null,G__30661));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var G__30662 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30662) : p3.call(null,G__30662));
}
}
});
var sp3__2 = (function (x,y){
var or__25739__auto__ = (function (){var G__30664 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30664) : p1.call(null,G__30664));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30666 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30666) : p2.call(null,G__30666));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var or__25739__auto____$2 = (function (){var G__30668 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30668) : p3.call(null,G__30668));
})();
if(cljs.core.truth_(or__25739__auto____$2)){
return or__25739__auto____$2;
} else {
var or__25739__auto____$3 = (function (){var G__30670 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30670) : p1.call(null,G__30670));
})();
if(cljs.core.truth_(or__25739__auto____$3)){
return or__25739__auto____$3;
} else {
var or__25739__auto____$4 = (function (){var G__30672 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30672) : p2.call(null,G__30672));
})();
if(cljs.core.truth_(or__25739__auto____$4)){
return or__25739__auto____$4;
} else {
var G__30673 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30673) : p3.call(null,G__30673));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__25739__auto__ = (function (){var G__30675 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30675) : p1.call(null,G__30675));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30677 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30677) : p2.call(null,G__30677));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var or__25739__auto____$2 = (function (){var G__30679 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30679) : p3.call(null,G__30679));
})();
if(cljs.core.truth_(or__25739__auto____$2)){
return or__25739__auto____$2;
} else {
var or__25739__auto____$3 = (function (){var G__30681 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30681) : p1.call(null,G__30681));
})();
if(cljs.core.truth_(or__25739__auto____$3)){
return or__25739__auto____$3;
} else {
var or__25739__auto____$4 = (function (){var G__30683 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30683) : p2.call(null,G__30683));
})();
if(cljs.core.truth_(or__25739__auto____$4)){
return or__25739__auto____$4;
} else {
var or__25739__auto____$5 = (function (){var G__30685 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30685) : p3.call(null,G__30685));
})();
if(cljs.core.truth_(or__25739__auto____$5)){
return or__25739__auto____$5;
} else {
var or__25739__auto____$6 = (function (){var G__30687 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30687) : p1.call(null,G__30687));
})();
if(cljs.core.truth_(or__25739__auto____$6)){
return or__25739__auto____$6;
} else {
var or__25739__auto____$7 = (function (){var G__30689 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30689) : p2.call(null,G__30689));
})();
if(cljs.core.truth_(or__25739__auto____$7)){
return or__25739__auto____$7;
} else {
var G__30690 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30690) : p3.call(null,G__30690));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__30730__delegate = function (x,y,z,args){
var or__25739__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.some(((function (or__25739__auto__){
return (function (p1__30347_SHARP_){
var or__25739__auto____$1 = (function (){var G__30692 = p1__30347_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__30692) : p1.call(null,G__30692));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var or__25739__auto____$2 = (function (){var G__30694 = p1__30347_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__30694) : p2.call(null,G__30694));
})();
if(cljs.core.truth_(or__25739__auto____$2)){
return or__25739__auto____$2;
} else {
var G__30695 = p1__30347_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__30695) : p3.call(null,G__30695));
}
}
});})(or__25739__auto__))
,args);
}
};
var G__30730 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30731__i = 0, G__30731__a = new Array(arguments.length -  3);
while (G__30731__i < G__30731__a.length) {G__30731__a[G__30731__i] = arguments[G__30731__i + 3]; ++G__30731__i;}
  args = new cljs.core.IndexedSeq(G__30731__a,0);
} 
return G__30730__delegate.call(this,x,y,z,args);};
G__30730.cljs$lang$maxFixedArity = 3;
G__30730.cljs$lang$applyTo = (function (arglist__30732){
var x = cljs.core.first(arglist__30732);
arglist__30732 = cljs.core.next(arglist__30732);
var y = cljs.core.first(arglist__30732);
arglist__30732 = cljs.core.next(arglist__30732);
var z = cljs.core.first(arglist__30732);
var args = cljs.core.rest(arglist__30732);
return G__30730__delegate(x,y,z,args);
});
G__30730.cljs$core$IFn$_invoke$arity$variadic = G__30730__delegate;
return G__30730;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__30733 = null;
if (arguments.length > 3) {
var G__30734__i = 0, G__30734__a = new Array(arguments.length -  3);
while (G__30734__i < G__30734__a.length) {G__30734__a[G__30734__i] = arguments[G__30734__i + 3]; ++G__30734__i;}
G__30733 = new cljs.core.IndexedSeq(G__30734__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__30735__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__30348_SHARP_){
var G__30711 = x;
return (p1__30348_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30348_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30711) : p1__30348_SHARP_.call(null,G__30711));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__30349_SHARP_){
var or__25739__auto__ = (function (){var G__30713 = x;
return (p1__30349_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30349_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30713) : p1__30349_SHARP_.call(null,G__30713));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var G__30714 = y;
return (p1__30349_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30349_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30714) : p1__30349_SHARP_.call(null,G__30714));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__30350_SHARP_){
var or__25739__auto__ = (function (){var G__30716 = x;
return (p1__30350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30350_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30716) : p1__30350_SHARP_.call(null,G__30716));
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var G__30718 = y;
return (p1__30350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30350_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30718) : p1__30350_SHARP_.call(null,G__30718));
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var G__30719 = z;
return (p1__30350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30350_SHARP_.cljs$core$IFn$_invoke$arity$1(G__30719) : p1__30350_SHARP_.call(null,G__30719));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__30736__delegate = function (x,y,z,args){
var or__25739__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.some(((function (or__25739__auto__,ps__$1){
return (function (p1__30351_SHARP_){
return cljs.core.some(p1__30351_SHARP_,args);
});})(or__25739__auto__,ps__$1))
,ps__$1);
}
};
var G__30736 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__30737__i = 0, G__30737__a = new Array(arguments.length -  3);
while (G__30737__i < G__30737__a.length) {G__30737__a[G__30737__i] = arguments[G__30737__i + 3]; ++G__30737__i;}
  args = new cljs.core.IndexedSeq(G__30737__a,0);
} 
return G__30736__delegate.call(this,x,y,z,args);};
G__30736.cljs$lang$maxFixedArity = 3;
G__30736.cljs$lang$applyTo = (function (arglist__30738){
var x = cljs.core.first(arglist__30738);
arglist__30738 = cljs.core.next(arglist__30738);
var y = cljs.core.first(arglist__30738);
arglist__30738 = cljs.core.next(arglist__30738);
var z = cljs.core.first(arglist__30738);
var args = cljs.core.rest(arglist__30738);
return G__30736__delegate(x,y,z,args);
});
G__30736.cljs$core$IFn$_invoke$arity$variadic = G__30736__delegate;
return G__30736;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__30739 = null;
if (arguments.length > 3) {
var G__30740__i = 0, G__30740__a = new Array(arguments.length -  3);
while (G__30740__i < G__30740__a.length) {G__30740__a[G__30740__i] = arguments[G__30740__i + 3]; ++G__30740__i;}
G__30739 = new cljs.core.IndexedSeq(G__30740__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__30739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__30735 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__30741__i = 0, G__30741__a = new Array(arguments.length -  3);
while (G__30741__i < G__30741__a.length) {G__30741__a[G__30741__i] = arguments[G__30741__i + 3]; ++G__30741__i;}
  ps = new cljs.core.IndexedSeq(G__30741__a,0);
} 
return G__30735__delegate.call(this,p1,p2,p3,ps);};
G__30735.cljs$lang$maxFixedArity = 3;
G__30735.cljs$lang$applyTo = (function (arglist__30742){
var p1 = cljs.core.first(arglist__30742);
arglist__30742 = cljs.core.next(arglist__30742);
var p2 = cljs.core.first(arglist__30742);
arglist__30742 = cljs.core.next(arglist__30742);
var p3 = cljs.core.first(arglist__30742);
var ps = cljs.core.rest(arglist__30742);
return G__30735__delegate(p1,p2,p3,ps);
});
G__30735.cljs$core$IFn$_invoke$arity$variadic = G__30735__delegate;
return G__30735;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__30743 = null;
if (arguments.length > 3) {
var G__30744__i = 0, G__30744__a = new Array(arguments.length -  3);
while (G__30744__i < G__30744__a.length) {G__30744__a[G__30744__i] = arguments[G__30744__i + 3]; ++G__30744__i;}
G__30743 = new cljs.core.IndexedSeq(G__30744__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__30743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__30799 = null;
var G__30799__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30799__1 = (function (result){
var G__30785 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30785) : rf.call(null,G__30785));
});
var G__30799__2 = (function (result,input){
var G__30786 = result;
var G__30787 = (function (){var G__30788 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30788) : f.call(null,G__30788));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30786,G__30787) : rf.call(null,G__30786,G__30787));
});
var G__30799__3 = (function() { 
var G__30800__delegate = function (result,input,inputs){
var G__30789 = result;
var G__30790 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30789,G__30790) : rf.call(null,G__30789,G__30790));
};
var G__30800 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__30801__i = 0, G__30801__a = new Array(arguments.length -  2);
while (G__30801__i < G__30801__a.length) {G__30801__a[G__30801__i] = arguments[G__30801__i + 2]; ++G__30801__i;}
  inputs = new cljs.core.IndexedSeq(G__30801__a,0);
} 
return G__30800__delegate.call(this,result,input,inputs);};
G__30800.cljs$lang$maxFixedArity = 2;
G__30800.cljs$lang$applyTo = (function (arglist__30802){
var result = cljs.core.first(arglist__30802);
arglist__30802 = cljs.core.next(arglist__30802);
var input = cljs.core.first(arglist__30802);
var inputs = cljs.core.rest(arglist__30802);
return G__30800__delegate(result,input,inputs);
});
G__30800.cljs$core$IFn$_invoke$arity$variadic = G__30800__delegate;
return G__30800;
})()
;
G__30799 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__30799__0.call(this);
case 1:
return G__30799__1.call(this,result);
case 2:
return G__30799__2.call(this,result,input);
default:
var G__30803 = null;
if (arguments.length > 2) {
var G__30804__i = 0, G__30804__a = new Array(arguments.length -  2);
while (G__30804__i < G__30804__a.length) {G__30804__a[G__30804__i] = arguments[G__30804__i + 2]; ++G__30804__i;}
G__30803 = new cljs.core.IndexedSeq(G__30804__a,0);
}
return G__30799__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__30803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30799.cljs$lang$maxFixedArity = 2;
G__30799.cljs$lang$applyTo = G__30799__3.cljs$lang$applyTo;
G__30799.cljs$core$IFn$_invoke$arity$0 = G__30799__0;
G__30799.cljs$core$IFn$_invoke$arity$1 = G__30799__1;
G__30799.cljs$core$IFn$_invoke$arity$2 = G__30799__2;
G__30799.cljs$core$IFn$_invoke$arity$variadic = G__30799__3.cljs$core$IFn$_invoke$arity$variadic;
return G__30799;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__26626__auto___30805 = size;
var i_30806 = (0);
while(true){
if((i_30806 < n__26626__auto___30805)){
cljs.core.chunk_append(b,(function (){var G__30791 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30806);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30791) : f.call(null,G__30791));
})());

var G__30807 = (i_30806 + (1));
i_30806 = G__30807;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__30792 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30792) : f.call(null,G__30792));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__30793 = cljs.core.first(s1);
var G__30794 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30793,G__30794) : f.call(null,G__30793,G__30794));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__30795 = cljs.core.first(s1);
var G__30796 = cljs.core.first(s2);
var G__30797 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30795,G__30796,G__30797) : f.call(null,G__30795,G__30796,G__30797));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__30808__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__30745_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__30745_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__30808 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__30809__i = 0, G__30809__a = new Array(arguments.length -  4);
while (G__30809__i < G__30809__a.length) {G__30809__a[G__30809__i] = arguments[G__30809__i + 4]; ++G__30809__i;}
  colls = new cljs.core.IndexedSeq(G__30809__a,0);
} 
return G__30808__delegate.call(this,f,c1,c2,c3,colls);};
G__30808.cljs$lang$maxFixedArity = 4;
G__30808.cljs$lang$applyTo = (function (arglist__30810){
var f = cljs.core.first(arglist__30810);
arglist__30810 = cljs.core.next(arglist__30810);
var c1 = cljs.core.first(arglist__30810);
arglist__30810 = cljs.core.next(arglist__30810);
var c2 = cljs.core.first(arglist__30810);
arglist__30810 = cljs.core.next(arglist__30810);
var c3 = cljs.core.first(arglist__30810);
var colls = cljs.core.rest(arglist__30810);
return G__30808__delegate(f,c1,c2,c3,colls);
});
G__30808.cljs$core$IFn$_invoke$arity$variadic = G__30808__delegate;
return G__30808;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__30811 = null;
if (arguments.length > 4) {
var G__30812__i = 0, G__30812__a = new Array(arguments.length -  4);
while (G__30812__i < G__30812__a.length) {G__30812__a[G__30812__i] = arguments[G__30812__i + 4]; ++G__30812__i;}
G__30811 = new cljs.core.IndexedSeq(G__30812__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__30811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__30821 = null;
var G__30821__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30821__1 = (function (result){
var G__30818 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30818) : rf.call(null,G__30818));
});
var G__30821__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__30819 = result;
var G__30820 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30819,G__30820) : rf.call(null,G__30819,G__30820));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__30821 = function(result,input){
switch(arguments.length){
case 0:
return G__30821__0.call(this);
case 1:
return G__30821__1.call(this,result);
case 2:
return G__30821__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30821.cljs$core$IFn$_invoke$arity$0 = G__30821__0;
G__30821.cljs$core$IFn$_invoke$arity$1 = G__30821__1;
G__30821.cljs$core$IFn$_invoke$arity$2 = G__30821__2;
return G__30821;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__30828 = null;
var G__30828__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30828__1 = (function (result){
var G__30825 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30825) : rf.call(null,G__30825));
});
var G__30828__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__30826 = result;
var G__30827 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30826,G__30827) : rf.call(null,G__30826,G__30827));
}
});
G__30828 = function(result,input){
switch(arguments.length){
case 0:
return G__30828__0.call(this);
case 1:
return G__30828__1.call(this,result);
case 2:
return G__30828__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30828.cljs$core$IFn$_invoke$arity$0 = G__30828__0;
G__30828.cljs$core$IFn$_invoke$arity$1 = G__30828__1;
G__30828.cljs$core$IFn$_invoke$arity$2 = G__30828__2;
return G__30828;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__30829 = (n__$1 - (1));
var G__30830 = cljs.core.rest(s);
n__$1 = G__30829;
coll__$1 = G__30830;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__30833 = cljs.core.next(s);
var G__30834 = cljs.core.next(lead);
s = G__30833;
lead = G__30834;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__30847 = null;
var G__30847__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30847__1 = (function (result){
var G__30841 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30841) : rf.call(null,G__30841));
});
var G__30847__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__25727__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__25727__auto__)){
var G__30842 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30842) : pred.call(null,G__30842));
} else {
return and__25727__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__30843 = result;
var G__30844 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30843,G__30844) : rf.call(null,G__30843,G__30844));
}
});
G__30847 = function(result,input){
switch(arguments.length){
case 0:
return G__30847__0.call(this);
case 1:
return G__30847__1.call(this,result);
case 2:
return G__30847__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30847.cljs$core$IFn$_invoke$arity$0 = G__30847__0;
G__30847.cljs$core$IFn$_invoke$arity$1 = G__30847__1;
G__30847.cljs$core$IFn$_invoke$arity$2 = G__30847__2;
return G__30847;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__25727__auto__ = s;
if(and__25727__auto__){
var G__30846 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__30846) : pred__$1.call(null,G__30846));
} else {
return and__25727__auto__;
}
})())){
var G__30848 = pred__$1;
var G__30849 = cljs.core.rest(s);
pred__$1 = G__30848;
coll__$1 = G__30849;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__30858 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30858) : f.call(null,G__30858));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__30861__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__30861 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__30862__i = 0, G__30862__a = new Array(arguments.length -  2);
while (G__30862__i < G__30862__a.length) {G__30862__a[G__30862__i] = arguments[G__30862__i + 2]; ++G__30862__i;}
  colls = new cljs.core.IndexedSeq(G__30862__a,0);
} 
return G__30861__delegate.call(this,c1,c2,colls);};
G__30861.cljs$lang$maxFixedArity = 2;
G__30861.cljs$lang$applyTo = (function (arglist__30863){
var c1 = cljs.core.first(arglist__30863);
arglist__30863 = cljs.core.next(arglist__30863);
var c2 = cljs.core.first(arglist__30863);
var colls = cljs.core.rest(arglist__30863);
return G__30861__delegate(c1,c2,colls);
});
G__30861.cljs$core$IFn$_invoke$arity$variadic = G__30861__delegate;
return G__30861;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__30864 = null;
if (arguments.length > 2) {
var G__30865__i = 0, G__30865__a = new Array(arguments.length -  2);
while (G__30865__i < G__30865__a.length) {G__30865__a[G__30865__i] = arguments[G__30865__i + 2]; ++G__30865__i;}
G__30864 = new cljs.core.IndexedSeq(G__30865__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__30864);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var coll__$1 = temp__4404__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__30874__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__30874 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__30875__i = 0, G__30875__a = new Array(arguments.length -  1);
while (G__30875__i < G__30875__a.length) {G__30875__a[G__30875__i] = arguments[G__30875__i + 1]; ++G__30875__i;}
  colls = new cljs.core.IndexedSeq(G__30875__a,0);
} 
return G__30874__delegate.call(this,f,colls);};
G__30874.cljs$lang$maxFixedArity = 1;
G__30874.cljs$lang$applyTo = (function (arglist__30876){
var f = cljs.core.first(arglist__30876);
var colls = cljs.core.rest(arglist__30876);
return G__30874__delegate(f,colls);
});
G__30874.cljs$core$IFn$_invoke$arity$variadic = G__30874__delegate;
return G__30874;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__30877 = null;
if (arguments.length > 1) {
var G__30878__i = 0, G__30878__a = new Array(arguments.length -  1);
while (G__30878__i < G__30878__a.length) {G__30878__a[G__30878__i] = arguments[G__30878__i + 1]; ++G__30878__i;}
G__30877 = new cljs.core.IndexedSeq(G__30878__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__30877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__30897 = null;
var G__30897__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__30897__1 = (function (result){
var G__30891 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__30891) : rf.call(null,G__30891));
});
var G__30897__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__30892 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30892) : pred.call(null,G__30892));
})())){
var G__30893 = result;
var G__30894 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__30893,G__30894) : rf.call(null,G__30893,G__30894));
} else {
return result;
}
});
G__30897 = function(result,input){
switch(arguments.length){
case 0:
return G__30897__0.call(this);
case 1:
return G__30897__1.call(this,result);
case 2:
return G__30897__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30897.cljs$core$IFn$_invoke$arity$0 = G__30897__0;
G__30897.cljs$core$IFn$_invoke$arity$1 = G__30897__1;
G__30897.cljs$core$IFn$_invoke$arity$2 = G__30897__2;
return G__30897;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__26626__auto___30898 = size;
var i_30899 = (0);
while(true){
if((i_30899 < n__26626__auto___30898)){
if(cljs.core.truth_((function (){var G__30895 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30899);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30895) : pred.call(null,G__30895));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_30899));
} else {
}

var G__30900 = (i_30899 + (1));
i_30899 = G__30900;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__30896 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30896) : pred.call(null,G__30896));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__30907 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__30907) : branch_QMARK_.call(null,G__30907));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__30908 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__30908) : children.call(null,G__30908));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__30909_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__30909_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__30912 = to;
if(G__30912){
var bit__26413__auto__ = (G__30912.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__26413__auto__) || (G__30912.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__30913 = to;
if(G__30913){
var bit__26413__auto__ = (G__30913.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__26413__auto__) || (G__30913.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__30915 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30915) : f.call(null,G__30915));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__30916__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__30916 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__30917__i = 0, G__30917__a = new Array(arguments.length -  4);
while (G__30917__i < G__30917__a.length) {G__30917__a[G__30917__i] = arguments[G__30917__i + 4]; ++G__30917__i;}
  colls = new cljs.core.IndexedSeq(G__30917__a,0);
} 
return G__30916__delegate.call(this,f,c1,c2,c3,colls);};
G__30916.cljs$lang$maxFixedArity = 4;
G__30916.cljs$lang$applyTo = (function (arglist__30918){
var f = cljs.core.first(arglist__30918);
arglist__30918 = cljs.core.next(arglist__30918);
var c1 = cljs.core.first(arglist__30918);
arglist__30918 = cljs.core.next(arglist__30918);
var c2 = cljs.core.first(arglist__30918);
arglist__30918 = cljs.core.next(arglist__30918);
var c3 = cljs.core.first(arglist__30918);
var colls = cljs.core.rest(arglist__30918);
return G__30916__delegate(f,c1,c2,c3,colls);
});
G__30916.cljs$core$IFn$_invoke$arity$variadic = G__30916__delegate;
return G__30916;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__30919 = null;
if (arguments.length > 4) {
var G__30920__i = 0, G__30920__a = new Array(arguments.length -  4);
while (G__30920__i < G__30920__a.length) {G__30920__a[G__30920__i] = arguments[G__30920__i + 4]; ++G__30920__i;}
G__30919 = new cljs.core.IndexedSeq(G__30920__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__30919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__30922 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30922) : pred.call(null,G__30922));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__30937 = m__$1;
if(G__30937){
var bit__26420__auto__ = (G__30937.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__26420__auto__) || (G__30937.cljs$core$ILookup$)){
return true;
} else {
if((!G__30937.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__30937);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__30937);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__30938 = sentinel;
var G__30939 = m__$2;
var G__30940 = cljs.core.next(ks__$1);
sentinel = G__30938;
m__$1 = G__30939;
ks__$1 = G__30940;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__30941,v){
var vec__30946 = p__30941;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30946,(0),null);
var ks = cljs.core.nthnext(vec__30946,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__30947,f){
var vec__30985 = p__30947;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30985,(0),null);
var ks = cljs.core.nthnext(vec__30985,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30986 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30986) : f.call(null,G__30986));
})());
}
});
var update_in__4 = (function (m,p__30948,f,a){
var vec__30987 = p__30948;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30987,(0),null);
var ks = cljs.core.nthnext(vec__30987,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30988 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30989 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30988,G__30989) : f.call(null,G__30988,G__30989));
})());
}
});
var update_in__5 = (function (m,p__30949,f,a,b){
var vec__30990 = p__30949;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30990,(0),null);
var ks = cljs.core.nthnext(vec__30990,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30991 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30992 = a;
var G__30993 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30991,G__30992,G__30993) : f.call(null,G__30991,G__30992,G__30993));
})());
}
});
var update_in__6 = (function (m,p__30950,f,a,b,c){
var vec__30994 = p__30950;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30994,(0),null);
var ks = cljs.core.nthnext(vec__30994,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__30995 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__30996 = a;
var G__30997 = b;
var G__30998 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30995,G__30996,G__30997,G__30998) : f.call(null,G__30995,G__30996,G__30997,G__30998));
})());
}
});
var update_in__7 = (function() { 
var G__31000__delegate = function (m,p__30951,f,a,b,c,args){
var vec__30999 = p__30951;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30999,(0),null);
var ks = cljs.core.nthnext(vec__30999,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__31000 = function (m,p__30951,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__31001__i = 0, G__31001__a = new Array(arguments.length -  6);
while (G__31001__i < G__31001__a.length) {G__31001__a[G__31001__i] = arguments[G__31001__i + 6]; ++G__31001__i;}
  args = new cljs.core.IndexedSeq(G__31001__a,0);
} 
return G__31000__delegate.call(this,m,p__30951,f,a,b,c,args);};
G__31000.cljs$lang$maxFixedArity = 6;
G__31000.cljs$lang$applyTo = (function (arglist__31002){
var m = cljs.core.first(arglist__31002);
arglist__31002 = cljs.core.next(arglist__31002);
var p__30951 = cljs.core.first(arglist__31002);
arglist__31002 = cljs.core.next(arglist__31002);
var f = cljs.core.first(arglist__31002);
arglist__31002 = cljs.core.next(arglist__31002);
var a = cljs.core.first(arglist__31002);
arglist__31002 = cljs.core.next(arglist__31002);
var b = cljs.core.first(arglist__31002);
arglist__31002 = cljs.core.next(arglist__31002);
var c = cljs.core.first(arglist__31002);
var args = cljs.core.rest(arglist__31002);
return G__31000__delegate(m,p__30951,f,a,b,c,args);
});
G__31000.cljs$core$IFn$_invoke$arity$variadic = G__31000__delegate;
return G__31000;
})()
;
update_in = function(m,p__30951,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__30951,f);
case 4:
return update_in__4.call(this,m,p__30951,f,a);
case 5:
return update_in__5.call(this,m,p__30951,f,a,b);
case 6:
return update_in__6.call(this,m,p__30951,f,a,b,c);
default:
var G__31003 = null;
if (arguments.length > 6) {
var G__31004__i = 0, G__31004__a = new Array(arguments.length -  6);
while (G__31004__i < G__31004__a.length) {G__31004__a[G__31004__i] = arguments[G__31004__i + 6]; ++G__31004__i;}
G__31003 = new cljs.core.IndexedSeq(G__31004__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__30951,f,a,b,c, G__31003);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31015 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31015) : f.call(null,G__31015));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31016 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31017 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31016,G__31017) : f.call(null,G__31016,G__31017));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31018 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31019 = x;
var G__31020 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31018,G__31019,G__31020) : f.call(null,G__31018,G__31019,G__31020));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31021 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31022 = x;
var G__31023 = y;
var G__31024 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31021,G__31022,G__31023,G__31024) : f.call(null,G__31021,G__31022,G__31023,G__31024));
})());
});
var update__7 = (function() { 
var G__31025__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__31025 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__31026__i = 0, G__31026__a = new Array(arguments.length -  6);
while (G__31026__i < G__31026__a.length) {G__31026__a[G__31026__i] = arguments[G__31026__i + 6]; ++G__31026__i;}
  more = new cljs.core.IndexedSeq(G__31026__a,0);
} 
return G__31025__delegate.call(this,m,k,f,x,y,z,more);};
G__31025.cljs$lang$maxFixedArity = 6;
G__31025.cljs$lang$applyTo = (function (arglist__31027){
var m = cljs.core.first(arglist__31027);
arglist__31027 = cljs.core.next(arglist__31027);
var k = cljs.core.first(arglist__31027);
arglist__31027 = cljs.core.next(arglist__31027);
var f = cljs.core.first(arglist__31027);
arglist__31027 = cljs.core.next(arglist__31027);
var x = cljs.core.first(arglist__31027);
arglist__31027 = cljs.core.next(arglist__31027);
var y = cljs.core.first(arglist__31027);
arglist__31027 = cljs.core.next(arglist__31027);
var z = cljs.core.first(arglist__31027);
var more = cljs.core.rest(arglist__31027);
return G__31025__delegate(m,k,f,x,y,z,more);
});
G__31025.cljs$core$IFn$_invoke$arity$variadic = G__31025__delegate;
return G__31025;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__31028 = null;
if (arguments.length > 6) {
var G__31029__i = 0, G__31029__a = new Array(arguments.length -  6);
while (G__31029__i < G__31029__a.length) {G__31029__a[G__31029__i] = arguments[G__31029__i + 6]; ++G__31029__i;}
G__31028 = new cljs.core.IndexedSeq(G__31029__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__31028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__31030 = (ll - (5));
var G__31031 = r;
ll = G__31030;
ret = G__31031;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__31036 = cljs.core.pv_aget(node,(0));
var G__31037 = (level - (5));
node = G__31036;
level = G__31037;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__31038 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__31039 = (level - (5));
node = G__31038;
level = G__31039;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__31049 = init__$2;
var G__31050 = (j + i);
var G__31051 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31049,G__31050,G__31051) : f.call(null,G__31049,G__31050,G__31051));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__31062 = (j + (1));
var G__31063 = init__$3;
j = G__31062;
init__$2 = G__31063;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31052 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31052) : cljs.core.deref.call(null,G__31052));
} else {
var G__31064 = (i + len);
var G__31065 = init__$2;
i = G__31064;
init__$1 = G__31065;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__31053 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__31053) : cljs.core.tv_editable_root.call(null,G__31053));
})(),(function (){var G__31054 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__31054) : cljs.core.tv_editable_tail.call(null,G__31054));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__31055 = init__$2;
var G__31056 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31055,G__31056) : f.call(null,G__31055,G__31056));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__31066 = (j + (1));
var G__31067 = init__$3;
j = G__31066;
init__$2 = G__31067;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31057 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31057) : cljs.core.deref.call(null,G__31057));
} else {
var G__31068 = (i + len);
var G__31069 = init__$2;
i = G__31068;
init__$1 = G__31069;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__31058 = coll__$1;
var G__31059 = cljs.core.first_array_for_longvec(coll__$1);
var G__31060 = (0);
var G__31061 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31058,G__31059,G__31060,G__31061) : cljs.core.chunked_seq.call(null,G__31058,G__31059,G__31060,G__31061));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__26626__auto___31070 = len;
var i_31071 = (0);
while(true){
if((i_31071 < n__26626__auto___31070)){
(new_tail[i_31071] = (self__.tail[i_31071]));

var G__31072 = (i_31071 + (1));
i_31071 = G__31072;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__31073 = null;
var G__31073__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__31073__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__31073 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31073__2.call(this,self__,k);
case 3:
return G__31073__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31073.cljs$core$IFn$_invoke$arity$2 = G__31073__2;
G__31073.cljs$core$IFn$_invoke$arity$3 = G__31073__3;
return G__31073;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args31048){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31048)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__31074 = (i + (1));
var G__31075 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__31074;
out = G__31075;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31076__i = 0, G__31076__a = new Array(arguments.length -  0);
while (G__31076__i < G__31076__a.length) {G__31076__a[G__31076__i] = arguments[G__31076__i + 0]; ++G__31076__i;}
  args = new cljs.core.IndexedSeq(G__31076__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__31077){
var args = cljs.core.seq(arglist__31077);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__31078 = self__.vec;
var G__31079 = self__.node;
var G__31080 = self__.i;
var G__31081 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31078,G__31079,G__31080,G__31081) : cljs.core.chunked_seq.call(null,G__31078,G__31079,G__31080,G__31081));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__31082 = self__.vec;
var G__31083 = (self__.i + self__.off);
var G__31084 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__31082,G__31083,G__31084) : cljs.core.subvec.call(null,G__31082,G__31083,G__31084));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__31085 = self__.vec;
var G__31086 = (self__.i + self__.off);
var G__31087 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__31085,G__31086,G__31087) : cljs.core.subvec.call(null,G__31085,G__31086,G__31087));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__31088 = self__.vec;
var G__31089 = self__.node;
var G__31090 = self__.i;
var G__31091 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31088,G__31089,G__31090,G__31091) : cljs.core.chunked_seq.call(null,G__31088,G__31089,G__31090,G__31091));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__31092 = self__.vec;
var G__31093 = cljs.core.unchecked_array_for(self__.vec,end);
var G__31094 = end;
var G__31095 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31092,G__31093,G__31094,G__31095) : cljs.core.chunked_seq.call(null,G__31092,G__31093,G__31094,G__31095));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__31096 = self__.vec;
var G__31097 = self__.node;
var G__31098 = self__.i;
var G__31099 = self__.off;
var G__31100 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__31096,G__31097,G__31098,G__31099,G__31100) : cljs.core.chunked_seq.call(null,G__31096,G__31097,G__31098,G__31099,G__31100));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__31101 = self__.vec;
var G__31102 = cljs.core.unchecked_array_for(self__.vec,end);
var G__31103 = end;
var G__31104 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__31101,G__31102,G__31103,G__31104) : cljs.core.chunked_seq.call(null,G__31101,G__31102,G__31103,G__31104));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__31106 = self__.meta;
var G__31107 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__31108 = self__.start;
var G__31109 = (function (){var x__26056__auto__ = self__.end;
var y__26057__auto__ = (v_pos + (1));
return ((x__26056__auto__ > y__26057__auto__) ? x__26056__auto__ : y__26057__auto__);
})();
var G__31110 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31106,G__31107,G__31108,G__31109,G__31110) : cljs.core.build_subvec.call(null,G__31106,G__31107,G__31108,G__31109,G__31110));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__31111 = self__.meta;
var G__31112 = self__.v;
var G__31113 = self__.start;
var G__31114 = (self__.end - (1));
var G__31115 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31111,G__31112,G__31113,G__31114,G__31115) : cljs.core.build_subvec.call(null,G__31111,G__31112,G__31113,G__31114,G__31115));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__31117 = meta__$1;
var G__31118 = self__.v;
var G__31119 = self__.start;
var G__31120 = self__.end;
var G__31121 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31117,G__31118,G__31119,G__31120,G__31121) : cljs.core.build_subvec.call(null,G__31117,G__31118,G__31119,G__31120,G__31121));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31122 = self__.meta;
var G__31123 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__31124 = self__.start;
var G__31125 = (self__.end + (1));
var G__31126 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__31122,G__31123,G__31124,G__31125,G__31126) : cljs.core.build_subvec.call(null,G__31122,G__31123,G__31124,G__31125,G__31126));
});

cljs.core.Subvec.prototype.call = (function() {
var G__31127 = null;
var G__31127__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__31127__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__31127 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31127__2.call(this,self__,k);
case 3:
return G__31127__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31127.cljs$core$IFn$_invoke$arity$2 = G__31127__2;
G__31127.cljs$core$IFn$_invoke$arity$3 = G__31127__3;
return G__31127;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args31105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31105)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__31128 = meta;
var G__31129 = v.v;
var G__31130 = (v.start + start);
var G__31131 = (v.start + end);
var G__31132 = __hash;
meta = G__31128;
v = G__31129;
start = G__31130;
end = G__31131;
__hash = G__31132;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj31139 = {};
return obj31139;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__31147 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__31148 = (level - (5));
node = G__31147;
level = G__31148;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__31152 = null;
var G__31152__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31152__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31152 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31152__2.call(this,self__,k);
case 3:
return G__31152__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31152.cljs$core$IFn$_invoke$arity$2 = G__31152__2;
G__31152.cljs$core$IFn$_invoke$arity$3 = G__31152__3;
return G__31152;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args31149){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31149)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4404__auto__ = cljs.core.next(self__.front);
if(temp__4404__auto__){
var f1 = temp__4404__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__25739__auto__ = self__.front;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__25739__auto__ = self__.rear;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__31153 = (i + incr);
i = G__31153;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__31154 = (i + (1));
var G__31155 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__31154;
out = G__31155;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj31159 = {};
return obj31159;
})();
var l = ks.length;
var i_31160 = (0);
while(true){
if((i_31160 < l)){
var k_31161 = (ks[i_31160]);
(new_obj[k_31161] = (obj[k_31161]));

var G__31162 = (i_31160 + (1));
i_31160 = G__31162;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__25727__auto__ = (function (){var G__31166 = k;
return goog.isString(G__31166);
})();
if(cljs.core.truth_(and__25727__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__25727__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__31167 = init__$1;
var G__31168 = k;
var G__31169 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31167,G__31168,G__31169) : f.call(null,G__31167,G__31168,G__31169));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31170 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31170) : cljs.core.deref.call(null,G__31170));
} else {
var G__31176 = cljs.core.rest(keys__$1);
var G__31177 = init__$2;
keys__$1 = G__31176;
init__$1 = G__31177;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__25727__auto__ = (function (){var G__31172 = k;
return goog.isString(G__31172);
})();
if(cljs.core.truth_(and__25727__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__25727__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__31173 = k;
return goog.isString(G__31173);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__25727__auto__ = (function (){var G__31175 = k;
return goog.isString(G__31175);
})();
if(cljs.core.truth_(and__25727__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__25727__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__31163_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__31163_SHARP_,(self__.strobj[p1__31163_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__31178 = null;
var G__31178__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31178__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31178 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31178__2.call(this,self__,k);
case 3:
return G__31178__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31178.cljs$core$IFn$_invoke$arity$2 = G__31178__2;
G__31178.cljs$core$IFn$_invoke$arity$3 = G__31178__3;
return G__31178;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args31164){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31164)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj31180 = {};
return obj31180;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__31181 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31181,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31181,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__31182 = (i + (2));
i = G__31182;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__31183 = (i + (2));
i = G__31183;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__31184 = (i + (2));
i = G__31184;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__31185 = (i + (2));
i = G__31185;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__31186 = (i + (2));
i = G__31186;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__25739__auto__ = (function (){var G__31190 = k;
return goog.isString(G__31190);
})();
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_31191 = (0);
while(true){
if((i_31191 < l)){
(narr[i_31191] = (arr[i_31191]));

var G__31192 = (i_31191 + (1));
i_31191 = G__31192;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31194 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31194) : cljs.core.keys.call(null,G__31194));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31195 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31195) : cljs.core.vals.call(null,G__31195));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31196 = cljs.core.seq(coll);
var chunk__31197 = null;
var count__31198 = (0);
var i__31199 = (0);
while(true){
if((i__31199 < count__31198)){
var vec__31200 = chunk__31197.cljs$core$IIndexed$_nth$arity$2(null,i__31199);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31200,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31200,(1),null);
var G__31201_31214 = v;
var G__31202_31215 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31201_31214,G__31202_31215) : f.call(null,G__31201_31214,G__31202_31215));

var G__31216 = seq__31196;
var G__31217 = chunk__31197;
var G__31218 = count__31198;
var G__31219 = (i__31199 + (1));
seq__31196 = G__31216;
chunk__31197 = G__31217;
count__31198 = G__31218;
i__31199 = G__31219;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31196);
if(temp__4406__auto__){
var seq__31196__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31196__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31196__$1);
var G__31220 = cljs.core.chunk_rest(seq__31196__$1);
var G__31221 = c__26526__auto__;
var G__31222 = cljs.core.count(c__26526__auto__);
var G__31223 = (0);
seq__31196 = G__31220;
chunk__31197 = G__31221;
count__31198 = G__31222;
i__31199 = G__31223;
continue;
} else {
var vec__31203 = cljs.core.first(seq__31196__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31203,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31203,(1),null);
var G__31204_31224 = v;
var G__31205_31225 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31204_31224,G__31205_31225) : f.call(null,G__31204_31224,G__31205_31225));

var G__31226 = cljs.core.next(seq__31196__$1);
var G__31227 = null;
var G__31228 = (0);
var G__31229 = (0);
seq__31196 = G__31226;
chunk__31197 = G__31227;
count__31198 = G__31228;
i__31199 = G__31229;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__31206 = init__$1;
var G__31207 = (self__.arr[i]);
var G__31208 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31206,G__31207,G__31208) : f.call(null,G__31206,G__31207,G__31208));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31209 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31209) : cljs.core.deref.call(null,G__31209));
} else {
var G__31230 = (i + (2));
var G__31231 = init__$2;
i = G__31230;
init__$1 = G__31231;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__31210 = other;
if(G__31210){
var bit__26413__auto__ = (G__31210.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__26413__auto__) || (G__31210.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__31232 = (i + (2));
i = G__31232;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj31212 = {};
return obj31212;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__31233 = (s + (2));
var G__31234 = d;
s = G__31233;
d = G__31234;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__31235 = (s + (2));
var G__31236 = (d + (2));
s = G__31235;
d = G__31236;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__31213 = cljs.core.aclone(self__.arr);
(G__31213[(idx + (1))] = v);

return G__31213;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31237 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31238 = cljs.core.next(es);
ret = G__31237;
es = G__31238;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__31239 = null;
var G__31239__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31239__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31239 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31239__2.call(this,self__,k);
case 3:
return G__31239__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31239.cljs$core$IFn$_invoke$arity$2 = G__31239__2;
G__31239.cljs$core$IFn$_invoke$arity$3 = G__31239__3;
return G__31239;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args31193){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31193)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__31240 = (i + (2));
var G__31241 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__31240;
ret = G__31241;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__31242_31250 = self__.arr;
G__31242_31250.pop();

G__31242_31250.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__31243 = self__.len;
var G__31244 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__31243,G__31244) : cljs.core.array__GT_transient_hash_map.call(null,G__31243,G__31244));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__31245 = o;
if(G__31245){
var bit__26420__auto__ = (G__31245.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__26420__auto__) || (G__31245.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__31245.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31245);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31245);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__31246 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31246) : cljs.core.key.call(null,G__31246));
})(),(function (){var G__31247 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31247) : cljs.core.val.call(null,G__31247));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__31251 = cljs.core.next(es);
var G__31252 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__31248 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31248) : cljs.core.key.call(null,G__31248));
})(),(function (){var G__31249 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31249) : cljs.core.val.call(null,G__31249));
})());
es = G__31251;
tcoll__$2 = G__31252;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__31253 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__31254 = (i + (2));
out = G__31253;
i = G__31254;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__31257 = cljs.core.aclone(arr);
(G__31257[i] = a);

return G__31257;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__31258 = cljs.core.aclone(arr);
(G__31258[i] = a);

(G__31258[j] = b);

return G__31258;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__31263 = init__$1;
var G__31264 = k;
var G__31265 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31263,G__31264,G__31265) : f.call(null,G__31263,G__31264,G__31265));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31266 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31266) : cljs.core.deref.call(null,G__31266));
} else {
var G__31267 = (i + (2));
var G__31268 = init__$2;
i = G__31267;
init__$1 = G__31268;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31269 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__31269) : cljs.core.create_inode_seq.call(null,G__31269));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_31283 = (0);
var j_31284 = (0);
while(true){
if((i_31283 < (32))){
if((((self__.bitmap >>> i_31283) & (1)) === (0))){
var G__31285 = (i_31283 + (1));
var G__31286 = j_31284;
i_31283 = G__31285;
j_31284 = G__31286;
continue;
} else {
(nodes[i_31283] = ((!(((self__.arr[j_31284]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_31284])),(self__.arr[j_31284]),(self__.arr[(j_31284 + (1))]),added_leaf_QMARK_):(self__.arr[(j_31284 + (1))])));

var G__31287 = (i_31283 + (1));
var G__31288 = (j_31284 + (2));
i_31283 = G__31287;
j_31284 = G__31288;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__31270 = edit__$1;
var G__31271 = (shift + (5));
var G__31272 = key_or_nil;
var G__31273 = val_or_node;
var G__31274 = hash;
var G__31275 = key;
var G__31276 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__31270,G__31271,G__31272,G__31273,G__31274,G__31275,G__31276) : cljs.core.create_node.call(null,G__31270,G__31271,G__31272,G__31273,G__31274,G__31275,G__31276));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_31289 = (0);
var j_31290 = (0);
while(true){
if((i_31289 < (32))){
if((((self__.bitmap >>> i_31289) & (1)) === (0))){
var G__31291 = (i_31289 + (1));
var G__31292 = j_31290;
i_31289 = G__31291;
j_31290 = G__31292;
continue;
} else {
(nodes[i_31289] = ((!(((self__.arr[j_31290]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_31290])),(self__.arr[j_31290]),(self__.arr[(j_31290 + (1))]),added_leaf_QMARK_):(self__.arr[(j_31290 + (1))])));

var G__31293 = (i_31289 + (1));
var G__31294 = (j_31290 + (2));
i_31289 = G__31293;
j_31290 = G__31294;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__31277 = (shift + (5));
var G__31278 = key_or_nil;
var G__31279 = val_or_node;
var G__31280 = hash;
var G__31281 = key;
var G__31282 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__31277,G__31278,G__31279,G__31280,G__31281,G__31282) : cljs.core.create_node.call(null,G__31277,G__31278,G__31279,G__31280,G__31281,G__31282));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__31295 = (i + (1));
var G__31296 = (j + (2));
var G__31297 = (bitmap | ((1) << i));
i = G__31295;
j = G__31296;
bitmap = G__31297;
continue;
} else {
var G__31298 = (i + (1));
var G__31299 = j;
var G__31300 = bitmap;
i = G__31298;
j = G__31299;
bitmap = G__31300;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31301 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__31301) : cljs.core.create_array_node_seq.call(null,G__31301));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31302 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31302) : cljs.core.deref.call(null,G__31302));
} else {
var G__31303 = (i + (1));
var G__31304 = init__$2;
i = G__31303;
init__$1 = G__31304;
continue;
}
} else {
var G__31305 = (i + (1));
var G__31306 = init__$1;
i = G__31305;
init__$1 = G__31306;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__31307 = (i + (2));
i = G__31307;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__31308 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__31308) : cljs.core.create_inode_seq.call(null,G__31308));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__31309 = self__.nodes;
var G__31310 = (self__.i + (2));
var G__31311 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__31309,G__31310,G__31311) : cljs.core.create_inode_seq.call(null,G__31309,G__31310,G__31311));
} else {
var G__31312 = self__.nodes;
var G__31313 = self__.i;
var G__31314 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__31312,G__31313,G__31314) : cljs.core.create_inode_seq.call(null,G__31312,G__31313,G__31314));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4404__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4404__auto__)){
var node = temp__4404__auto__;
var temp__4404__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var node_seq = temp__4404__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__31318 = (j + (2));
j = G__31318;
continue;
}
} else {
var G__31319 = (j + (2));
j = G__31319;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31320 = null;
var G__31321 = self__.nodes;
var G__31322 = self__.i;
var G__31323 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__31320,G__31321,G__31322,G__31323) : cljs.core.create_array_node_seq.call(null,G__31320,G__31321,G__31322,G__31323));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4404__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4404__auto__)){
var nj = temp__4404__auto__;
var temp__4404__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4404__auto____$1)){
var ns = temp__4404__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__31328 = (j + (1));
j = G__31328;
continue;
}
} else {
var G__31329 = (j + (1));
j = G__31329;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31331 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31331) : cljs.core.keys.call(null,G__31331));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31332 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31332) : cljs.core.vals.call(null,G__31332));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31333 = cljs.core.seq(coll);
var chunk__31334 = null;
var count__31335 = (0);
var i__31336 = (0);
while(true){
if((i__31336 < count__31335)){
var vec__31337 = chunk__31334.cljs$core$IIndexed$_nth$arity$2(null,i__31336);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31337,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31337,(1),null);
var G__31338_31349 = v;
var G__31339_31350 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31338_31349,G__31339_31350) : f.call(null,G__31338_31349,G__31339_31350));

var G__31351 = seq__31333;
var G__31352 = chunk__31334;
var G__31353 = count__31335;
var G__31354 = (i__31336 + (1));
seq__31333 = G__31351;
chunk__31334 = G__31352;
count__31335 = G__31353;
i__31336 = G__31354;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31333);
if(temp__4406__auto__){
var seq__31333__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31333__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31333__$1);
var G__31355 = cljs.core.chunk_rest(seq__31333__$1);
var G__31356 = c__26526__auto__;
var G__31357 = cljs.core.count(c__26526__auto__);
var G__31358 = (0);
seq__31333 = G__31355;
chunk__31334 = G__31356;
count__31335 = G__31357;
i__31336 = G__31358;
continue;
} else {
var vec__31340 = cljs.core.first(seq__31333__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31340,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31340,(1),null);
var G__31341_31359 = v;
var G__31342_31360 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31341_31359,G__31342_31360) : f.call(null,G__31341_31359,G__31342_31360));

var G__31361 = cljs.core.next(seq__31333__$1);
var G__31362 = null;
var G__31363 = (0);
var G__31364 = (0);
seq__31333 = G__31361;
chunk__31334 = G__31362;
count__31335 = G__31363;
i__31336 = G__31364;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__31343 = init;
var G__31344 = null;
var G__31345 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31343,G__31344,G__31345) : f.call(null,G__31343,G__31344,G__31345));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31346 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31346) : cljs.core.deref.call(null,G__31346));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj31348 = {};
return obj31348;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31365 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31366 = cljs.core.next(es);
ret = G__31365;
es = G__31366;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__31367 = null;
var G__31367__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31367__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31367 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31367__2.call(this,self__,k);
case 3:
return G__31367__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31367.cljs$core$IFn$_invoke$arity$2 = G__31367__2;
G__31367.cljs$core$IFn$_invoke$arity$3 = G__31367__3;
return G__31367;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args31330){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31330)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__31368 = (i + (1));
var G__31369 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__31368;
out = G__31369;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__31370 = o;
if(G__31370){
var bit__26420__auto__ = (G__31370.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__26420__auto__) || (G__31370.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__31370.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31370);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__31370);
}
})()){
return tcoll.assoc_BANG_((function (){var G__31371 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31371) : cljs.core.key.call(null,G__31371));
})(),(function (){var G__31372 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31372) : cljs.core.val.call(null,G__31372));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4404__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
var G__31375 = cljs.core.next(es);
var G__31376 = tcoll__$1.assoc_BANG_((function (){var G__31373 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31373) : cljs.core.key.call(null,G__31373));
})(),(function (){var G__31374 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__31374) : cljs.core.val.call(null,G__31374));
})());
es = G__31375;
tcoll__$1 = G__31376;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__31377 = ((ascending_QMARK_)?t.left:t.right);
var G__31378 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__31377;
stack__$1 = G__31378;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__31391 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31391) : cljs.core.deref.call(null,G__31391));
} else {
var init__$2 = (function (){var G__31392 = init__$1;
var G__31393 = node.key;
var G__31394 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31392,G__31393,G__31394) : f.call(null,G__31392,G__31393,G__31394));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__31395 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31395) : cljs.core.deref.call(null,G__31395));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__31396 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31396) : cljs.core.deref.call(null,G__31396));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__31398 = null;
var G__31398__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31398__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31398 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31398__2.call(this,self__,k);
case 3:
return G__31398__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31398.cljs$core$IFn$_invoke$arity$2 = G__31398__2;
G__31398.cljs$core$IFn$_invoke$arity$3 = G__31398__3;
return G__31398;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args31397){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31397)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__31400 = null;
var G__31400__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31400__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31400 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31400__2.call(this,self__,k);
case 3:
return G__31400__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31400.cljs$core$IFn$_invoke$arity$2 = G__31400__2;
G__31400.cljs$core$IFn$_invoke$arity$3 = G__31400__3;
return G__31400;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args31399){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31399)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__31413 = k;
var G__31414 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31413,G__31414) : comp.call(null,G__31413,G__31414));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__31433 = k;
var G__31434 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31433,G__31434) : comp.call(null,G__31433,G__31434));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__31445 = k;
var G__31446 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31445,G__31446) : comp.call(null,G__31445,G__31446));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31448 = cljs.core.seq(coll);
var chunk__31449 = null;
var count__31450 = (0);
var i__31451 = (0);
while(true){
if((i__31451 < count__31450)){
var vec__31452 = chunk__31449.cljs$core$IIndexed$_nth$arity$2(null,i__31451);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31452,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31452,(1),null);
var G__31453_31465 = v;
var G__31454_31466 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31453_31465,G__31454_31466) : f.call(null,G__31453_31465,G__31454_31466));

var G__31467 = seq__31448;
var G__31468 = chunk__31449;
var G__31469 = count__31450;
var G__31470 = (i__31451 + (1));
seq__31448 = G__31467;
chunk__31449 = G__31468;
count__31450 = G__31469;
i__31451 = G__31470;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31448);
if(temp__4406__auto__){
var seq__31448__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31448__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31448__$1);
var G__31471 = cljs.core.chunk_rest(seq__31448__$1);
var G__31472 = c__26526__auto__;
var G__31473 = cljs.core.count(c__26526__auto__);
var G__31474 = (0);
seq__31448 = G__31471;
chunk__31449 = G__31472;
count__31450 = G__31473;
i__31451 = G__31474;
continue;
} else {
var vec__31455 = cljs.core.first(seq__31448__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31455,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31455,(1),null);
var G__31456_31475 = v;
var G__31457_31476 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31456_31475,G__31457_31476) : f.call(null,G__31456_31475,G__31457_31476));

var G__31477 = cljs.core.next(seq__31448__$1);
var G__31478 = null;
var G__31479 = (0);
var G__31480 = (0);
seq__31448 = G__31477;
chunk__31449 = G__31478;
count__31450 = G__31479;
i__31451 = G__31480;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31458 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__31458) : cljs.core.keys.call(null,G__31458));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__31459 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__31459) : cljs.core.vals.call(null,G__31459));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__31460 = k;
var G__31461 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__31460,G__31461) : self__.comp.call(null,G__31460,G__31461));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__31481 = t.left;
t = G__31481;
continue;
} else {
var G__31482 = t.right;
t = G__31482;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__31483 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__31484 = cljs.core.next(es);
ret = G__31483;
es = G__31484;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__31485 = null;
var G__31485__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31485__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31485 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31485__2.call(this,self__,k);
case 3:
return G__31485__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31485.cljs$core$IFn$_invoke$arity$2 = G__31485__2;
G__31485.cljs$core$IFn$_invoke$arity$3 = G__31485__3;
return G__31485;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args31447){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31447)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__31462 = k;
var G__31463 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__31462,G__31463) : self__.comp.call(null,G__31462,G__31463));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__31486 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__31487 = t.left;
stack = G__31486;
t = G__31487;
continue;
} else {
var G__31488 = stack;
var G__31489 = t.right;
stack = G__31488;
t = G__31489;
continue;
}
} else {
if((c > (0))){
var G__31490 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__31491 = t.right;
stack = G__31490;
t = G__31491;
continue;
} else {
var G__31492 = stack;
var G__31493 = t.left;
stack = G__31492;
t = G__31493;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__31464 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__31464) : cljs.core.key.call(null,G__31464));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__31494 = cljs.core.nnext(in$);
var G__31495 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31494;
out = G__31495;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31496__i = 0, G__31496__a = new Array(arguments.length -  0);
while (G__31496__i < G__31496__a.length) {G__31496__a[G__31496__i] = arguments[G__31496__i + 0]; ++G__31496__i;}
  keyvals = new cljs.core.IndexedSeq(G__31496__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__31497){
var keyvals = cljs.core.seq(arglist__31497);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31498__i = 0, G__31498__a = new Array(arguments.length -  0);
while (G__31498__i < G__31498__a.length) {G__31498__a[G__31498__i] = arguments[G__31498__i + 0]; ++G__31498__i;}
  keyvals = new cljs.core.IndexedSeq(G__31498__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__31499){
var keyvals = cljs.core.seq(arglist__31499);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj31503 = {};
return obj31503;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__31504 = cljs.core.nnext(kvs);
kvs = G__31504;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31505__i = 0, G__31505__a = new Array(arguments.length -  0);
while (G__31505__i < G__31505__a.length) {G__31505__a[G__31505__i] = arguments[G__31505__i + 0]; ++G__31505__i;}
  keyvals = new cljs.core.IndexedSeq(G__31505__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__31506){
var keyvals = cljs.core.seq(arglist__31506);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__31507 = cljs.core.nnext(in$);
var G__31508 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31507;
out = G__31508;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31509__i = 0, G__31509__a = new Array(arguments.length -  0);
while (G__31509__i < G__31509__a.length) {G__31509__a[G__31509__i] = arguments[G__31509__i + 0]; ++G__31509__i;}
  keyvals = new cljs.core.IndexedSeq(G__31509__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__31510){
var keyvals = cljs.core.seq(arglist__31510);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__31511 = cljs.core.nnext(in$);
var G__31512 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__31511;
out = G__31512;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__31513__i = 0, G__31513__a = new Array(arguments.length -  1);
while (G__31513__i < G__31513__a.length) {G__31513__a[G__31513__i] = arguments[G__31513__i + 1]; ++G__31513__i;}
  keyvals = new cljs.core.IndexedSeq(G__31513__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__31514){
var comparator = cljs.core.first(arglist__31514);
var keyvals = cljs.core.rest(arglist__31514);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31515 = self__.mseq;
if(G__31515){
var bit__26420__auto__ = (G__31515.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__26420__auto__) || (G__31515.cljs$core$INext$)){
return true;
} else {
if((!G__31515.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31515);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31515);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31516 = self__.mseq;
if(G__31516){
var bit__26420__auto__ = (G__31516.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__26420__auto__) || (G__31516.cljs$core$INext$)){
return true;
} else {
if((!G__31516.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31516);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31516);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31517 = self__.mseq;
if(G__31517){
var bit__26420__auto__ = (G__31517.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__26420__auto__) || (G__31517.cljs$core$INext$)){
return true;
} else {
if((!G__31517.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31517);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31517);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__31518 = self__.mseq;
if(G__31518){
var bit__26420__auto__ = (G__31518.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__26420__auto__) || (G__31518.cljs$core$INext$)){
return true;
} else {
if((!G__31518.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31518);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__31518);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4406__auto__ = cljs.core.seq(hash_map);
if(temp__4406__auto__){
var mseq = temp__4406__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__31519_SHARP_,p2__31520_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__25739__auto__ = p1__31519_SHARP_;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__31520_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__31521__i = 0, G__31521__a = new Array(arguments.length -  0);
while (G__31521__i < G__31521__a.length) {G__31521__a[G__31521__i] = arguments[G__31521__i + 0]; ++G__31521__i;}
  maps = new cljs.core.IndexedSeq(G__31521__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__31522){
var maps = cljs.core.seq(arglist__31522);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__31525 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__31526 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31525,G__31526) : f.call(null,G__31525,G__31526));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__25739__auto__ = m1;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__31527__i = 0, G__31527__a = new Array(arguments.length -  1);
while (G__31527__i < G__31527__a.length) {G__31527__a[G__31527__i] = arguments[G__31527__i + 1]; ++G__31527__i;}
  maps = new cljs.core.IndexedSeq(G__31527__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__31528){
var f = cljs.core.first(arglist__31528);
var maps = cljs.core.rest(arglist__31528);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__31529 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__31530 = cljs.core.next(keys);
ret = G__31529;
keys = G__31530;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31533 = cljs.core.seq(coll);
var chunk__31534 = null;
var count__31535 = (0);
var i__31536 = (0);
while(true){
if((i__31536 < count__31535)){
var vec__31537 = chunk__31534.cljs$core$IIndexed$_nth$arity$2(null,i__31536);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31537,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31537,(1),null);
var G__31538_31543 = v;
var G__31539_31544 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31538_31543,G__31539_31544) : f.call(null,G__31538_31543,G__31539_31544));

var G__31545 = seq__31533;
var G__31546 = chunk__31534;
var G__31547 = count__31535;
var G__31548 = (i__31536 + (1));
seq__31533 = G__31545;
chunk__31534 = G__31546;
count__31535 = G__31547;
i__31536 = G__31548;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31533);
if(temp__4406__auto__){
var seq__31533__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31533__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31533__$1);
var G__31549 = cljs.core.chunk_rest(seq__31533__$1);
var G__31550 = c__26526__auto__;
var G__31551 = cljs.core.count(c__26526__auto__);
var G__31552 = (0);
seq__31533 = G__31549;
chunk__31534 = G__31550;
count__31535 = G__31551;
i__31536 = G__31552;
continue;
} else {
var vec__31540 = cljs.core.first(seq__31533__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31540,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31540,(1),null);
var G__31541_31553 = v;
var G__31542_31554 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31541_31553,G__31542_31554) : f.call(null,G__31541_31553,G__31542_31554));

var G__31555 = cljs.core.next(seq__31533__$1);
var G__31556 = null;
var G__31557 = (0);
var G__31558 = (0);
seq__31533 = G__31555;
chunk__31534 = G__31556;
count__31535 = G__31557;
i__31536 = G__31558;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__31531_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__31531_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__31559 = null;
var G__31559__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31559__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31559 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31559__2.call(this,self__,k);
case 3:
return G__31559__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31559.cljs$core$IFn$_invoke$arity$2 = G__31559__2;
G__31559.cljs$core$IFn$_invoke$arity$3 = G__31559__3;
return G__31559;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args31532){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31532)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__31560 = (i + (1));
var G__31561 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__31560;
out = G__31561;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__31562 = (i + (1));
var G__31563 = cljs.core._conj_BANG_(out,(items[i]));
i = G__31562;
out = G__31563;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__31565 = null;
var G__31565__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__31565__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__31565 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31565__2.call(this,self__,k);
case 3:
return G__31565__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31565.cljs$core$IFn$_invoke$arity$2 = G__31565__2;
G__31565.cljs$core$IFn$_invoke$arity$3 = G__31565__3;
return G__31565;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args31564){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31564)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__31568 = cljs.core.seq(coll);
var chunk__31569 = null;
var count__31570 = (0);
var i__31571 = (0);
while(true){
if((i__31571 < count__31570)){
var vec__31572 = chunk__31569.cljs$core$IIndexed$_nth$arity$2(null,i__31571);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31572,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31572,(1),null);
var G__31573_31578 = v;
var G__31574_31579 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31573_31578,G__31574_31579) : f.call(null,G__31573_31578,G__31574_31579));

var G__31580 = seq__31568;
var G__31581 = chunk__31569;
var G__31582 = count__31570;
var G__31583 = (i__31571 + (1));
seq__31568 = G__31580;
chunk__31569 = G__31581;
count__31570 = G__31582;
i__31571 = G__31583;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31568);
if(temp__4406__auto__){
var seq__31568__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31568__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31568__$1);
var G__31584 = cljs.core.chunk_rest(seq__31568__$1);
var G__31585 = c__26526__auto__;
var G__31586 = cljs.core.count(c__26526__auto__);
var G__31587 = (0);
seq__31568 = G__31584;
chunk__31569 = G__31585;
count__31570 = G__31586;
i__31571 = G__31587;
continue;
} else {
var vec__31575 = cljs.core.first(seq__31568__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31575,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31575,(1),null);
var G__31576_31588 = v;
var G__31577_31589 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31576_31588,G__31577_31589) : f.call(null,G__31576_31588,G__31577_31589));

var G__31590 = cljs.core.next(seq__31568__$1);
var G__31591 = null;
var G__31592 = (0);
var G__31593 = (0);
seq__31568 = G__31590;
chunk__31569 = G__31591;
count__31570 = G__31592;
i__31571 = G__31593;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__31566_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__31566_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__31594 = null;
var G__31594__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__31594__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__31594 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__31594__2.call(this,self__,k);
case 3:
return G__31594__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31594.cljs$core$IFn$_invoke$arity$2 = G__31594__2;
G__31594.cljs$core$IFn$_invoke$arity$3 = G__31594__3;
return G__31594;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args31567){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31567)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__26620__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__26620__auto__.length)){
var G__31595 = (i + (1));
var G__31596 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__31595;
res = G__31596;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__31597 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__31598 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__31597;
out = G__31598;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__31599__delegate = function (keys){
return cljs.core.set(keys);
};
var G__31599 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__31600__i = 0, G__31600__a = new Array(arguments.length -  0);
while (G__31600__i < G__31600__a.length) {G__31600__a[G__31600__i] = arguments[G__31600__i + 0]; ++G__31600__i;}
  keys = new cljs.core.IndexedSeq(G__31600__a,0);
} 
return G__31599__delegate.call(this,keys);};
G__31599.cljs$lang$maxFixedArity = 0;
G__31599.cljs$lang$applyTo = (function (arglist__31601){
var keys = cljs.core.seq(arglist__31601);
return G__31599__delegate(keys);
});
G__31599.cljs$core$IFn$_invoke$arity$variadic = G__31599__delegate;
return G__31599;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__31602 = null;
if (arguments.length > 0) {
var G__31603__i = 0, G__31603__a = new Array(arguments.length -  0);
while (G__31603__i < G__31603__a.length) {G__31603__a[G__31603__i] = arguments[G__31603__i + 0]; ++G__31603__i;}
G__31602 = new cljs.core.IndexedSeq(G__31603__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__31602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__31604__i = 0, G__31604__a = new Array(arguments.length -  0);
while (G__31604__i < G__31604__a.length) {G__31604__a[G__31604__i] = arguments[G__31604__i + 0]; ++G__31604__i;}
  keys = new cljs.core.IndexedSeq(G__31604__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__31605){
var keys = cljs.core.seq(arglist__31605);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__31606__i = 0, G__31606__a = new Array(arguments.length -  1);
while (G__31606__i < G__31606__a.length) {G__31606__a[G__31606__i] = arguments[G__31606__i + 1]; ++G__31606__i;}
  keys = new cljs.core.IndexedSeq(G__31606__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__31607){
var comparator = cljs.core.first(arglist__31607);
var keys = cljs.core.rest(arglist__31607);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__31608_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__31608_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.val(e);
} else {
return p1__31608_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4404__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__31609_SHARP_){
var temp__4404__auto__ = cljs.core.find(smap,p1__31609_SHARP_);
if(cljs.core.truth_(temp__4404__auto__)){
var e = temp__4404__auto__;
return cljs.core.second(e);
} else {
return p1__31609_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__31620,seen__$1){
while(true){
var vec__31621 = p__31620;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31621,(0),null);
var xs__$1 = vec__31621;
var temp__4406__auto__ = cljs.core.seq(xs__$1);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__31622 = cljs.core.rest(s);
var G__31623 = seen__$1;
p__31620 = G__31622;
seen__$1 = G__31623;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__31624 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__31625 = cljs.core.next(s__$1);
ret = G__31624;
s__$1 = G__31625;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__31627 = x;
if(G__31627){
var bit__26413__auto__ = (G__31627.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__26413__auto__) || (G__31627.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__31628 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__31629 = cljs.core.next(ks);
var G__31630 = cljs.core.next(vs);
map = G__31628;
ks = G__31629;
vs = G__31630;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__31641 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31641) : k.call(null,G__31641));
})() > (function (){var G__31642 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31642) : k.call(null,G__31642));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__31643__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31631_SHARP_,p2__31632_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__31631_SHARP_,p2__31632_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__31643 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__31644__i = 0, G__31644__a = new Array(arguments.length -  3);
while (G__31644__i < G__31644__a.length) {G__31644__a[G__31644__i] = arguments[G__31644__i + 3]; ++G__31644__i;}
  more = new cljs.core.IndexedSeq(G__31644__a,0);
} 
return G__31643__delegate.call(this,k,x,y,more);};
G__31643.cljs$lang$maxFixedArity = 3;
G__31643.cljs$lang$applyTo = (function (arglist__31645){
var k = cljs.core.first(arglist__31645);
arglist__31645 = cljs.core.next(arglist__31645);
var x = cljs.core.first(arglist__31645);
arglist__31645 = cljs.core.next(arglist__31645);
var y = cljs.core.first(arglist__31645);
var more = cljs.core.rest(arglist__31645);
return G__31643__delegate(k,x,y,more);
});
G__31643.cljs$core$IFn$_invoke$arity$variadic = G__31643__delegate;
return G__31643;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__31646 = null;
if (arguments.length > 3) {
var G__31647__i = 0, G__31647__a = new Array(arguments.length -  3);
while (G__31647__i < G__31647__a.length) {G__31647__a[G__31647__i] = arguments[G__31647__i + 3]; ++G__31647__i;}
G__31646 = new cljs.core.IndexedSeq(G__31647__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__31646);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__31658 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31658) : k.call(null,G__31658));
})() < (function (){var G__31659 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__31659) : k.call(null,G__31659));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__31660__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__31648_SHARP_,p2__31649_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__31648_SHARP_,p2__31649_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__31660 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__31661__i = 0, G__31661__a = new Array(arguments.length -  3);
while (G__31661__i < G__31661__a.length) {G__31661__a[G__31661__i] = arguments[G__31661__i + 3]; ++G__31661__i;}
  more = new cljs.core.IndexedSeq(G__31661__a,0);
} 
return G__31660__delegate.call(this,k,x,y,more);};
G__31660.cljs$lang$maxFixedArity = 3;
G__31660.cljs$lang$applyTo = (function (arglist__31662){
var k = cljs.core.first(arglist__31662);
arglist__31662 = cljs.core.next(arglist__31662);
var x = cljs.core.first(arglist__31662);
arglist__31662 = cljs.core.next(arglist__31662);
var y = cljs.core.first(arglist__31662);
var more = cljs.core.rest(arglist__31662);
return G__31660__delegate(k,x,y,more);
});
G__31660.cljs$core$IFn$_invoke$arity$variadic = G__31660__delegate;
return G__31660;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__31663 = null;
if (arguments.length > 3) {
var G__31664__i = 0, G__31664__a = new Array(arguments.length -  3);
while (G__31664__i < G__31664__a.length) {G__31664__a[G__31664__i] = arguments[G__31664__i + 3]; ++G__31664__i;}
G__31663 = new cljs.core.IndexedSeq(G__31664__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__31663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__31681 = null;
var G__31681__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31681__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__31676 = result;
var G__31677 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31676,G__31677) : rf.call(null,G__31676,G__31677));
})());
})());
var G__31678 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31678) : rf.call(null,G__31678));
});
var G__31681__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__31679 = result;
var G__31680 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31679,G__31680) : rf.call(null,G__31679,G__31680));
} else {
return result;
}
});
G__31681 = function(result,input){
switch(arguments.length){
case 0:
return G__31681__0.call(this);
case 1:
return G__31681__1.call(this,result);
case 2:
return G__31681__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31681.cljs$core$IFn$_invoke$arity$0 = G__31681__0;
G__31681.cljs$core$IFn$_invoke$arity$1 = G__31681__1;
G__31681.cljs$core$IFn$_invoke$arity$2 = G__31681__2;
return G__31681;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__31694 = null;
var G__31694__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31694__1 = (function (result){
var G__31689 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31689) : rf.call(null,G__31689));
});
var G__31694__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__31690 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31690) : pred.call(null,G__31690));
})())){
var G__31691 = result;
var G__31692 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31691,G__31692) : rf.call(null,G__31691,G__31692));
} else {
return cljs.core.reduced(result);
}
});
G__31694 = function(result,input){
switch(arguments.length){
case 0:
return G__31694__0.call(this);
case 1:
return G__31694__1.call(this,result);
case 2:
return G__31694__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31694.cljs$core$IFn$_invoke$arity$0 = G__31694__0;
G__31694.cljs$core$IFn$_invoke$arity$1 = G__31694__1;
G__31694.cljs$core$IFn$_invoke$arity$2 = G__31694__2;
return G__31694;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
if(cljs.core.truth_((function (){var G__31693 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31693) : pred.call(null,G__31693));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__31699 = (function (){var G__31701 = cljs.core._entry_key(sc,e);
var G__31702 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__31701,G__31702) : comp.call(null,G__31701,G__31702));
})();
var G__31700 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__31699,G__31700) : test.call(null,G__31699,G__31700));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31706 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31706,(0),null);
var s = vec__31706;
if(cljs.core.truth_((function (){var G__31707 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__31707) : include.call(null,G__31707));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31708 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31708,(0),null);
var s = vec__31708;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31712 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31712,(0),null);
var s = vec__31712;
if(cljs.core.truth_((function (){var G__31713 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__31713) : include.call(null,G__31713));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4406__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4406__auto__)){
var vec__31714 = temp__4406__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31714,(0),null);
var s = vec__31714;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__31715 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__31715) : Math.ceil.call(null,G__31715));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__26160__auto__ = self__.__hash;
if(!((h__26160__auto__ == null))){
return h__26160__auto__;
} else {
var h__26160__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__26160__auto____$1;

return h__26160__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__31716 = ret;
var G__31717 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31716,G__31717) : f.call(null,G__31716,G__31717));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__31718 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31718) : cljs.core.deref.call(null,G__31718));
} else {
var G__31719 = (i + self__.step);
var G__31720 = ret__$1;
i = G__31719;
ret = G__31720;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__31738 = null;
var G__31738__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31738__1 = (function (result){
var G__31735 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31735) : rf.call(null,G__31735));
});
var G__31738__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__31736 = result;
var G__31737 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31736,G__31737) : rf.call(null,G__31736,G__31737));
} else {
return result;
}
});
G__31738 = function(result,input){
switch(arguments.length){
case 0:
return G__31738__0.call(this);
case 1:
return G__31738__1.call(this,result);
case 2:
return G__31738__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31738.cljs$core$IFn$_invoke$arity$0 = G__31738__0;
G__31738.cljs$core$IFn$_invoke$arity$1 = G__31738__1;
G__31738.cljs$core$IFn$_invoke$arity$2 = G__31738__2;
return G__31738;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__31760 = null;
var G__31760__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31760__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__31751 = result;
var G__31752 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31751,G__31752) : rf.call(null,G__31751,G__31752));
})());
})());
var G__31753 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31753) : rf.call(null,G__31753));
});
var G__31760__2 = (function (result,input){
var pval = (function (){var G__31754 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31754) : cljs.core.deref.call(null,G__31754));
})();
var val = (function (){var G__31755 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31755) : f.call(null,G__31755));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__31756 = result;
var G__31757 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31756,G__31757) : rf.call(null,G__31756,G__31757));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__31760 = function(result,input){
switch(arguments.length){
case 0:
return G__31760__0.call(this);
case 1:
return G__31760__1.call(this,result);
case 2:
return G__31760__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31760.cljs$core$IFn$_invoke$arity$0 = G__31760__0;
G__31760.cljs$core$IFn$_invoke$arity$1 = G__31760__1;
G__31760.cljs$core$IFn$_invoke$arity$2 = G__31760__2;
return G__31760;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__31758 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31758) : f.call(null,G__31758));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4406__auto__){
return (function (p1__31739_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__31759 = p1__31739_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31759) : f.call(null,G__31759));
})());
});})(fst,fv,s,temp__4406__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4404__auto__ = cljs.core.seq(coll);
if(temp__4404__auto__){
var s = temp__4404__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4406__auto__ = cljs.core.seq(coll);
if(temp__4406__auto__){
var s = temp__4406__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__31769 = init;
var G__31770 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31769,G__31770) : f.call(null,G__31769,G__31770));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__31865 = null;
var G__31865__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__31865__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31823 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31823) : f.call(null,G__31823));
})()],null));
});
var G__31865__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31824 = x;
var G__31825 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31824,G__31825) : f.call(null,G__31824,G__31825));
})()],null));
});
var G__31865__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31826 = x;
var G__31827 = y;
var G__31828 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31826,G__31827,G__31828) : f.call(null,G__31826,G__31827,G__31828));
})()],null));
});
var G__31865__4 = (function() { 
var G__31866__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__31866 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31867__i = 0, G__31867__a = new Array(arguments.length -  3);
while (G__31867__i < G__31867__a.length) {G__31867__a[G__31867__i] = arguments[G__31867__i + 3]; ++G__31867__i;}
  args = new cljs.core.IndexedSeq(G__31867__a,0);
} 
return G__31866__delegate.call(this,x,y,z,args);};
G__31866.cljs$lang$maxFixedArity = 3;
G__31866.cljs$lang$applyTo = (function (arglist__31868){
var x = cljs.core.first(arglist__31868);
arglist__31868 = cljs.core.next(arglist__31868);
var y = cljs.core.first(arglist__31868);
arglist__31868 = cljs.core.next(arglist__31868);
var z = cljs.core.first(arglist__31868);
var args = cljs.core.rest(arglist__31868);
return G__31866__delegate(x,y,z,args);
});
G__31866.cljs$core$IFn$_invoke$arity$variadic = G__31866__delegate;
return G__31866;
})()
;
G__31865 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31865__0.call(this);
case 1:
return G__31865__1.call(this,x);
case 2:
return G__31865__2.call(this,x,y);
case 3:
return G__31865__3.call(this,x,y,z);
default:
var G__31869 = null;
if (arguments.length > 3) {
var G__31870__i = 0, G__31870__a = new Array(arguments.length -  3);
while (G__31870__i < G__31870__a.length) {G__31870__a[G__31870__i] = arguments[G__31870__i + 3]; ++G__31870__i;}
G__31869 = new cljs.core.IndexedSeq(G__31870__a,0);
}
return G__31865__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31869);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31865.cljs$lang$maxFixedArity = 3;
G__31865.cljs$lang$applyTo = G__31865__4.cljs$lang$applyTo;
G__31865.cljs$core$IFn$_invoke$arity$0 = G__31865__0;
G__31865.cljs$core$IFn$_invoke$arity$1 = G__31865__1;
G__31865.cljs$core$IFn$_invoke$arity$2 = G__31865__2;
G__31865.cljs$core$IFn$_invoke$arity$3 = G__31865__3;
G__31865.cljs$core$IFn$_invoke$arity$variadic = G__31865__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31865;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__31871 = null;
var G__31871__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__31871__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31829 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31829) : f.call(null,G__31829));
})(),(function (){var G__31830 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31830) : g.call(null,G__31830));
})()],null));
});
var G__31871__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31831 = x;
var G__31832 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31831,G__31832) : f.call(null,G__31831,G__31832));
})(),(function (){var G__31833 = x;
var G__31834 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31833,G__31834) : g.call(null,G__31833,G__31834));
})()],null));
});
var G__31871__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31835 = x;
var G__31836 = y;
var G__31837 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31835,G__31836,G__31837) : f.call(null,G__31835,G__31836,G__31837));
})(),(function (){var G__31838 = x;
var G__31839 = y;
var G__31840 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31838,G__31839,G__31840) : g.call(null,G__31838,G__31839,G__31840));
})()],null));
});
var G__31871__4 = (function() { 
var G__31872__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__31872 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31873__i = 0, G__31873__a = new Array(arguments.length -  3);
while (G__31873__i < G__31873__a.length) {G__31873__a[G__31873__i] = arguments[G__31873__i + 3]; ++G__31873__i;}
  args = new cljs.core.IndexedSeq(G__31873__a,0);
} 
return G__31872__delegate.call(this,x,y,z,args);};
G__31872.cljs$lang$maxFixedArity = 3;
G__31872.cljs$lang$applyTo = (function (arglist__31874){
var x = cljs.core.first(arglist__31874);
arglist__31874 = cljs.core.next(arglist__31874);
var y = cljs.core.first(arglist__31874);
arglist__31874 = cljs.core.next(arglist__31874);
var z = cljs.core.first(arglist__31874);
var args = cljs.core.rest(arglist__31874);
return G__31872__delegate(x,y,z,args);
});
G__31872.cljs$core$IFn$_invoke$arity$variadic = G__31872__delegate;
return G__31872;
})()
;
G__31871 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31871__0.call(this);
case 1:
return G__31871__1.call(this,x);
case 2:
return G__31871__2.call(this,x,y);
case 3:
return G__31871__3.call(this,x,y,z);
default:
var G__31875 = null;
if (arguments.length > 3) {
var G__31876__i = 0, G__31876__a = new Array(arguments.length -  3);
while (G__31876__i < G__31876__a.length) {G__31876__a[G__31876__i] = arguments[G__31876__i + 3]; ++G__31876__i;}
G__31875 = new cljs.core.IndexedSeq(G__31876__a,0);
}
return G__31871__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31871.cljs$lang$maxFixedArity = 3;
G__31871.cljs$lang$applyTo = G__31871__4.cljs$lang$applyTo;
G__31871.cljs$core$IFn$_invoke$arity$0 = G__31871__0;
G__31871.cljs$core$IFn$_invoke$arity$1 = G__31871__1;
G__31871.cljs$core$IFn$_invoke$arity$2 = G__31871__2;
G__31871.cljs$core$IFn$_invoke$arity$3 = G__31871__3;
G__31871.cljs$core$IFn$_invoke$arity$variadic = G__31871__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31871;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__31877 = null;
var G__31877__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__31877__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31841 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31841) : f.call(null,G__31841));
})(),(function (){var G__31842 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31842) : g.call(null,G__31842));
})(),(function (){var G__31843 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__31843) : h.call(null,G__31843));
})()],null));
});
var G__31877__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31844 = x;
var G__31845 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31844,G__31845) : f.call(null,G__31844,G__31845));
})(),(function (){var G__31846 = x;
var G__31847 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31846,G__31847) : g.call(null,G__31846,G__31847));
})(),(function (){var G__31848 = x;
var G__31849 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__31848,G__31849) : h.call(null,G__31848,G__31849));
})()],null));
});
var G__31877__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__31850 = x;
var G__31851 = y;
var G__31852 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31850,G__31851,G__31852) : f.call(null,G__31850,G__31851,G__31852));
})(),(function (){var G__31853 = x;
var G__31854 = y;
var G__31855 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31853,G__31854,G__31855) : g.call(null,G__31853,G__31854,G__31855));
})(),(function (){var G__31856 = x;
var G__31857 = y;
var G__31858 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__31856,G__31857,G__31858) : h.call(null,G__31856,G__31857,G__31858));
})()],null));
});
var G__31877__4 = (function() { 
var G__31878__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__31878 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31879__i = 0, G__31879__a = new Array(arguments.length -  3);
while (G__31879__i < G__31879__a.length) {G__31879__a[G__31879__i] = arguments[G__31879__i + 3]; ++G__31879__i;}
  args = new cljs.core.IndexedSeq(G__31879__a,0);
} 
return G__31878__delegate.call(this,x,y,z,args);};
G__31878.cljs$lang$maxFixedArity = 3;
G__31878.cljs$lang$applyTo = (function (arglist__31880){
var x = cljs.core.first(arglist__31880);
arglist__31880 = cljs.core.next(arglist__31880);
var y = cljs.core.first(arglist__31880);
arglist__31880 = cljs.core.next(arglist__31880);
var z = cljs.core.first(arglist__31880);
var args = cljs.core.rest(arglist__31880);
return G__31878__delegate(x,y,z,args);
});
G__31878.cljs$core$IFn$_invoke$arity$variadic = G__31878__delegate;
return G__31878;
})()
;
G__31877 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31877__0.call(this);
case 1:
return G__31877__1.call(this,x);
case 2:
return G__31877__2.call(this,x,y);
case 3:
return G__31877__3.call(this,x,y,z);
default:
var G__31881 = null;
if (arguments.length > 3) {
var G__31882__i = 0, G__31882__a = new Array(arguments.length -  3);
while (G__31882__i < G__31882__a.length) {G__31882__a[G__31882__i] = arguments[G__31882__i + 3]; ++G__31882__i;}
G__31881 = new cljs.core.IndexedSeq(G__31882__a,0);
}
return G__31877__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31877.cljs$lang$maxFixedArity = 3;
G__31877.cljs$lang$applyTo = G__31877__4.cljs$lang$applyTo;
G__31877.cljs$core$IFn$_invoke$arity$0 = G__31877__0;
G__31877.cljs$core$IFn$_invoke$arity$1 = G__31877__1;
G__31877.cljs$core$IFn$_invoke$arity$2 = G__31877__2;
G__31877.cljs$core$IFn$_invoke$arity$3 = G__31877__3;
G__31877.cljs$core$IFn$_invoke$arity$variadic = G__31877__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31877;
})()
});
var juxt__4 = (function() { 
var G__31883__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__31884 = null;
var G__31884__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31771_SHARP_,p2__31772_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31771_SHARP_,(function (){return (p2__31772_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__31772_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__31772_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31884__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31773_SHARP_,p2__31774_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31773_SHARP_,(function (){var G__31859 = x;
return (p2__31774_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__31774_SHARP_.cljs$core$IFn$_invoke$arity$1(G__31859) : p2__31774_SHARP_.call(null,G__31859));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31884__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31775_SHARP_,p2__31776_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31775_SHARP_,(function (){var G__31860 = x;
var G__31861 = y;
return (p2__31776_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__31776_SHARP_.cljs$core$IFn$_invoke$arity$2(G__31860,G__31861) : p2__31776_SHARP_.call(null,G__31860,G__31861));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31884__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31777_SHARP_,p2__31778_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31777_SHARP_,(function (){var G__31862 = x;
var G__31863 = y;
var G__31864 = z;
return (p2__31778_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__31778_SHARP_.cljs$core$IFn$_invoke$arity$3(G__31862,G__31863,G__31864) : p2__31778_SHARP_.call(null,G__31862,G__31863,G__31864));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__31884__4 = (function() { 
var G__31885__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__31779_SHARP_,p2__31780_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__31779_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__31780_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__31885 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31886__i = 0, G__31886__a = new Array(arguments.length -  3);
while (G__31886__i < G__31886__a.length) {G__31886__a[G__31886__i] = arguments[G__31886__i + 3]; ++G__31886__i;}
  args = new cljs.core.IndexedSeq(G__31886__a,0);
} 
return G__31885__delegate.call(this,x,y,z,args);};
G__31885.cljs$lang$maxFixedArity = 3;
G__31885.cljs$lang$applyTo = (function (arglist__31887){
var x = cljs.core.first(arglist__31887);
arglist__31887 = cljs.core.next(arglist__31887);
var y = cljs.core.first(arglist__31887);
arglist__31887 = cljs.core.next(arglist__31887);
var z = cljs.core.first(arglist__31887);
var args = cljs.core.rest(arglist__31887);
return G__31885__delegate(x,y,z,args);
});
G__31885.cljs$core$IFn$_invoke$arity$variadic = G__31885__delegate;
return G__31885;
})()
;
G__31884 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31884__0.call(this);
case 1:
return G__31884__1.call(this,x);
case 2:
return G__31884__2.call(this,x,y);
case 3:
return G__31884__3.call(this,x,y,z);
default:
var G__31888 = null;
if (arguments.length > 3) {
var G__31889__i = 0, G__31889__a = new Array(arguments.length -  3);
while (G__31889__i < G__31889__a.length) {G__31889__a[G__31889__i] = arguments[G__31889__i + 3]; ++G__31889__i;}
G__31888 = new cljs.core.IndexedSeq(G__31889__a,0);
}
return G__31884__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31884.cljs$lang$maxFixedArity = 3;
G__31884.cljs$lang$applyTo = G__31884__4.cljs$lang$applyTo;
G__31884.cljs$core$IFn$_invoke$arity$0 = G__31884__0;
G__31884.cljs$core$IFn$_invoke$arity$1 = G__31884__1;
G__31884.cljs$core$IFn$_invoke$arity$2 = G__31884__2;
G__31884.cljs$core$IFn$_invoke$arity$3 = G__31884__3;
G__31884.cljs$core$IFn$_invoke$arity$variadic = G__31884__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31884;
})()
;})(fs__$1))
};
var G__31883 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__31890__i = 0, G__31890__a = new Array(arguments.length -  3);
while (G__31890__i < G__31890__a.length) {G__31890__a[G__31890__i] = arguments[G__31890__i + 3]; ++G__31890__i;}
  fs = new cljs.core.IndexedSeq(G__31890__a,0);
} 
return G__31883__delegate.call(this,f,g,h,fs);};
G__31883.cljs$lang$maxFixedArity = 3;
G__31883.cljs$lang$applyTo = (function (arglist__31891){
var f = cljs.core.first(arglist__31891);
arglist__31891 = cljs.core.next(arglist__31891);
var g = cljs.core.first(arglist__31891);
arglist__31891 = cljs.core.next(arglist__31891);
var h = cljs.core.first(arglist__31891);
var fs = cljs.core.rest(arglist__31891);
return G__31883__delegate(f,g,h,fs);
});
G__31883.cljs$core$IFn$_invoke$arity$variadic = G__31883__delegate;
return G__31883;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__31892 = null;
if (arguments.length > 3) {
var G__31893__i = 0, G__31893__a = new Array(arguments.length -  3);
while (G__31893__i < G__31893__a.length) {G__31893__a[G__31893__i] = arguments[G__31893__i + 3]; ++G__31893__i;}
G__31892 = new cljs.core.IndexedSeq(G__31893__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__31892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__31894 = cljs.core.next(coll);
coll = G__31894;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__31895 = (n - (1));
var G__31896 = cljs.core.next(coll);
n = G__31895;
coll = G__31896;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__31900 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31900,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31900,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31900,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_31908 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__31909_31915 = cljs.core.first(coll);
var G__31910_31916 = writer;
var G__31911_31917 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31909_31915,G__31910_31916,G__31911_31917) : print_one.call(null,G__31909_31915,G__31910_31916,G__31911_31917));
} else {
}

var coll_31918__$1 = cljs.core.next(coll);
var n_31919 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_31918__$1) && (((n_31919 == null)) || (!((n_31919 === (0)))))){
cljs.core._write(writer,sep);

var G__31912_31920 = cljs.core.first(coll_31918__$1);
var G__31913_31921 = writer;
var G__31914_31922 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__31912_31920,G__31913_31921,G__31914_31922) : print_one.call(null,G__31912_31920,G__31913_31921,G__31914_31922));

var G__31923 = cljs.core.next(coll_31918__$1);
var G__31924 = (n_31919 - (1));
coll_31918__$1 = G__31923;
n_31919 = G__31924;
continue;
} else {
if((cljs.core.seq(coll_31918__$1)) && ((n_31919 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_31908;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__31929 = cljs.core.seq(ss);
var chunk__31930 = null;
var count__31931 = (0);
var i__31932 = (0);
while(true){
if((i__31932 < count__31931)){
var s = chunk__31930.cljs$core$IIndexed$_nth$arity$2(null,i__31932);
cljs.core._write(writer,s);

var G__31933 = seq__31929;
var G__31934 = chunk__31930;
var G__31935 = count__31931;
var G__31936 = (i__31932 + (1));
seq__31929 = G__31933;
chunk__31930 = G__31934;
count__31931 = G__31935;
i__31932 = G__31936;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31929);
if(temp__4406__auto__){
var seq__31929__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31929__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31929__$1);
var G__31937 = cljs.core.chunk_rest(seq__31929__$1);
var G__31938 = c__26526__auto__;
var G__31939 = cljs.core.count(c__26526__auto__);
var G__31940 = (0);
seq__31929 = G__31937;
chunk__31930 = G__31938;
count__31931 = G__31939;
i__31932 = G__31940;
continue;
} else {
var s = cljs.core.first(seq__31929__$1);
cljs.core._write(writer,s);

var G__31941 = cljs.core.next(seq__31929__$1);
var G__31942 = null;
var G__31943 = (0);
var G__31944 = (0);
seq__31929 = G__31941;
chunk__31930 = G__31942;
count__31931 = G__31943;
i__31932 = G__31944;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__31945__i = 0, G__31945__a = new Array(arguments.length -  1);
while (G__31945__i < G__31945__a.length) {G__31945__a[G__31945__i] = arguments[G__31945__i + 1]; ++G__31945__i;}
  ss = new cljs.core.IndexedSeq(G__31945__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__31946){
var writer = cljs.core.first(arglist__31946);
var ss = cljs.core.rest(arglist__31946);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj31948 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj31948;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__31951 = "[\\\\\"\b\f\n\r\t]";
var G__31952 = "g";
return RegExp(G__31951,G__31952);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__25727__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__25727__auto__)){
var and__25727__auto____$1 = (function (){var G__31966 = obj;
if(G__31966){
var bit__26420__auto__ = (G__31966.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__26420__auto__) || (G__31966.cljs$core$IMeta$)){
return true;
} else {
if((!G__31966.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31966);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31966);
}
})();
if(and__25727__auto____$1){
return cljs.core.meta(obj);
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__31967 = obj;
if(G__31967){
var bit__26413__auto__ = (G__31967.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__26413__auto__) || (G__31967.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__31968 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__31969 = pr_writer;
var G__31970 = writer;
var G__31971 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__31968,G__31969,G__31970,G__31971) : cljs.core.print_map.call(null,G__31968,G__31969,G__31970,G__31971));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__31972 = obj;
return goog.isString(G__31972);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__31974 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__31974;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__31973 = obj;
if(G__31973){
var bit__26420__auto__ = (G__31973.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__26420__auto__) || (G__31973.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__31973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__31973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__31973);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__31979 = cljs.core.seq(cljs.core.next(objs));
var chunk__31980 = null;
var count__31981 = (0);
var i__31982 = (0);
while(true){
if((i__31982 < count__31981)){
var obj = chunk__31980.cljs$core$IIndexed$_nth$arity$2(null,i__31982);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__31983 = seq__31979;
var G__31984 = chunk__31980;
var G__31985 = count__31981;
var G__31986 = (i__31982 + (1));
seq__31979 = G__31983;
chunk__31980 = G__31984;
count__31981 = G__31985;
i__31982 = G__31986;
continue;
} else {
var temp__4406__auto__ = cljs.core.seq(seq__31979);
if(temp__4406__auto__){
var seq__31979__$1 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31979__$1)){
var c__26526__auto__ = cljs.core.chunk_first(seq__31979__$1);
var G__31987 = cljs.core.chunk_rest(seq__31979__$1);
var G__31988 = c__26526__auto__;
var G__31989 = cljs.core.count(c__26526__auto__);
var G__31990 = (0);
seq__31979 = G__31987;
chunk__31980 = G__31988;
count__31981 = G__31989;
i__31982 = G__31990;
continue;
} else {
var obj = cljs.core.first(seq__31979__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__31991 = cljs.core.next(seq__31979__$1);
var G__31992 = null;
var G__31993 = (0);
var G__31994 = (0);
seq__31979 = G__31991;
chunk__31980 = G__31992;
count__31981 = G__31993;
i__31982 = G__31994;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31995__i = 0, G__31995__a = new Array(arguments.length -  0);
while (G__31995__i < G__31995__a.length) {G__31995__a[G__31995__i] = arguments[G__31995__i + 0]; ++G__31995__i;}
  objs = new cljs.core.IndexedSeq(G__31995__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__31996){
var objs = cljs.core.seq(arglist__31996);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31997__i = 0, G__31997__a = new Array(arguments.length -  0);
while (G__31997__i < G__31997__a.length) {G__31997__a[G__31997__i] = arguments[G__31997__i + 0]; ++G__31997__i;}
  objs = new cljs.core.IndexedSeq(G__31997__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__31998){
var objs = cljs.core.seq(arglist__31998);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__31999__i = 0, G__31999__a = new Array(arguments.length -  0);
while (G__31999__i < G__31999__a.length) {G__31999__a[G__31999__i] = arguments[G__31999__i + 0]; ++G__31999__i;}
  objs = new cljs.core.IndexedSeq(G__31999__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__32000){
var objs = cljs.core.seq(arglist__32000);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32001__i = 0, G__32001__a = new Array(arguments.length -  0);
while (G__32001__i < G__32001__a.length) {G__32001__a[G__32001__i] = arguments[G__32001__i + 0]; ++G__32001__i;}
  objs = new cljs.core.IndexedSeq(G__32001__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__32002){
var objs = cljs.core.seq(arglist__32002);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32003__i = 0, G__32003__a = new Array(arguments.length -  0);
while (G__32003__i < G__32003__a.length) {G__32003__a[G__32003__i] = arguments[G__32003__i + 0]; ++G__32003__i;}
  objs = new cljs.core.IndexedSeq(G__32003__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__32004){
var objs = cljs.core.seq(arglist__32004);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32005__i = 0, G__32005__a = new Array(arguments.length -  0);
while (G__32005__i < G__32005__a.length) {G__32005__a[G__32005__i] = arguments[G__32005__i + 0]; ++G__32005__i;}
  objs = new cljs.core.IndexedSeq(G__32005__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__32006){
var objs = cljs.core.seq(arglist__32006);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32007__i = 0, G__32007__a = new Array(arguments.length -  0);
while (G__32007__i < G__32007__a.length) {G__32007__a[G__32007__i] = arguments[G__32007__i + 0]; ++G__32007__i;}
  objs = new cljs.core.IndexedSeq(G__32007__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__32008){
var objs = cljs.core.seq(arglist__32008);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__32009__i = 0, G__32009__a = new Array(arguments.length -  0);
while (G__32009__i < G__32009__a.length) {G__32009__a[G__32009__i] = arguments[G__32009__i + 0]; ++G__32009__i;}
  objs = new cljs.core.IndexedSeq(G__32009__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__32010){
var objs = cljs.core.seq(arglist__32010);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__32017_32023 = cljs.core.key(e);
var G__32018_32024 = w;
var G__32019_32025 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32017_32023,G__32018_32024,G__32019_32025) : print_one.call(null,G__32017_32023,G__32018_32024,G__32019_32025));

cljs.core._write(w," ");

var G__32020 = cljs.core.val(e);
var G__32021 = w;
var G__32022 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__32020,G__32021,G__32022) : print_one.call(null,G__32020,G__32021,G__32022));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__32026__i = 0, G__32026__a = new Array(arguments.length -  2);
while (G__32026__i < G__32026__a.length) {G__32026__a[G__32026__i] = arguments[G__32026__i + 2]; ++G__32026__i;}
  args = new cljs.core.IndexedSeq(G__32026__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__32027){
var iref = cljs.core.first(arglist__32027);
arglist__32027 = cljs.core.next(arglist__32027);
var f = cljs.core.first(arglist__32027);
var args = cljs.core.rest(arglist__32027);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__32030 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32030) : cljs.core.atom.call(null,G__32030));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__32032 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32032) : cljs.core.deref.call(null,G__32032));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__32033_SHARP_,p2__32034_SHARP_){
var ret = (function (){var G__32037 = p1__32033_SHARP_;
var G__32038 = p2__32034_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32037,G__32038) : rf.call(null,G__32037,G__32038));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__32041 = null;
var G__32041__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32041__1 = (function (result){
var G__32040 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32040) : rf.call(null,G__32040));
});
var G__32041__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__32041 = function(result,input){
switch(arguments.length){
case 0:
return G__32041__0.call(this);
case 1:
return G__32041__1.call(this,result);
case 2:
return G__32041__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32041.cljs$core$IFn$_invoke$arity$0 = G__32041__0;
G__32041.cljs$core$IFn$_invoke$arity$1 = G__32041__1;
G__32041.cljs$core$IFn$_invoke$arity$2 = G__32041__2;
return G__32041;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__32050 = null;
var G__32050__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32050__1 = (function (result){
var G__32046 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32046) : rf.call(null,G__32046));
});
var G__32050__2 = (function (result,input){
var prior = (function (){var G__32047 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32047) : cljs.core.deref.call(null,G__32047));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__32048 = result;
var G__32049 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32048,G__32049) : rf.call(null,G__32048,G__32049));
}
});
G__32050 = function(result,input){
switch(arguments.length){
case 0:
return G__32050__0.call(this);
case 1:
return G__32050__1.call(this,result);
case 2:
return G__32050__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32050.cljs$core$IFn$_invoke$arity$0 = G__32050__0;
G__32050.cljs$core$IFn$_invoke$arity$1 = G__32050__1;
G__32050.cljs$core$IFn$_invoke$arity$2 = G__32050__2;
return G__32050;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__26717__auto__ = this;
return cljs.core.es6_iterator(this__26717__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__32052_SHARP_,p2__32051_SHARP_){
var G__32054 = p2__32051_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__32054) : proc.call(null,G__32054));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj32056 = {};
return obj32056;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__25727__auto__ = x;
if(and__25727__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__25727__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__26383__auto__ = (((x == null))?null:x);
return (function (){var or__25739__auto__ = (cljs.core._clj__GT_js[(function (){var G__32060 = x__26383__auto__;
return goog.typeOf(G__32060);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__25727__auto__ = x;
if(and__25727__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__25727__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__26383__auto__ = (((x == null))?null:x);
return (function (){var or__25739__auto__ = (cljs.core._key__GT_js[(function (){var G__32064 = x__26383__auto__;
return goog.typeOf(G__32064);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__32067 = k;
if(G__32067){
var bit__26420__auto__ = null;
if(cljs.core.truth_((function (){var or__25739__auto__ = bit__26420__auto__;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return G__32067.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__32067.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32067);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32067);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__32068 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__32068) : cljs.core.clj__GT_js.call(null,G__32068));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__32084 = x;
if(G__32084){
var bit__26420__auto__ = null;
if(cljs.core.truth_((function (){var or__25739__auto__ = bit__26420__auto__;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return G__32084.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__32084.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__32084);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj32086 = {};
return obj32086;
})();
var seq__32087_32097 = cljs.core.seq(x);
var chunk__32088_32098 = null;
var count__32089_32099 = (0);
var i__32090_32100 = (0);
while(true){
if((i__32090_32100 < count__32089_32099)){
var vec__32091_32101 = chunk__32088_32098.cljs$core$IIndexed$_nth$arity$2(null,i__32090_32100);
var k_32102 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32091_32101,(0),null);
var v_32103 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32091_32101,(1),null);
(m[cljs.core.key__GT_js(k_32102)] = clj__GT_js(v_32103));

var G__32104 = seq__32087_32097;
var G__32105 = chunk__32088_32098;
var G__32106 = count__32089_32099;
var G__32107 = (i__32090_32100 + (1));
seq__32087_32097 = G__32104;
chunk__32088_32098 = G__32105;
count__32089_32099 = G__32106;
i__32090_32100 = G__32107;
continue;
} else {
var temp__4406__auto___32108 = cljs.core.seq(seq__32087_32097);
if(temp__4406__auto___32108){
var seq__32087_32109__$1 = temp__4406__auto___32108;
if(cljs.core.chunked_seq_QMARK_(seq__32087_32109__$1)){
var c__26526__auto___32110 = cljs.core.chunk_first(seq__32087_32109__$1);
var G__32111 = cljs.core.chunk_rest(seq__32087_32109__$1);
var G__32112 = c__26526__auto___32110;
var G__32113 = cljs.core.count(c__26526__auto___32110);
var G__32114 = (0);
seq__32087_32097 = G__32111;
chunk__32088_32098 = G__32112;
count__32089_32099 = G__32113;
i__32090_32100 = G__32114;
continue;
} else {
var vec__32092_32115 = cljs.core.first(seq__32087_32109__$1);
var k_32116 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32092_32115,(0),null);
var v_32117 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32092_32115,(1),null);
(m[cljs.core.key__GT_js(k_32116)] = clj__GT_js(v_32117));

var G__32118 = cljs.core.next(seq__32087_32109__$1);
var G__32119 = null;
var G__32120 = (0);
var G__32121 = (0);
seq__32087_32097 = G__32118;
chunk__32088_32098 = G__32119;
count__32089_32099 = G__32120;
i__32090_32100 = G__32121;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__32093_32122 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__32094_32123 = null;
var count__32095_32124 = (0);
var i__32096_32125 = (0);
while(true){
if((i__32096_32125 < count__32095_32124)){
var x_32126__$1 = chunk__32094_32123.cljs$core$IIndexed$_nth$arity$2(null,i__32096_32125);
arr.push(x_32126__$1);

var G__32127 = seq__32093_32122;
var G__32128 = chunk__32094_32123;
var G__32129 = count__32095_32124;
var G__32130 = (i__32096_32125 + (1));
seq__32093_32122 = G__32127;
chunk__32094_32123 = G__32128;
count__32095_32124 = G__32129;
i__32096_32125 = G__32130;
continue;
} else {
var temp__4406__auto___32131 = cljs.core.seq(seq__32093_32122);
if(temp__4406__auto___32131){
var seq__32093_32132__$1 = temp__4406__auto___32131;
if(cljs.core.chunked_seq_QMARK_(seq__32093_32132__$1)){
var c__26526__auto___32133 = cljs.core.chunk_first(seq__32093_32132__$1);
var G__32134 = cljs.core.chunk_rest(seq__32093_32132__$1);
var G__32135 = c__26526__auto___32133;
var G__32136 = cljs.core.count(c__26526__auto___32133);
var G__32137 = (0);
seq__32093_32122 = G__32134;
chunk__32094_32123 = G__32135;
count__32095_32124 = G__32136;
i__32096_32125 = G__32137;
continue;
} else {
var x_32138__$1 = cljs.core.first(seq__32093_32132__$1);
arr.push(x_32138__$1);

var G__32139 = cljs.core.next(seq__32093_32132__$1);
var G__32140 = null;
var G__32141 = (0);
var G__32142 = (0);
seq__32093_32122 = G__32139;
chunk__32094_32123 = G__32140;
count__32095_32124 = G__32141;
i__32096_32125 = G__32142;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj32144 = {};
return obj32144;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__25727__auto__ = x;
if(and__25727__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__25727__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__26383__auto__ = (((x == null))?null:x);
return (function (){var or__25739__auto__ = (cljs.core._js__GT_clj[(function (){var G__32148 = x__26383__auto__;
return goog.typeOf(G__32148);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__32205__delegate = function (x,opts){
var map__32178 = opts;
var map__32178__$1 = ((cljs.core.seq_QMARK_(map__32178))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__32178):map__32178);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__32178__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__32178,map__32178__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__32194 = x__$1;
if(G__32194){
var bit__26420__auto__ = null;
if(cljs.core.truth_((function (){var or__25739__auto__ = bit__26420__auto__;
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return G__32194.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__32194.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__32194);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__32194);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__26495__auto__ = ((function (map__32178,map__32178__$1,keywordize_keys,keyfn){
return (function iter__32195(s__32196){
return (new cljs.core.LazySeq(null,((function (map__32178,map__32178__$1,keywordize_keys,keyfn){
return (function (){
var s__32196__$1 = s__32196;
while(true){
var temp__4406__auto__ = cljs.core.seq(s__32196__$1);
if(temp__4406__auto__){
var s__32196__$2 = temp__4406__auto__;
if(cljs.core.chunked_seq_QMARK_(s__32196__$2)){
var c__26493__auto__ = cljs.core.chunk_first(s__32196__$2);
var size__26494__auto__ = cljs.core.count(c__26493__auto__);
var b__32198 = cljs.core.chunk_buffer(size__26494__auto__);
if((function (){var i__32197 = (0);
while(true){
if((i__32197 < size__26494__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__26493__auto__,i__32197);
cljs.core.chunk_append(b__32198,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__32203 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32203) : keyfn.call(null,G__32203));
})(),thisfn((x__$1[k]))], null));

var G__32206 = (i__32197 + (1));
i__32197 = G__32206;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__32198),iter__32195(cljs.core.chunk_rest(s__32196__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__32198),null);
}
} else {
var k = cljs.core.first(s__32196__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__32204 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32204) : keyfn.call(null,G__32204));
})(),thisfn((x__$1[k]))], null),iter__32195(cljs.core.rest(s__32196__$2)));
}
} else {
return null;
}
break;
}
});})(map__32178,map__32178__$1,keywordize_keys,keyfn))
,null,null));
});})(map__32178,map__32178__$1,keywordize_keys,keyfn))
;
return iter__26495__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__32178,map__32178__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__32205 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__32207__i = 0, G__32207__a = new Array(arguments.length -  1);
while (G__32207__i < G__32207__a.length) {G__32207__a[G__32207__i] = arguments[G__32207__i + 1]; ++G__32207__i;}
  opts = new cljs.core.IndexedSeq(G__32207__a,0);
} 
return G__32205__delegate.call(this,x,opts);};
G__32205.cljs$lang$maxFixedArity = 1;
G__32205.cljs$lang$applyTo = (function (arglist__32208){
var x = cljs.core.first(arglist__32208);
var opts = cljs.core.rest(arglist__32208);
return G__32205__delegate(x,opts);
});
G__32205.cljs$core$IFn$_invoke$arity$variadic = G__32205__delegate;
return G__32205;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__32209 = null;
if (arguments.length > 1) {
var G__32210__i = 0, G__32210__a = new Array(arguments.length -  1);
while (G__32210__i < G__32210__a.length) {G__32210__a[G__32210__i] = arguments[G__32210__i + 1]; ++G__32210__i;}
G__32209 = new cljs.core.IndexedSeq(G__32210__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__32213 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32213) : cljs.core.atom.call(null,G__32213));
})();
return ((function (mem){
return (function() { 
var G__32215__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__32214 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32214) : cljs.core.deref.call(null,G__32214));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__32215 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32216__i = 0, G__32216__a = new Array(arguments.length -  0);
while (G__32216__i < G__32216__a.length) {G__32216__a[G__32216__i] = arguments[G__32216__i + 0]; ++G__32216__i;}
  args = new cljs.core.IndexedSeq(G__32216__a,0);
} 
return G__32215__delegate.call(this,args);};
G__32215.cljs$lang$maxFixedArity = 0;
G__32215.cljs$lang$applyTo = (function (arglist__32217){
var args = cljs.core.seq(arglist__32217);
return G__32215__delegate(args);
});
G__32215.cljs$core$IFn$_invoke$arity$variadic = G__32215__delegate;
return G__32215;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__32219 = ret;
f = G__32219;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__32220__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__32220 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__32221__i = 0, G__32221__a = new Array(arguments.length -  1);
while (G__32221__i < G__32221__a.length) {G__32221__a[G__32221__i] = arguments[G__32221__i + 1]; ++G__32221__i;}
  args = new cljs.core.IndexedSeq(G__32221__a,0);
} 
return G__32220__delegate.call(this,f,args);};
G__32220.cljs$lang$maxFixedArity = 1;
G__32220.cljs$lang$applyTo = (function (arglist__32222){
var f = cljs.core.first(arglist__32222);
var args = cljs.core.rest(arglist__32222);
return G__32220__delegate(f,args);
});
G__32220.cljs$core$IFn$_invoke$arity$variadic = G__32220__delegate;
return G__32220;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__32223 = null;
if (arguments.length > 1) {
var G__32224__i = 0, G__32224__a = new Array(arguments.length -  1);
while (G__32224__i < G__32224__a.length) {G__32224__a[G__32224__i] = arguments[G__32224__i + 1]; ++G__32224__i;}
G__32223 = new cljs.core.IndexedSeq(G__32224__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__32223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__32227 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32227) : Math.floor.call(null,G__32227));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__32229 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32229) : f.call(null,G__32229));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__32231 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__32231) : cljs.core.atom.call(null,G__32231));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__32232__i = 0, G__32232__a = new Array(arguments.length -  1);
while (G__32232__i < G__32232__a.length) {G__32232__a[G__32232__i] = arguments[G__32232__i + 1]; ++G__32232__i;}
  args = new cljs.core.IndexedSeq(G__32232__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__32233){
var f = cljs.core.first(arglist__32233);
var args = cljs.core.rest(arglist__32233);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32298 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32298) : cljs.core.deref.call(null,G__32298));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__25739__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
var and__25727__auto__ = cljs.core.vector_QMARK_(parent);
if(and__25727__auto__){
var and__25727__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__25727__auto____$1){
var and__25727__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__25727__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__32323 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__32321 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__32321) : child.call(null,G__32321));
})(),(function (){var G__32322 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__32322) : parent.call(null,G__32322));
})());
var G__32324 = (i + (1));
ret = G__32323;
i = G__32324;
continue;
}
break;
}
} else {
return and__25727__auto____$2;
}
} else {
return and__25727__auto____$1;
}
} else {
return and__25727__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__32328 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32328) : cljs.core.deref.call(null,G__32328));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__32332 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32332) : cljs.core.deref.call(null,G__32332));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__32336 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32336) : cljs.core.deref.call(null,G__32336));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__32345 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__32345) : targets.call(null,G__32345));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__32346 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__32346) : sources.call(null,G__32346));
})()));
});})(tp,td,ta))
;
var or__25739__auto__ = ((cljs.core.contains_QMARK_((function (){var G__32350 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__32350) : tp.call(null,G__32350));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__32351 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32351) : ta.call(null,G__32351));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__32352 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__32352) : ta.call(null,G__32352));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__32359 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32359) : parentMap.call(null,G__32359));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__32360 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32360) : parentMap.call(null,G__32360));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__32353_SHARP_){
return cljs.core.cons(cljs.core.first(p1__32353_SHARP_),cljs.core.interpose(cljs.core.first(p1__32353_SHARP_),cljs.core.second(p1__32353_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__32361 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__32361) : parentMap.call(null,G__32361));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__32354_SHARP_,p2__32355_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__32354_SHARP_,p2__32355_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__32364 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32364) : cljs.core.deref.call(null,G__32364));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__32365 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32365) : cljs.core.deref.call(null,G__32365));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__32381 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32381) : cljs.core.deref.call(null,G__32381));
})().call(null,x);
var or__25739__auto__ = (cljs.core.truth_((function (){var and__25727__auto__ = xprefs;
if(cljs.core.truth_(and__25727__auto__)){
var G__32383 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__32383) : xprefs.call(null,G__32383));
} else {
return and__25727__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__32384 = cljs.core.rest(ps);
ps = G__32384;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__25739__auto____$1)){
return or__25739__auto____$1;
} else {
var or__25739__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__32385 = cljs.core.rest(ps);
ps = G__32385;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__25739__auto____$2)){
return or__25739__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__25739__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__25739__auto__)){
return or__25739__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__32399){
var vec__32400 = p__32399;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32400,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32400,(1),null);
var e = vec__32400;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__32401 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32401) : cljs.core.deref.call(null,G__32401));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__25739__auto__ = (be == null);
if(or__25739__auto__){
return or__25739__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__32402 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32402) : cljs.core.deref.call(null,G__32402));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__32403 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32403) : cljs.core.deref.call(null,G__32403));
})(),(function (){var G__32404 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32404) : cljs.core.deref.call(null,G__32404));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj32406 = {};
return obj32406;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._reset[(function (){var G__32410 = x__26383__auto__;
return goog.typeOf(G__32410);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._reset["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._add_method[(function (){var G__32414 = x__26383__auto__;
return goog.typeOf(G__32414);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._add_method["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._remove_method[(function (){var G__32418 = x__26383__auto__;
return goog.typeOf(G__32418);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._remove_method["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._prefer_method[(function (){var G__32422 = x__26383__auto__;
return goog.typeOf(G__32422);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._get_method[(function (){var G__32426 = x__26383__auto__;
return goog.typeOf(G__32426);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._get_method["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._methods[(function (){var G__32430 = x__26383__auto__;
return goog.typeOf(G__32430);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._methods["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__25727__auto__ = mf;
if(and__25727__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__25727__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__26383__auto__ = (((mf == null))?null:mf);
return (function (){var or__25739__auto__ = (cljs.core._prefers[(function (){var G__32434 = x__26383__auto__;
return goog.typeOf(G__32434);
})()]);
if(or__25739__auto__){
return or__25739__auto__;
} else {
var or__25739__auto____$1 = (cljs.core._prefers["_"]);
if(or__25739__auto____$1){
return or__25739__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__32436 = this$__$1;
return goog.getUid(G__32436);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__32437 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32437) : cljs.core.deref.call(null,G__32437));
})(),(function (){var G__32438 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32438) : cljs.core.deref.call(null,G__32438));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4404__auto__ = (function (){var G__32439 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32439) : cljs.core.deref.call(null,G__32439));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4404__auto__)){
var target_fn = temp__4404__auto__;
return target_fn;
} else {
var temp__4404__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4404__auto____$1)){
var target_fn = temp__4404__auto____$1;
return target_fn;
} else {
return (function (){var G__32440 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32440) : cljs.core.deref.call(null,G__32440));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__32441 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32441) : cljs.core.deref.call(null,G__32441));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__32442 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32442) : cljs.core.deref.call(null,G__32442));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__33283 = null;
var G__33283__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__33283__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32443 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__32443) : self__.dispatch_fn.call(null,G__32443));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32444 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__32444) : target_fn.call(null,G__32444));
});
var G__33283__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32445 = a;
var G__32446 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__32445,G__32446) : self__.dispatch_fn.call(null,G__32445,G__32446));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32447 = a;
var G__32448 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__32447,G__32448) : target_fn.call(null,G__32447,G__32448));
});
var G__33283__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32449 = a;
var G__32450 = b;
var G__32451 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__32449,G__32450,G__32451) : self__.dispatch_fn.call(null,G__32449,G__32450,G__32451));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32452 = a;
var G__32453 = b;
var G__32454 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__32452,G__32453,G__32454) : target_fn.call(null,G__32452,G__32453,G__32454));
});
var G__33283__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32455 = a;
var G__32456 = b;
var G__32457 = c;
var G__32458 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__32455,G__32456,G__32457,G__32458) : self__.dispatch_fn.call(null,G__32455,G__32456,G__32457,G__32458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32459 = a;
var G__32460 = b;
var G__32461 = c;
var G__32462 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__32459,G__32460,G__32461,G__32462) : target_fn.call(null,G__32459,G__32460,G__32461,G__32462));
});
var G__33283__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32463 = a;
var G__32464 = b;
var G__32465 = c;
var G__32466 = d;
var G__32467 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__32463,G__32464,G__32465,G__32466,G__32467) : self__.dispatch_fn.call(null,G__32463,G__32464,G__32465,G__32466,G__32467));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32468 = a;
var G__32469 = b;
var G__32470 = c;
var G__32471 = d;
var G__32472 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__32468,G__32469,G__32470,G__32471,G__32472) : target_fn.call(null,G__32468,G__32469,G__32470,G__32471,G__32472));
});
var G__33283__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32473 = a;
var G__32474 = b;
var G__32475 = c;
var G__32476 = d;
var G__32477 = e;
var G__32478 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__32473,G__32474,G__32475,G__32476,G__32477,G__32478) : self__.dispatch_fn.call(null,G__32473,G__32474,G__32475,G__32476,G__32477,G__32478));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32479 = a;
var G__32480 = b;
var G__32481 = c;
var G__32482 = d;
var G__32483 = e;
var G__32484 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__32479,G__32480,G__32481,G__32482,G__32483,G__32484) : target_fn.call(null,G__32479,G__32480,G__32481,G__32482,G__32483,G__32484));
});
var G__33283__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32485 = a;
var G__32486 = b;
var G__32487 = c;
var G__32488 = d;
var G__32489 = e;
var G__32490 = f;
var G__32491 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__32485,G__32486,G__32487,G__32488,G__32489,G__32490,G__32491) : self__.dispatch_fn.call(null,G__32485,G__32486,G__32487,G__32488,G__32489,G__32490,G__32491));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32492 = a;
var G__32493 = b;
var G__32494 = c;
var G__32495 = d;
var G__32496 = e;
var G__32497 = f;
var G__32498 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__32492,G__32493,G__32494,G__32495,G__32496,G__32497,G__32498) : target_fn.call(null,G__32492,G__32493,G__32494,G__32495,G__32496,G__32497,G__32498));
});
var G__33283__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32499 = a;
var G__32500 = b;
var G__32501 = c;
var G__32502 = d;
var G__32503 = e;
var G__32504 = f;
var G__32505 = g;
var G__32506 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__32499,G__32500,G__32501,G__32502,G__32503,G__32504,G__32505,G__32506) : self__.dispatch_fn.call(null,G__32499,G__32500,G__32501,G__32502,G__32503,G__32504,G__32505,G__32506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32507 = a;
var G__32508 = b;
var G__32509 = c;
var G__32510 = d;
var G__32511 = e;
var G__32512 = f;
var G__32513 = g;
var G__32514 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__32507,G__32508,G__32509,G__32510,G__32511,G__32512,G__32513,G__32514) : target_fn.call(null,G__32507,G__32508,G__32509,G__32510,G__32511,G__32512,G__32513,G__32514));
});
var G__33283__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32515 = a;
var G__32516 = b;
var G__32517 = c;
var G__32518 = d;
var G__32519 = e;
var G__32520 = f;
var G__32521 = g;
var G__32522 = h;
var G__32523 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__32515,G__32516,G__32517,G__32518,G__32519,G__32520,G__32521,G__32522,G__32523) : self__.dispatch_fn.call(null,G__32515,G__32516,G__32517,G__32518,G__32519,G__32520,G__32521,G__32522,G__32523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32524 = a;
var G__32525 = b;
var G__32526 = c;
var G__32527 = d;
var G__32528 = e;
var G__32529 = f;
var G__32530 = g;
var G__32531 = h;
var G__32532 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__32524,G__32525,G__32526,G__32527,G__32528,G__32529,G__32530,G__32531,G__32532) : target_fn.call(null,G__32524,G__32525,G__32526,G__32527,G__32528,G__32529,G__32530,G__32531,G__32532));
});
var G__33283__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32533 = a;
var G__32534 = b;
var G__32535 = c;
var G__32536 = d;
var G__32537 = e;
var G__32538 = f;
var G__32539 = g;
var G__32540 = h;
var G__32541 = i;
var G__32542 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__32533,G__32534,G__32535,G__32536,G__32537,G__32538,G__32539,G__32540,G__32541,G__32542) : self__.dispatch_fn.call(null,G__32533,G__32534,G__32535,G__32536,G__32537,G__32538,G__32539,G__32540,G__32541,G__32542));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32543 = a;
var G__32544 = b;
var G__32545 = c;
var G__32546 = d;
var G__32547 = e;
var G__32548 = f;
var G__32549 = g;
var G__32550 = h;
var G__32551 = i;
var G__32552 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__32543,G__32544,G__32545,G__32546,G__32547,G__32548,G__32549,G__32550,G__32551,G__32552) : target_fn.call(null,G__32543,G__32544,G__32545,G__32546,G__32547,G__32548,G__32549,G__32550,G__32551,G__32552));
});
var G__33283__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32553 = a;
var G__32554 = b;
var G__32555 = c;
var G__32556 = d;
var G__32557 = e;
var G__32558 = f;
var G__32559 = g;
var G__32560 = h;
var G__32561 = i;
var G__32562 = j;
var G__32563 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__32553,G__32554,G__32555,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563) : self__.dispatch_fn.call(null,G__32553,G__32554,G__32555,G__32556,G__32557,G__32558,G__32559,G__32560,G__32561,G__32562,G__32563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32564 = a;
var G__32565 = b;
var G__32566 = c;
var G__32567 = d;
var G__32568 = e;
var G__32569 = f;
var G__32570 = g;
var G__32571 = h;
var G__32572 = i;
var G__32573 = j;
var G__32574 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__32564,G__32565,G__32566,G__32567,G__32568,G__32569,G__32570,G__32571,G__32572,G__32573,G__32574) : target_fn.call(null,G__32564,G__32565,G__32566,G__32567,G__32568,G__32569,G__32570,G__32571,G__32572,G__32573,G__32574));
});
var G__33283__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32575 = a;
var G__32576 = b;
var G__32577 = c;
var G__32578 = d;
var G__32579 = e;
var G__32580 = f;
var G__32581 = g;
var G__32582 = h;
var G__32583 = i;
var G__32584 = j;
var G__32585 = k;
var G__32586 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__32575,G__32576,G__32577,G__32578,G__32579,G__32580,G__32581,G__32582,G__32583,G__32584,G__32585,G__32586) : self__.dispatch_fn.call(null,G__32575,G__32576,G__32577,G__32578,G__32579,G__32580,G__32581,G__32582,G__32583,G__32584,G__32585,G__32586));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32587 = a;
var G__32588 = b;
var G__32589 = c;
var G__32590 = d;
var G__32591 = e;
var G__32592 = f;
var G__32593 = g;
var G__32594 = h;
var G__32595 = i;
var G__32596 = j;
var G__32597 = k;
var G__32598 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__32587,G__32588,G__32589,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598) : target_fn.call(null,G__32587,G__32588,G__32589,G__32590,G__32591,G__32592,G__32593,G__32594,G__32595,G__32596,G__32597,G__32598));
});
var G__33283__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32599 = a;
var G__32600 = b;
var G__32601 = c;
var G__32602 = d;
var G__32603 = e;
var G__32604 = f;
var G__32605 = g;
var G__32606 = h;
var G__32607 = i;
var G__32608 = j;
var G__32609 = k;
var G__32610 = l;
var G__32611 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__32599,G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609,G__32610,G__32611) : self__.dispatch_fn.call(null,G__32599,G__32600,G__32601,G__32602,G__32603,G__32604,G__32605,G__32606,G__32607,G__32608,G__32609,G__32610,G__32611));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32612 = a;
var G__32613 = b;
var G__32614 = c;
var G__32615 = d;
var G__32616 = e;
var G__32617 = f;
var G__32618 = g;
var G__32619 = h;
var G__32620 = i;
var G__32621 = j;
var G__32622 = k;
var G__32623 = l;
var G__32624 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__32612,G__32613,G__32614,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620,G__32621,G__32622,G__32623,G__32624) : target_fn.call(null,G__32612,G__32613,G__32614,G__32615,G__32616,G__32617,G__32618,G__32619,G__32620,G__32621,G__32622,G__32623,G__32624));
});
var G__33283__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32625 = a;
var G__32626 = b;
var G__32627 = c;
var G__32628 = d;
var G__32629 = e;
var G__32630 = f;
var G__32631 = g;
var G__32632 = h;
var G__32633 = i;
var G__32634 = j;
var G__32635 = k;
var G__32636 = l;
var G__32637 = m;
var G__32638 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__32625,G__32626,G__32627,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637,G__32638) : self__.dispatch_fn.call(null,G__32625,G__32626,G__32627,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633,G__32634,G__32635,G__32636,G__32637,G__32638));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32639 = a;
var G__32640 = b;
var G__32641 = c;
var G__32642 = d;
var G__32643 = e;
var G__32644 = f;
var G__32645 = g;
var G__32646 = h;
var G__32647 = i;
var G__32648 = j;
var G__32649 = k;
var G__32650 = l;
var G__32651 = m;
var G__32652 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__32639,G__32640,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652) : target_fn.call(null,G__32639,G__32640,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648,G__32649,G__32650,G__32651,G__32652));
});
var G__33283__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32653 = a;
var G__32654 = b;
var G__32655 = c;
var G__32656 = d;
var G__32657 = e;
var G__32658 = f;
var G__32659 = g;
var G__32660 = h;
var G__32661 = i;
var G__32662 = j;
var G__32663 = k;
var G__32664 = l;
var G__32665 = m;
var G__32666 = n;
var G__32667 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__32653,G__32654,G__32655,G__32656,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667) : self__.dispatch_fn.call(null,G__32653,G__32654,G__32655,G__32656,G__32657,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32668 = a;
var G__32669 = b;
var G__32670 = c;
var G__32671 = d;
var G__32672 = e;
var G__32673 = f;
var G__32674 = g;
var G__32675 = h;
var G__32676 = i;
var G__32677 = j;
var G__32678 = k;
var G__32679 = l;
var G__32680 = m;
var G__32681 = n;
var G__32682 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681,G__32682) : target_fn.call(null,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678,G__32679,G__32680,G__32681,G__32682));
});
var G__33283__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32683 = a;
var G__32684 = b;
var G__32685 = c;
var G__32686 = d;
var G__32687 = e;
var G__32688 = f;
var G__32689 = g;
var G__32690 = h;
var G__32691 = i;
var G__32692 = j;
var G__32693 = k;
var G__32694 = l;
var G__32695 = m;
var G__32696 = n;
var G__32697 = o;
var G__32698 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692,G__32693,G__32694,G__32695,G__32696,G__32697,G__32698) : self__.dispatch_fn.call(null,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690,G__32691,G__32692,G__32693,G__32694,G__32695,G__32696,G__32697,G__32698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32699 = a;
var G__32700 = b;
var G__32701 = c;
var G__32702 = d;
var G__32703 = e;
var G__32704 = f;
var G__32705 = g;
var G__32706 = h;
var G__32707 = i;
var G__32708 = j;
var G__32709 = k;
var G__32710 = l;
var G__32711 = m;
var G__32712 = n;
var G__32713 = o;
var G__32714 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709,G__32710,G__32711,G__32712,G__32713,G__32714) : target_fn.call(null,G__32699,G__32700,G__32701,G__32702,G__32703,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709,G__32710,G__32711,G__32712,G__32713,G__32714));
});
var G__33283__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32715 = a;
var G__32716 = b;
var G__32717 = c;
var G__32718 = d;
var G__32719 = e;
var G__32720 = f;
var G__32721 = g;
var G__32722 = h;
var G__32723 = i;
var G__32724 = j;
var G__32725 = k;
var G__32726 = l;
var G__32727 = m;
var G__32728 = n;
var G__32729 = o;
var G__32730 = p;
var G__32731 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731) : self__.dispatch_fn.call(null,G__32715,G__32716,G__32717,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32732 = a;
var G__32733 = b;
var G__32734 = c;
var G__32735 = d;
var G__32736 = e;
var G__32737 = f;
var G__32738 = g;
var G__32739 = h;
var G__32740 = i;
var G__32741 = j;
var G__32742 = k;
var G__32743 = l;
var G__32744 = m;
var G__32745 = n;
var G__32746 = o;
var G__32747 = p;
var G__32748 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__32732,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748) : target_fn.call(null,G__32732,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748));
});
var G__33283__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32749 = a;
var G__32750 = b;
var G__32751 = c;
var G__32752 = d;
var G__32753 = e;
var G__32754 = f;
var G__32755 = g;
var G__32756 = h;
var G__32757 = i;
var G__32758 = j;
var G__32759 = k;
var G__32760 = l;
var G__32761 = m;
var G__32762 = n;
var G__32763 = o;
var G__32764 = p;
var G__32765 = q;
var G__32766 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765,G__32766) : self__.dispatch_fn.call(null,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765,G__32766));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32767 = a;
var G__32768 = b;
var G__32769 = c;
var G__32770 = d;
var G__32771 = e;
var G__32772 = f;
var G__32773 = g;
var G__32774 = h;
var G__32775 = i;
var G__32776 = j;
var G__32777 = k;
var G__32778 = l;
var G__32779 = m;
var G__32780 = n;
var G__32781 = o;
var G__32782 = p;
var G__32783 = q;
var G__32784 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__32767,G__32768,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783,G__32784) : target_fn.call(null,G__32767,G__32768,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783,G__32784));
});
var G__33283__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32785 = a;
var G__32786 = b;
var G__32787 = c;
var G__32788 = d;
var G__32789 = e;
var G__32790 = f;
var G__32791 = g;
var G__32792 = h;
var G__32793 = i;
var G__32794 = j;
var G__32795 = k;
var G__32796 = l;
var G__32797 = m;
var G__32798 = n;
var G__32799 = o;
var G__32800 = p;
var G__32801 = q;
var G__32802 = r;
var G__32803 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__32785,G__32786,G__32787,G__32788,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802,G__32803) : self__.dispatch_fn.call(null,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802,G__32803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32804 = a;
var G__32805 = b;
var G__32806 = c;
var G__32807 = d;
var G__32808 = e;
var G__32809 = f;
var G__32810 = g;
var G__32811 = h;
var G__32812 = i;
var G__32813 = j;
var G__32814 = k;
var G__32815 = l;
var G__32816 = m;
var G__32817 = n;
var G__32818 = o;
var G__32819 = p;
var G__32820 = q;
var G__32821 = r;
var G__32822 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__32804,G__32805,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822) : target_fn.call(null,G__32804,G__32805,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822));
});
var G__33283__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__32823 = a;
var G__32824 = b;
var G__32825 = c;
var G__32826 = d;
var G__32827 = e;
var G__32828 = f;
var G__32829 = g;
var G__32830 = h;
var G__32831 = i;
var G__32832 = j;
var G__32833 = k;
var G__32834 = l;
var G__32835 = m;
var G__32836 = n;
var G__32837 = o;
var G__32838 = p;
var G__32839 = q;
var G__32840 = r;
var G__32841 = s;
var G__32842 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841,G__32842) : self__.dispatch_fn.call(null,G__32823,G__32824,G__32825,G__32826,G__32827,G__32828,G__32829,G__32830,G__32831,G__32832,G__32833,G__32834,G__32835,G__32836,G__32837,G__32838,G__32839,G__32840,G__32841,G__32842));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32843 = a;
var G__32844 = b;
var G__32845 = c;
var G__32846 = d;
var G__32847 = e;
var G__32848 = f;
var G__32849 = g;
var G__32850 = h;
var G__32851 = i;
var G__32852 = j;
var G__32853 = k;
var G__32854 = l;
var G__32855 = m;
var G__32856 = n;
var G__32857 = o;
var G__32858 = p;
var G__32859 = q;
var G__32860 = r;
var G__32861 = s;
var G__32862 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861,G__32862) : target_fn.call(null,G__32843,G__32844,G__32845,G__32846,G__32847,G__32848,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861,G__32862));
});
var G__33283__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__33283 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__33283__1.call(this,self__);
case 2:
return G__33283__2.call(this,self__,a);
case 3:
return G__33283__3.call(this,self__,a,b);
case 4:
return G__33283__4.call(this,self__,a,b,c);
case 5:
return G__33283__5.call(this,self__,a,b,c,d);
case 6:
return G__33283__6.call(this,self__,a,b,c,d,e);
case 7:
return G__33283__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__33283__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__33283__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__33283__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__33283__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__33283__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__33283__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__33283__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__33283__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__33283__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__33283__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__33283__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__33283__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__33283__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__33283__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__33283__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33283.cljs$core$IFn$_invoke$arity$1 = G__33283__1;
G__33283.cljs$core$IFn$_invoke$arity$2 = G__33283__2;
G__33283.cljs$core$IFn$_invoke$arity$3 = G__33283__3;
G__33283.cljs$core$IFn$_invoke$arity$4 = G__33283__4;
G__33283.cljs$core$IFn$_invoke$arity$5 = G__33283__5;
G__33283.cljs$core$IFn$_invoke$arity$6 = G__33283__6;
G__33283.cljs$core$IFn$_invoke$arity$7 = G__33283__7;
G__33283.cljs$core$IFn$_invoke$arity$8 = G__33283__8;
G__33283.cljs$core$IFn$_invoke$arity$9 = G__33283__9;
G__33283.cljs$core$IFn$_invoke$arity$10 = G__33283__10;
G__33283.cljs$core$IFn$_invoke$arity$11 = G__33283__11;
G__33283.cljs$core$IFn$_invoke$arity$12 = G__33283__12;
G__33283.cljs$core$IFn$_invoke$arity$13 = G__33283__13;
G__33283.cljs$core$IFn$_invoke$arity$14 = G__33283__14;
G__33283.cljs$core$IFn$_invoke$arity$15 = G__33283__15;
G__33283.cljs$core$IFn$_invoke$arity$16 = G__33283__16;
G__33283.cljs$core$IFn$_invoke$arity$17 = G__33283__17;
G__33283.cljs$core$IFn$_invoke$arity$18 = G__33283__18;
G__33283.cljs$core$IFn$_invoke$arity$19 = G__33283__19;
G__33283.cljs$core$IFn$_invoke$arity$20 = G__33283__20;
G__33283.cljs$core$IFn$_invoke$arity$21 = G__33283__21;
G__33283.cljs$core$IFn$_invoke$arity$22 = G__33283__22;
return G__33283;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args32435){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32435)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32863 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__32863) : self__.dispatch_fn.call(null,G__32863));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32864 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__32864) : target_fn.call(null,G__32864));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32865 = a;
var G__32866 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__32865,G__32866) : self__.dispatch_fn.call(null,G__32865,G__32866));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32867 = a;
var G__32868 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__32867,G__32868) : target_fn.call(null,G__32867,G__32868));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32869 = a;
var G__32870 = b;
var G__32871 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__32869,G__32870,G__32871) : self__.dispatch_fn.call(null,G__32869,G__32870,G__32871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32872 = a;
var G__32873 = b;
var G__32874 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__32872,G__32873,G__32874) : target_fn.call(null,G__32872,G__32873,G__32874));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32875 = a;
var G__32876 = b;
var G__32877 = c;
var G__32878 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__32875,G__32876,G__32877,G__32878) : self__.dispatch_fn.call(null,G__32875,G__32876,G__32877,G__32878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32879 = a;
var G__32880 = b;
var G__32881 = c;
var G__32882 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__32879,G__32880,G__32881,G__32882) : target_fn.call(null,G__32879,G__32880,G__32881,G__32882));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32883 = a;
var G__32884 = b;
var G__32885 = c;
var G__32886 = d;
var G__32887 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__32883,G__32884,G__32885,G__32886,G__32887) : self__.dispatch_fn.call(null,G__32883,G__32884,G__32885,G__32886,G__32887));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32888 = a;
var G__32889 = b;
var G__32890 = c;
var G__32891 = d;
var G__32892 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__32888,G__32889,G__32890,G__32891,G__32892) : target_fn.call(null,G__32888,G__32889,G__32890,G__32891,G__32892));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32893 = a;
var G__32894 = b;
var G__32895 = c;
var G__32896 = d;
var G__32897 = e;
var G__32898 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__32893,G__32894,G__32895,G__32896,G__32897,G__32898) : self__.dispatch_fn.call(null,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32899 = a;
var G__32900 = b;
var G__32901 = c;
var G__32902 = d;
var G__32903 = e;
var G__32904 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__32899,G__32900,G__32901,G__32902,G__32903,G__32904) : target_fn.call(null,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32905 = a;
var G__32906 = b;
var G__32907 = c;
var G__32908 = d;
var G__32909 = e;
var G__32910 = f;
var G__32911 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911) : self__.dispatch_fn.call(null,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32912 = a;
var G__32913 = b;
var G__32914 = c;
var G__32915 = d;
var G__32916 = e;
var G__32917 = f;
var G__32918 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918) : target_fn.call(null,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32919 = a;
var G__32920 = b;
var G__32921 = c;
var G__32922 = d;
var G__32923 = e;
var G__32924 = f;
var G__32925 = g;
var G__32926 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__32919,G__32920,G__32921,G__32922,G__32923,G__32924,G__32925,G__32926) : self__.dispatch_fn.call(null,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924,G__32925,G__32926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32927 = a;
var G__32928 = b;
var G__32929 = c;
var G__32930 = d;
var G__32931 = e;
var G__32932 = f;
var G__32933 = g;
var G__32934 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934) : target_fn.call(null,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32935 = a;
var G__32936 = b;
var G__32937 = c;
var G__32938 = d;
var G__32939 = e;
var G__32940 = f;
var G__32941 = g;
var G__32942 = h;
var G__32943 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943) : self__.dispatch_fn.call(null,G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32944 = a;
var G__32945 = b;
var G__32946 = c;
var G__32947 = d;
var G__32948 = e;
var G__32949 = f;
var G__32950 = g;
var G__32951 = h;
var G__32952 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__32944,G__32945,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952) : target_fn.call(null,G__32944,G__32945,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32953 = a;
var G__32954 = b;
var G__32955 = c;
var G__32956 = d;
var G__32957 = e;
var G__32958 = f;
var G__32959 = g;
var G__32960 = h;
var G__32961 = i;
var G__32962 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962) : self__.dispatch_fn.call(null,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32963 = a;
var G__32964 = b;
var G__32965 = c;
var G__32966 = d;
var G__32967 = e;
var G__32968 = f;
var G__32969 = g;
var G__32970 = h;
var G__32971 = i;
var G__32972 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__32963,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972) : target_fn.call(null,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32973 = a;
var G__32974 = b;
var G__32975 = c;
var G__32976 = d;
var G__32977 = e;
var G__32978 = f;
var G__32979 = g;
var G__32980 = h;
var G__32981 = i;
var G__32982 = j;
var G__32983 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983) : self__.dispatch_fn.call(null,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__32984 = a;
var G__32985 = b;
var G__32986 = c;
var G__32987 = d;
var G__32988 = e;
var G__32989 = f;
var G__32990 = g;
var G__32991 = h;
var G__32992 = i;
var G__32993 = j;
var G__32994 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__32984,G__32985,G__32986,G__32987,G__32988,G__32989,G__32990,G__32991,G__32992,G__32993,G__32994) : target_fn.call(null,G__32984,G__32985,G__32986,G__32987,G__32988,G__32989,G__32990,G__32991,G__32992,G__32993,G__32994));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__32995 = a;
var G__32996 = b;
var G__32997 = c;
var G__32998 = d;
var G__32999 = e;
var G__33000 = f;
var G__33001 = g;
var G__33002 = h;
var G__33003 = i;
var G__33004 = j;
var G__33005 = k;
var G__33006 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__32995,G__32996,G__32997,G__32998,G__32999,G__33000,G__33001,G__33002,G__33003,G__33004,G__33005,G__33006) : self__.dispatch_fn.call(null,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000,G__33001,G__33002,G__33003,G__33004,G__33005,G__33006));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33007 = a;
var G__33008 = b;
var G__33009 = c;
var G__33010 = d;
var G__33011 = e;
var G__33012 = f;
var G__33013 = g;
var G__33014 = h;
var G__33015 = i;
var G__33016 = j;
var G__33017 = k;
var G__33018 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__33007,G__33008,G__33009,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018) : target_fn.call(null,G__33007,G__33008,G__33009,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33019 = a;
var G__33020 = b;
var G__33021 = c;
var G__33022 = d;
var G__33023 = e;
var G__33024 = f;
var G__33025 = g;
var G__33026 = h;
var G__33027 = i;
var G__33028 = j;
var G__33029 = k;
var G__33030 = l;
var G__33031 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__33019,G__33020,G__33021,G__33022,G__33023,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029,G__33030,G__33031) : self__.dispatch_fn.call(null,G__33019,G__33020,G__33021,G__33022,G__33023,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029,G__33030,G__33031));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33032 = a;
var G__33033 = b;
var G__33034 = c;
var G__33035 = d;
var G__33036 = e;
var G__33037 = f;
var G__33038 = g;
var G__33039 = h;
var G__33040 = i;
var G__33041 = j;
var G__33042 = k;
var G__33043 = l;
var G__33044 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039,G__33040,G__33041,G__33042,G__33043,G__33044) : target_fn.call(null,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039,G__33040,G__33041,G__33042,G__33043,G__33044));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33045 = a;
var G__33046 = b;
var G__33047 = c;
var G__33048 = d;
var G__33049 = e;
var G__33050 = f;
var G__33051 = g;
var G__33052 = h;
var G__33053 = i;
var G__33054 = j;
var G__33055 = k;
var G__33056 = l;
var G__33057 = m;
var G__33058 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__33045,G__33046,G__33047,G__33048,G__33049,G__33050,G__33051,G__33052,G__33053,G__33054,G__33055,G__33056,G__33057,G__33058) : self__.dispatch_fn.call(null,G__33045,G__33046,G__33047,G__33048,G__33049,G__33050,G__33051,G__33052,G__33053,G__33054,G__33055,G__33056,G__33057,G__33058));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33059 = a;
var G__33060 = b;
var G__33061 = c;
var G__33062 = d;
var G__33063 = e;
var G__33064 = f;
var G__33065 = g;
var G__33066 = h;
var G__33067 = i;
var G__33068 = j;
var G__33069 = k;
var G__33070 = l;
var G__33071 = m;
var G__33072 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__33059,G__33060,G__33061,G__33062,G__33063,G__33064,G__33065,G__33066,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072) : target_fn.call(null,G__33059,G__33060,G__33061,G__33062,G__33063,G__33064,G__33065,G__33066,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33073 = a;
var G__33074 = b;
var G__33075 = c;
var G__33076 = d;
var G__33077 = e;
var G__33078 = f;
var G__33079 = g;
var G__33080 = h;
var G__33081 = i;
var G__33082 = j;
var G__33083 = k;
var G__33084 = l;
var G__33085 = m;
var G__33086 = n;
var G__33087 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__33073,G__33074,G__33075,G__33076,G__33077,G__33078,G__33079,G__33080,G__33081,G__33082,G__33083,G__33084,G__33085,G__33086,G__33087) : self__.dispatch_fn.call(null,G__33073,G__33074,G__33075,G__33076,G__33077,G__33078,G__33079,G__33080,G__33081,G__33082,G__33083,G__33084,G__33085,G__33086,G__33087));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33088 = a;
var G__33089 = b;
var G__33090 = c;
var G__33091 = d;
var G__33092 = e;
var G__33093 = f;
var G__33094 = g;
var G__33095 = h;
var G__33096 = i;
var G__33097 = j;
var G__33098 = k;
var G__33099 = l;
var G__33100 = m;
var G__33101 = n;
var G__33102 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__33088,G__33089,G__33090,G__33091,G__33092,G__33093,G__33094,G__33095,G__33096,G__33097,G__33098,G__33099,G__33100,G__33101,G__33102) : target_fn.call(null,G__33088,G__33089,G__33090,G__33091,G__33092,G__33093,G__33094,G__33095,G__33096,G__33097,G__33098,G__33099,G__33100,G__33101,G__33102));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33103 = a;
var G__33104 = b;
var G__33105 = c;
var G__33106 = d;
var G__33107 = e;
var G__33108 = f;
var G__33109 = g;
var G__33110 = h;
var G__33111 = i;
var G__33112 = j;
var G__33113 = k;
var G__33114 = l;
var G__33115 = m;
var G__33116 = n;
var G__33117 = o;
var G__33118 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__33103,G__33104,G__33105,G__33106,G__33107,G__33108,G__33109,G__33110,G__33111,G__33112,G__33113,G__33114,G__33115,G__33116,G__33117,G__33118) : self__.dispatch_fn.call(null,G__33103,G__33104,G__33105,G__33106,G__33107,G__33108,G__33109,G__33110,G__33111,G__33112,G__33113,G__33114,G__33115,G__33116,G__33117,G__33118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33119 = a;
var G__33120 = b;
var G__33121 = c;
var G__33122 = d;
var G__33123 = e;
var G__33124 = f;
var G__33125 = g;
var G__33126 = h;
var G__33127 = i;
var G__33128 = j;
var G__33129 = k;
var G__33130 = l;
var G__33131 = m;
var G__33132 = n;
var G__33133 = o;
var G__33134 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__33119,G__33120,G__33121,G__33122,G__33123,G__33124,G__33125,G__33126,G__33127,G__33128,G__33129,G__33130,G__33131,G__33132,G__33133,G__33134) : target_fn.call(null,G__33119,G__33120,G__33121,G__33122,G__33123,G__33124,G__33125,G__33126,G__33127,G__33128,G__33129,G__33130,G__33131,G__33132,G__33133,G__33134));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33135 = a;
var G__33136 = b;
var G__33137 = c;
var G__33138 = d;
var G__33139 = e;
var G__33140 = f;
var G__33141 = g;
var G__33142 = h;
var G__33143 = i;
var G__33144 = j;
var G__33145 = k;
var G__33146 = l;
var G__33147 = m;
var G__33148 = n;
var G__33149 = o;
var G__33150 = p;
var G__33151 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__33135,G__33136,G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143,G__33144,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150,G__33151) : self__.dispatch_fn.call(null,G__33135,G__33136,G__33137,G__33138,G__33139,G__33140,G__33141,G__33142,G__33143,G__33144,G__33145,G__33146,G__33147,G__33148,G__33149,G__33150,G__33151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33152 = a;
var G__33153 = b;
var G__33154 = c;
var G__33155 = d;
var G__33156 = e;
var G__33157 = f;
var G__33158 = g;
var G__33159 = h;
var G__33160 = i;
var G__33161 = j;
var G__33162 = k;
var G__33163 = l;
var G__33164 = m;
var G__33165 = n;
var G__33166 = o;
var G__33167 = p;
var G__33168 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159,G__33160,G__33161,G__33162,G__33163,G__33164,G__33165,G__33166,G__33167,G__33168) : target_fn.call(null,G__33152,G__33153,G__33154,G__33155,G__33156,G__33157,G__33158,G__33159,G__33160,G__33161,G__33162,G__33163,G__33164,G__33165,G__33166,G__33167,G__33168));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33169 = a;
var G__33170 = b;
var G__33171 = c;
var G__33172 = d;
var G__33173 = e;
var G__33174 = f;
var G__33175 = g;
var G__33176 = h;
var G__33177 = i;
var G__33178 = j;
var G__33179 = k;
var G__33180 = l;
var G__33181 = m;
var G__33182 = n;
var G__33183 = o;
var G__33184 = p;
var G__33185 = q;
var G__33186 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175,G__33176,G__33177,G__33178,G__33179,G__33180,G__33181,G__33182,G__33183,G__33184,G__33185,G__33186) : self__.dispatch_fn.call(null,G__33169,G__33170,G__33171,G__33172,G__33173,G__33174,G__33175,G__33176,G__33177,G__33178,G__33179,G__33180,G__33181,G__33182,G__33183,G__33184,G__33185,G__33186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33187 = a;
var G__33188 = b;
var G__33189 = c;
var G__33190 = d;
var G__33191 = e;
var G__33192 = f;
var G__33193 = g;
var G__33194 = h;
var G__33195 = i;
var G__33196 = j;
var G__33197 = k;
var G__33198 = l;
var G__33199 = m;
var G__33200 = n;
var G__33201 = o;
var G__33202 = p;
var G__33203 = q;
var G__33204 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__33187,G__33188,G__33189,G__33190,G__33191,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197,G__33198,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204) : target_fn.call(null,G__33187,G__33188,G__33189,G__33190,G__33191,G__33192,G__33193,G__33194,G__33195,G__33196,G__33197,G__33198,G__33199,G__33200,G__33201,G__33202,G__33203,G__33204));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33205 = a;
var G__33206 = b;
var G__33207 = c;
var G__33208 = d;
var G__33209 = e;
var G__33210 = f;
var G__33211 = g;
var G__33212 = h;
var G__33213 = i;
var G__33214 = j;
var G__33215 = k;
var G__33216 = l;
var G__33217 = m;
var G__33218 = n;
var G__33219 = o;
var G__33220 = p;
var G__33221 = q;
var G__33222 = r;
var G__33223 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__33205,G__33206,G__33207,G__33208,G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216,G__33217,G__33218,G__33219,G__33220,G__33221,G__33222,G__33223) : self__.dispatch_fn.call(null,G__33205,G__33206,G__33207,G__33208,G__33209,G__33210,G__33211,G__33212,G__33213,G__33214,G__33215,G__33216,G__33217,G__33218,G__33219,G__33220,G__33221,G__33222,G__33223));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33224 = a;
var G__33225 = b;
var G__33226 = c;
var G__33227 = d;
var G__33228 = e;
var G__33229 = f;
var G__33230 = g;
var G__33231 = h;
var G__33232 = i;
var G__33233 = j;
var G__33234 = k;
var G__33235 = l;
var G__33236 = m;
var G__33237 = n;
var G__33238 = o;
var G__33239 = p;
var G__33240 = q;
var G__33241 = r;
var G__33242 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__33224,G__33225,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231,G__33232,G__33233,G__33234,G__33235,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242) : target_fn.call(null,G__33224,G__33225,G__33226,G__33227,G__33228,G__33229,G__33230,G__33231,G__33232,G__33233,G__33234,G__33235,G__33236,G__33237,G__33238,G__33239,G__33240,G__33241,G__33242));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__33243 = a;
var G__33244 = b;
var G__33245 = c;
var G__33246 = d;
var G__33247 = e;
var G__33248 = f;
var G__33249 = g;
var G__33250 = h;
var G__33251 = i;
var G__33252 = j;
var G__33253 = k;
var G__33254 = l;
var G__33255 = m;
var G__33256 = n;
var G__33257 = o;
var G__33258 = p;
var G__33259 = q;
var G__33260 = r;
var G__33261 = s;
var G__33262 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__33243,G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255,G__33256,G__33257,G__33258,G__33259,G__33260,G__33261,G__33262) : self__.dispatch_fn.call(null,G__33243,G__33244,G__33245,G__33246,G__33247,G__33248,G__33249,G__33250,G__33251,G__33252,G__33253,G__33254,G__33255,G__33256,G__33257,G__33258,G__33259,G__33260,G__33261,G__33262));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__33263 = a;
var G__33264 = b;
var G__33265 = c;
var G__33266 = d;
var G__33267 = e;
var G__33268 = f;
var G__33269 = g;
var G__33270 = h;
var G__33271 = i;
var G__33272 = j;
var G__33273 = k;
var G__33274 = l;
var G__33275 = m;
var G__33276 = n;
var G__33277 = o;
var G__33278 = p;
var G__33279 = q;
var G__33280 = r;
var G__33281 = s;
var G__33282 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277,G__33278,G__33279,G__33280,G__33281,G__33282) : target_fn.call(null,G__33263,G__33264,G__33265,G__33266,G__33267,G__33268,G__33269,G__33270,G__33271,G__33272,G__33273,G__33274,G__33275,G__33276,G__33277,G__33278,G__33279,G__33280,G__33281,G__33282));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33284 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__33284);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__26326__auto__,writer__26327__auto__,opt__26328__auto__){
return cljs.core._write(writer__26327__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__33289 = x;
var G__33290 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__33289,G__33290) : pred.call(null,G__33289,G__33290));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__33291 = y;
var G__33292 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__33291,G__33292) : pred.call(null,G__33291,G__33292));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
